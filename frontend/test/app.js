// Generated by purs bundle 0.13.6
var PS = {};
(function(exports) {
  /* global XMLHttpRequest */
  /* global process */
  "use strict";

  exports._ajax = function () {
    var platformSpecific = { };
    if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
      // We are on node.js
      platformSpecific.newXHR = function () {
        var XHR = module.require("xhr2");
        return new XHR();
      };

      platformSpecific.fixupUrl = function (url, xhr) {
        if (xhr.nodejsBaseUrl === null) {
          var urllib = module.require("url");
          var u = urllib.parse(url);
          u.protocol = u.protocol || "http:";
          u.hostname = u.hostname || "localhost";
          return urllib.format(u);
        } else {
          return url || "/";
        }
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    } else {
      // We are in the browser
      platformSpecific.newXHR = function () {
        return new XMLHttpRequest();
      };

      platformSpecific.fixupUrl = function (url) {
        return url || "/";
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    }

    return function (mkHeader, options) {
      return function (errback, callback) {
        var xhr = platformSpecific.newXHR();
        var fixedUrl = platformSpecific.fixupUrl(options.url, xhr);
        xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
        if (options.headers) {
          try {
            for (var i = 0, header; (header = options.headers[i]) != null; i++) {
              xhr.setRequestHeader(header.field, header.value);
            }
          } catch (e) {
            errback(e);
          }
        }
        var onerror = function (msg) {
          return function () {
            errback(new Error(msg + ": " + options.method + " " + options.url));
          };
        };
        xhr.onerror = onerror("AJAX request failed");
        xhr.ontimeout = onerror("AJAX request timed out");
        xhr.onload = function () {
          callback({
            status: xhr.status,
            statusText: xhr.statusText,
            headers: xhr.getAllResponseHeaders().split("\r\n")
              .filter(function (header) {
                return header.length > 0;
              })
              .map(function (header) {
                var i = header.indexOf(":");
                return mkHeader(header.substring(0, i))(header.substring(i + 2));
              }),
            body: platformSpecific.getResponse(xhr)
          });
        };
        xhr.responseType = options.responseType;
        xhr.withCredentials = options.withCredentials;
        xhr.send(options.content);

        return function (error, cancelErrback, cancelCallback) {
          try {
            xhr.abort();
          } catch (e) {
            return cancelErrback(e);
          }
          return cancelCallback();
        };
      };
    };
  }();
})(PS["Affjax"] = PS["Affjax"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                          
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Alternative"] = $PS["Control.Alternative"] || {};
  var exports = $PS["Control.Alternative"];              
  var Alternative = function (Applicative0, Plus1) {
      this.Applicative0 = Applicative0;
      this.Plus1 = Plus1;
  };
  exports["Alternative"] = Alternative;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["compose"] = compose;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];                    
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
  exports["on"] = on;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  var flap = function (dictFunctor) {
      return function (ff) {
          return function (x) {
              return map(dictFunctor)(function (f) {
                  return f(x);
              })(ff);
          };
      };
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["flap"] = flap;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];                
  var Discard = function (discard) {
      this.discard = discard;
  };
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var unlessM = function (dictMonad) {
      return function (mb) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
                  return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
  exports["unlessM"] = unlessM;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];                   
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.MonadZero"] = $PS["Control.MonadZero"] || {};
  var exports = $PS["Control.MonadZero"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Unit = $PS["Data.Unit"];                
  var MonadZero = function (Alternative1, Monad0) {
      this.Alternative1 = Alternative1;
      this.Monad0 = Monad0;
  }; 
  var guard = function (dictMonadZero) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
          };
          throw new Error("Failed pattern match at Control.MonadZero (line 54, column 1 - line 54, column 52): " + [ v.constructor.name ]);
      };
  };
  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
})(PS);
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;   
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs === ys) return true;
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeHas = function (label) {
    return function (rec) {
      return {}.hasOwnProperty.call(rec, label);
    };
  };

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeHas"] = $foreign.unsafeHas;
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var EqRecord = function (eqRecord) {
      this.eqRecord = eqRecord;
  };
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqUnit = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqString = new Eq($foreign.eqStringImpl);
  var eqRowNil = new EqRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return true;
          };
      };
  });
  var eqRecord = function (dict) {
      return dict.eqRecord;
  };
  var eqRec = function (dictRowToList) {
      return function (dictEqRecord) {
          return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
      };
  };                                           
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eqBoolean = new Eq($foreign.eqBooleanImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  }; 
  var eqRowCons = function (dictEqRecord) {
      return function (dictCons) {
          return function (dictIsSymbol) {
              return function (dictEq) {
                  return new EqRecord(function (v) {
                      return function (ra) {
                          return function (rb) {
                              var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var get = Record_Unsafe.unsafeGet(key);
                              return eq(dictEq)(get(ra))(get(rb)) && tail;
                          };
                      };
                  });
              };
          };
      };
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqArray"] = eqArray;
  exports["eqRec"] = eqRec;
  exports["eqRowNil"] = eqRowNil;
  exports["eqRowCons"] = eqRowCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];          
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var monadMaybe = new Control_Monad.Monad(function () {
      return applicativeMaybe;
  }, function () {
      return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
      return altMaybe;
  }, Nothing.value);
  var alternativeMaybe = new Control_Alternative.Alternative(function () {
      return applicativeMaybe;
  }, function () {
      return plusMaybe;
  });
  var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
      return alternativeMaybe;
  }, function () {
      return monadMaybe;
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadZeroMaybe"] = monadZeroMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.MediaType.Common"] = $PS["Data.MediaType.Common"] || {};
  var exports = $PS["Data.MediaType.Common"];          
  var applicationJSON = "application/json";
  var applicationFormURLEncoded = "application/x-www-form-urlencoded";
  exports["applicationFormURLEncoded"] = applicationFormURLEncoded;
  exports["applicationJSON"] = applicationJSON;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Affjax.RequestBody"] = $PS["Affjax.RequestBody"] || {};
  var exports = $PS["Affjax.RequestBody"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];                
  var ArrayView = (function () {
      function ArrayView(value0) {
          this.value0 = value0;
      };
      ArrayView.create = function (value0) {
          return new ArrayView(value0);
      };
      return ArrayView;
  })();
  var Blob = (function () {
      function Blob(value0) {
          this.value0 = value0;
      };
      Blob.create = function (value0) {
          return new Blob(value0);
      };
      return Blob;
  })();
  var Document = (function () {
      function Document(value0) {
          this.value0 = value0;
      };
      Document.create = function (value0) {
          return new Document(value0);
      };
      return Document;
  })();
  var $$String = (function () {
      function $$String(value0) {
          this.value0 = value0;
      };
      $$String.create = function (value0) {
          return new $$String(value0);
      };
      return $$String;
  })();
  var FormData = (function () {
      function FormData(value0) {
          this.value0 = value0;
      };
      FormData.create = function (value0) {
          return new FormData(value0);
      };
      return FormData;
  })();
  var FormURLEncoded = (function () {
      function FormURLEncoded(value0) {
          this.value0 = value0;
      };
      FormURLEncoded.create = function (value0) {
          return new FormURLEncoded(value0);
      };
      return FormURLEncoded;
  })();
  var Json = (function () {
      function Json(value0) {
          this.value0 = value0;
      };
      Json.create = function (value0) {
          return new Json(value0);
      };
      return Json;
  })();
  var toMediaType = function (v) {
      if (v instanceof FormURLEncoded) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationFormURLEncoded);
      };
      if (v instanceof Json) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
      };
      return Data_Maybe.Nothing.value;
  };
  var string = $$String.create;
  exports["ArrayView"] = ArrayView;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["String"] = $$String;
  exports["FormData"] = FormData;
  exports["FormURLEncoded"] = FormURLEncoded;
  exports["Json"] = Json;
  exports["string"] = string;
  exports["toMediaType"] = toMediaType;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupUnit = new Semigroup(function (v) {
      return function (v1) {
          return Data_Unit.unit;
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };
  var monoidUnit = new Monoid(function () {
      return Data_Semigroup.semigroupUnit;
  }, Data_Unit.unit);
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");                    
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidUnit"] = monoidUnit;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Monoid.Conj"] = $PS["Data.Monoid.Conj"] || {};
  var exports = $PS["Data.Monoid.Conj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["monoidConj"] = monoidConj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];                      
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  var $90 = wrap(dictNewtype1);
                  var $91 = unwrap(dictNewtype);
                  return function ($92) {
                      return $90(f($91($92)));
                  };
              };
          };
      };
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var newtypeConj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Conj.Conj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
                          var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
                          return function ($98) {
                              return $96(f($97($98)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["over"] = over;
  exports["newtypeConj"] = newtypeConj;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.MediaType"] = $PS["Data.MediaType"] || {};
  var exports = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var MediaType = function (x) {
      return x;
  }; 
  var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MediaType);
  exports["newtypeMediaType"] = newtypeMediaType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Affjax.RequestHeader"] = $PS["Affjax.RequestHeader"] || {};
  var exports = $PS["Affjax.RequestHeader"];
  var Data_MediaType = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Accept = (function () {
      function Accept(value0) {
          this.value0 = value0;
      };
      Accept.create = function (value0) {
          return new Accept(value0);
      };
      return Accept;
  })();
  var ContentType = (function () {
      function ContentType(value0) {
          this.value0 = value0;
      };
      ContentType.create = function (value0) {
          return new ContentType(value0);
      };
      return ContentType;
  })();
  var RequestHeader = (function () {
      function RequestHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RequestHeader.create = function (value0) {
          return function (value1) {
              return new RequestHeader(value0, value1);
          };
      };
      return RequestHeader;
  })();
  var value = function (v) {
      if (v instanceof Accept) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof ContentType) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof RequestHeader) {
          return v.value1;
      };
      throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [ v.constructor.name ]);
  }; 
  var name = function (v) {
      if (v instanceof Accept) {
          return "Accept";
      };
      if (v instanceof ContentType) {
          return "Content-Type";
      };
      if (v instanceof RequestHeader) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [ v.constructor.name ]);
  };
  exports["Accept"] = Accept;
  exports["ContentType"] = ContentType;
  exports["name"] = name;
  exports["value"] = value;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Affjax.ResponseFormat"] = $PS["Affjax.ResponseFormat"] || {};
  var exports = $PS["Affjax.ResponseFormat"];
  var Control_Category = $PS["Control.Category"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];
  var $$ArrayBuffer = (function () {
      function $$ArrayBuffer(value0) {
          this.value0 = value0;
      };
      $$ArrayBuffer.create = function (value0) {
          return new $$ArrayBuffer(value0);
      };
      return $$ArrayBuffer;
  })();
  var Blob = (function () {
      function Blob(value0) {
          this.value0 = value0;
      };
      Blob.create = function (value0) {
          return new Blob(value0);
      };
      return Blob;
  })();
  var Document = (function () {
      function Document(value0) {
          this.value0 = value0;
      };
      Document.create = function (value0) {
          return new Document(value0);
      };
      return Document;
  })();
  var Json = (function () {
      function Json(value0) {
          this.value0 = value0;
      };
      Json.create = function (value0) {
          return new Json(value0);
      };
      return Json;
  })();
  var $$String = (function () {
      function $$String(value0) {
          this.value0 = value0;
      };
      $$String.create = function (value0) {
          return new $$String(value0);
      };
      return $$String;
  })();
  var Ignore = (function () {
      function Ignore(value0) {
          this.value0 = value0;
      };
      Ignore.create = function (value0) {
          return new Ignore(value0);
      };
      return Ignore;
  })();
  var toResponseType = function (v) {
      if (v instanceof $$ArrayBuffer) {
          return "arraybuffer";
      };
      if (v instanceof Blob) {
          return "blob";
      };
      if (v instanceof Document) {
          return "document";
      };
      if (v instanceof Json) {
          return "text";
      };
      if (v instanceof $$String) {
          return "text";
      };
      if (v instanceof Ignore) {
          return "";
      };
      throw new Error("Failed pattern match at Affjax.ResponseFormat (line 46, column 3 - line 52, column 19): " + [ v.constructor.name ]);
  };
  var toMediaType = function (v) {
      if (v instanceof Json) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
      };
      return Data_Maybe.Nothing.value;
  };
  var string = new $$String(Control_Category.identity(Control_Category.categoryFn));
  var ignore = new Ignore(Control_Category.identity(Control_Category.categoryFn));
  exports["ArrayBuffer"] = $$ArrayBuffer;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["Json"] = Json;
  exports["String"] = $$String;
  exports["Ignore"] = Ignore;
  exports["string"] = string;
  exports["ignore"] = ignore;
  exports["toResponseType"] = toResponseType;
  exports["toMediaType"] = toMediaType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Affjax.ResponseHeader"] = $PS["Affjax.ResponseHeader"] || {};
  var exports = $PS["Affjax.ResponseHeader"];      
  var ResponseHeader = (function () {
      function ResponseHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseHeader.create = function (value0) {
          return function (value1) {
              return new ResponseHeader(value0, value1);
          };
      };
      return ResponseHeader;
  })();
  exports["ResponseHeader"] = ResponseHeader;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];                
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
  exports["rmap"] = rmap;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };

  exports.ordBooleanImpl = unsafeCompareImpl;
  exports.ordIntImpl = unsafeCompareImpl;   
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];
  var Data_Eq = $PS["Data.Eq"];                    
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var eqOrdering = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof LT && v1 instanceof LT) {
              return true;
          };
          if (v instanceof GT && v1 instanceof GT) {
              return true;
          };
          if (v instanceof EQ && v1 instanceof EQ) {
              return true;
          };
          return false;
      };
  });
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["eqOrdering"] = eqOrdering;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  var negate = function (dictRing) {
      return function (a) {
          return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
      };
  };
  exports["negate"] = negate;
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordUnit = new Ord(function () {
      return Data_Eq.eqUnit;
  }, function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordBoolean = new Ord(function () {
      return Data_Eq.eqBoolean;
  }, $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var lessThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var lessThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return false;
              };
              return true;
          };
      };
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  var abs = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $53 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($53) {
                  return x;
              };
              return Data_Ring.negate(dictRing)(x);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["lessThan"] = lessThan;
  exports["lessThanOrEq"] = lessThanOrEq;
  exports["max"] = max;
  exports["abs"] = abs;
  exports["ordBoolean"] = ordBoolean;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordUnit"] = ordUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Unit = $PS["Data.Unit"];                
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var oneOf = function (dictFoldable) {
      return function (dictPlus) {
          return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
      };
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $197 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($198) {
                      return $197(f($198));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var indexl = function (dictFoldable) {
      return function (idx) {
          var go = function (cursor) {
              return function (a) {
                  if (cursor.elem instanceof Data_Maybe.Just) {
                      return cursor;
                  };
                  var $109 = cursor.pos === idx;
                  if ($109) {
                      return {
                          elem: new Data_Maybe.Just(a),
                          pos: cursor.pos
                      };
                  };
                  return {
                      pos: cursor.pos + 1 | 0,
                      elem: cursor.elem
                  };
              };
          };
          var $199 = foldl(dictFoldable)(go)({
              elem: Data_Maybe.Nothing.value,
              pos: 0
          });
          return function ($200) {
              return (function (v) {
                  return v.elem;
              })($199($200));
          };
      };
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var minimumBy = function (dictFoldable) {
      return function (cmp) {
          var min$prime = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return new Data_Maybe.Just(v1);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just((function () {
                          var $120 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
                          if ($120) {
                              return v.value0;
                          };
                          return v1;
                      })());
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 402, column 3 - line 402, column 27): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
      };
  };
  var minimum = function (dictOrd) {
      return function (dictFoldable) {
          return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
      };
  };
  var sum = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          var $204 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
          var $205 = Data_Eq.eq(dictEq);
          return function ($206) {
              return $204($205($206));
          };
      };
  };
  var notElem = function (dictFoldable) {
      return function (dictEq) {
          return function (x) {
              var $207 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
              var $208 = elem(dictFoldable)(dictEq)(x);
              return function ($209) {
                  return $207($208($209));
              };
          };
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeConj)(Data_Newtype.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["oneOf"] = oneOf;
  exports["intercalate"] = intercalate;
  exports["all"] = all;
  exports["any"] = any;
  exports["sum"] = sum;
  exports["notElem"] = notElem;
  exports["indexl"] = indexl;
  exports["minimum"] = minimum;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Show = $PS["Data.Show"];                
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var showEither = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              if (v instanceof Left) {
                  return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
              };
              if (v instanceof Right) {
                  return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
              };
              throw new Error("Failed pattern match at Data.Either (line 163, column 1 - line 165, column 46): " + [ v.constructor.name ]);
          });
      };
  };
  var note = function (a) {
      return Data_Maybe.maybe(new Left(a))(Right.create);
  };
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });                                                                                                     
  var fromRight = function (dictPartial) {
      return function (v) {
          if (v instanceof Right) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Either (line 261, column 1 - line 261, column 52): " + [ v.constructor.name ]);
      };
  };
  var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Left) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Right) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Left) {
                  return z;
              };
              if (v1 instanceof Right) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Left) {
                  return z;
              };
              if (v1 instanceof Right) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                                               
  var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 48, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var monadEither = new Control_Monad.Monad(function () {
      return applicativeEither;
  }, function () {
      return bindEither;
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["isRight"] = isRight;
  exports["fromRight"] = fromRight;
  exports["note"] = note;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
  exports["showEither"] = showEither;
  exports["foldableEither"] = foldableEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                        
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                                                      
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))((function () {
              var $17 = Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0());
              return function ($18) {
                  return $17(Data_Either.Left.create($18));
              };
          })());
      };
  };
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Maybe.First"] = $PS["Data.Maybe.First"] || {};
  var exports = $PS["Data.Maybe.First"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });                                  
  var newtypeFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, First);
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["newtypeFirst"] = newtypeFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];                
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };
  var lookup = function (dictFoldable) {
      return function (dictEq) {
          return function (a) {
              var $312 = Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst);
              var $313 = Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                  var $163 = Data_Eq.eq(dictEq)(a)(v.value0);
                  if ($163) {
                      return new Data_Maybe.Just(v.value1);
                  };
                  return Data_Maybe.Nothing.value;
              });
              return function ($314) {
                  return $312($313($314));
              };
          };
      };
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Tuple(m.value0, f(m.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  }; 
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
              };
          });
      };
  };
  var ordTuple = function (dictOrd) {
      return function (dictOrd1) {
          return new Data_Ord.Ord(function () {
              return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
          }, function (x) {
              return function (y) {
                  var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                  if (v instanceof Data_Ordering.LT) {
                      return Data_Ordering.LT.value;
                  };
                  if (v instanceof Data_Ordering.GT) {
                      return Data_Ordering.GT.value;
                  };
                  return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
              };
          });
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["lookup"] = lookup;
  exports["ordTuple"] = ordTuple;
  exports["functorTuple"] = functorTuple;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              var s$prime = f(s);
              return new Data_Tuple.Tuple(s$prime, s$prime);
          });
      };
  };
  var gets = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(f(s), s);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["gets"] = gets;
  exports["put"] = put;
  exports["modify"] = modify;
  exports["modify_"] = modify_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  };          
  var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
          });
      };
  });
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                  var $90 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($91) {
                      return $90(Data_Either.Left.create($91));
                  };
              })())(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, (function () {
          var $92 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($93) {
              return ExceptT($92(Data_Either.Right.create($93)));
          };
      })());
  };
  var monadStateExceptT = function (dictMonadState) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadExceptT(dictMonadState.Monad0());
      }, function (f) {
          return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, (function () {
          var $102 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($103) {
              return ExceptT($102(Data_Either.Left.create($103)));
          };
      })());
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadTransExceptT"] = monadTransExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
  exports["monadStateExceptT"] = monadStateExceptT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  var mapExcept = function (f) {
      return Control_Monad_Except_Trans.mapExceptT((function () {
          var $2 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
          return function ($3) {
              return Data_Identity.Identity(f($2($3)));
          };
      })());
  };
  exports["runExcept"] = runExcept;
  exports["mapExcept"] = mapExcept;
})(PS);
(function(exports) {
  "use strict";

  function id(x) {
    return x;
  }                      
  exports.fromObject = id;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  function isArray(a) {
    return Object.prototype.toString.call(a) === "[object Array]";
  }
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreach = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var functorST = new Data_Functor.Functor($foreign.map_);
  var monadST = new Control_Monad.Monad(function () {
      return applicativeST;
  }, function () {
      return bindST;
  });
  var bindST = new Control_Bind.Bind(function () {
      return applyST;
  }, $foreign.bind_);
  var applyST = new Control_Apply.Apply(function () {
      return functorST;
  }, Control_Monad.ap(monadST));
  var applicativeST = new Control_Applicative.Applicative(function () {
      return applyST;
  }, $foreign.pure_);
  exports["functorST"] = functorST;
  exports["bindST"] = bindST;
  exports["monadST"] = monadST;
  exports["foreach"] = $foreign.foreach;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };                                                                                                 

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Lazy"] = $PS["Control.Lazy"] || {};
  var exports = $PS["Control.Lazy"];               
  var Lazy = function (defer) {
      this.defer = defer;
  }; 
  var defer = function (dict) {
      return dict.defer;
  };
  exports["defer"] = defer;
  exports["Lazy"] = Lazy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
          };
      };
  };                                                                                     
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array (line 323, column 1 - line 323, column 45): " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var span = function (p) {
      return function (arr) {
          var go = function ($copy_i) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(i) {
                  var v = index(arr)(i);
                  if (v instanceof Data_Maybe.Just) {
                      var $60 = p(v.value0);
                      if ($60) {
                          $copy_i = i + 1 | 0;
                          return;
                      };
                      $tco_done = true;
                      return new Data_Maybe.Just(i);
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Data.Array (line 834, column 5 - line 836, column 25): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_i);
              };
              return $tco_result;
          };
          var breakIndex = go(0);
          if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
              return {
                  init: [  ],
                  rest: arr
              };
          };
          if (breakIndex instanceof Data_Maybe.Just) {
              return {
                  init: $foreign.slice(0)(breakIndex.value0)(arr),
                  rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
              };
          };
          if (breakIndex instanceof Data_Maybe.Nothing) {
              return {
                  init: arr,
                  rest: [  ]
              };
          };
          throw new Error("Failed pattern match at Data.Array (line 821, column 3 - line 827, column 30): " + [ breakIndex.constructor.name ]);
      };
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var elemIndex = function (dictEq) {
      return function (x) {
          return findIndex(function (v) {
              return Data_Eq.eq(dictEq)(v)(x);
          });
      };
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap((function () {
          var $94 = Data_Maybe.maybe([  ])(singleton);
          return function ($95) {
              return $94(f($95));
          };
      })());
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["some"] = some;
  exports["many"] = many;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["last"] = last;
  exports["init"] = init;
  exports["uncons"] = uncons;
  exports["index"] = index;
  exports["elemIndex"] = elemIndex;
  exports["concatMap"] = concatMap;
  exports["mapMaybe"] = mapMaybe;
  exports["catMaybes"] = catMaybes;
  exports["span"] = span;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["reverse"] = $foreign.reverse;
  exports["concat"] = $foreign.concat;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
  exports["zipWith"] = $foreign.zipWith;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Function = $PS["Data.Function"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];              
  var thawST = $foreign["_copyST"];
  var singleton = function (k) {
      return function (v) {
          return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
      };
  };
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var s = thawST(m)();
              f(s)();
              return s;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(Foreign_Object_ST.poke(k)(v));
      };
  };
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return $foreign.runST(function __do() {
              var s = Foreign_Object_ST["new"]();
              Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v) {
                  return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v.value0)(v.value1)(s));
              })();
              return s;
          });
      };
  };
  var foldM = function (dictMonad) {
      return function (f) {
          return function (z) {
              return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
          };
      };
  };
  var union = function (m) {
      return mutate(function (s) {
          return foldM(Control_Monad_ST_Internal.monadST)(function (s$prime) {
              return function (k) {
                  return function (v) {
                      return Foreign_Object_ST.poke(k)(v)(s$prime);
                  };
              };
          })(s)(m);
      });
  };
  var fold = $foreign["_foldM"](Data_Function.applyFlipped);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["union"] = union;
  exports["foldMap"] = foldMap;
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Argonaut.Core"] = $PS["Data.Argonaut.Core"] || {};
  var exports = $PS["Data.Argonaut.Core"];
  var $foreign = $PS["Data.Argonaut.Core"];
  var Foreign_Object = $PS["Foreign.Object"];   
  var jsonEmptyObject = $foreign.fromObject(Foreign_Object.empty);
  exports["jsonEmptyObject"] = jsonEmptyObject;
  exports["stringify"] = $foreign.stringify;
})(PS);
(function(exports) {
  "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Argonaut.Parser"] = $PS["Data.Argonaut.Parser"] || {};
  var exports = $PS["Data.Argonaut.Parser"];
  var $foreign = $PS["Data.Argonaut.Parser"];
  var Data_Either = $PS["Data.Either"];                
  var jsonParser = function (j) {
      return $foreign["_jsonParser"](Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS);
(function(exports) {
  "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];                
  var $$null = function (s) {
      return s === "";
  };
  exports["null"] = $$null;
  exports["split"] = $foreign.split;
  exports["joinWith"] = $foreign.joinWith;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];                                                          
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var traversableMaybe = new Traversable(function () {
      return Data_Foldable.foldableMaybe;
  }, function () {
      return Data_Maybe.functorMaybe;
  }, function (dictApplicative) {
      return function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
          };
          throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 90, column 33): " + [ v.constructor.name ]);
      };
  }, function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 90, column 33): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  };
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["for"] = $$for;
  exports["traversableArray"] = traversableArray;
  exports["traversableMaybe"] = traversableMaybe;
})(PS);
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;                       

  var encdecURI = function (encdec) {
    return function (fail, succ, s) {
      try {
        return succ(encdec(s));
      }
      catch (e) {
        return fail(e.message);
      }
    };
  };                                                          
  exports._encodeURIComponent = encdecURI(encodeURIComponent);
})(PS["Global"] = PS["Global"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var $$encodeURIComponent = function (s) {
      return $foreign["_encodeURIComponent"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, s);
  };
  exports["encodeURIComponent"] = $$encodeURIComponent;
  exports["infinity"] = $foreign.infinity;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.FormURLEncoded"] = $PS["Data.FormURLEncoded"] || {};
  var exports = $PS["Data.FormURLEncoded"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Global = $PS["Global"];
  var toArray = function (v) {
      return v;
  };                                                                                                                 
  var encode = (function () {
      var encodePart = function (v) {
          if (v.value1 instanceof Data_Maybe.Nothing) {
              return Global["encodeURIComponent"](v.value0);
          };
          if (v.value1 instanceof Data_Maybe.Just) {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (key) {
                  return function (val) {
                      return key + ("=" + val);
                  };
              })(Global["encodeURIComponent"](v.value0)))(Global["encodeURIComponent"](v.value1.value0));
          };
          throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 18 - line 39, column 108): " + [ v.constructor.name ]);
      };
      var $19 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.joinWith("&"));
      var $20 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(encodePart);
      return function ($21) {
          return $19($20(toArray($21)));
      };
  })();
  exports["encode"] = encode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.HTTP.Method"] = $PS["Data.HTTP.Method"] || {};
  var exports = $PS["Data.HTTP.Method"];
  var Data_Either = $PS["Data.Either"];
  var Data_Show = $PS["Data.Show"];                                  
  var OPTIONS = (function () {
      function OPTIONS() {

      };
      OPTIONS.value = new OPTIONS();
      return OPTIONS;
  })();
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var HEAD = (function () {
      function HEAD() {

      };
      HEAD.value = new HEAD();
      return HEAD;
  })();
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var PUT = (function () {
      function PUT() {

      };
      PUT.value = new PUT();
      return PUT;
  })();
  var DELETE = (function () {
      function DELETE() {

      };
      DELETE.value = new DELETE();
      return DELETE;
  })();
  var TRACE = (function () {
      function TRACE() {

      };
      TRACE.value = new TRACE();
      return TRACE;
  })();
  var CONNECT = (function () {
      function CONNECT() {

      };
      CONNECT.value = new CONNECT();
      return CONNECT;
  })();
  var PROPFIND = (function () {
      function PROPFIND() {

      };
      PROPFIND.value = new PROPFIND();
      return PROPFIND;
  })();
  var PROPPATCH = (function () {
      function PROPPATCH() {

      };
      PROPPATCH.value = new PROPPATCH();
      return PROPPATCH;
  })();
  var MKCOL = (function () {
      function MKCOL() {

      };
      MKCOL.value = new MKCOL();
      return MKCOL;
  })();
  var COPY = (function () {
      function COPY() {

      };
      COPY.value = new COPY();
      return COPY;
  })();
  var MOVE = (function () {
      function MOVE() {

      };
      MOVE.value = new MOVE();
      return MOVE;
  })();
  var LOCK = (function () {
      function LOCK() {

      };
      LOCK.value = new LOCK();
      return LOCK;
  })();
  var UNLOCK = (function () {
      function UNLOCK() {

      };
      UNLOCK.value = new UNLOCK();
      return UNLOCK;
  })();
  var PATCH = (function () {
      function PATCH() {

      };
      PATCH.value = new PATCH();
      return PATCH;
  })();
  var unCustomMethod = function (v) {
      return v;
  };
  var showMethod = new Data_Show.Show(function (v) {
      if (v instanceof OPTIONS) {
          return "OPTIONS";
      };
      if (v instanceof GET) {
          return "GET";
      };
      if (v instanceof HEAD) {
          return "HEAD";
      };
      if (v instanceof POST) {
          return "POST";
      };
      if (v instanceof PUT) {
          return "PUT";
      };
      if (v instanceof DELETE) {
          return "DELETE";
      };
      if (v instanceof TRACE) {
          return "TRACE";
      };
      if (v instanceof CONNECT) {
          return "CONNECT";
      };
      if (v instanceof PROPFIND) {
          return "PROPFIND";
      };
      if (v instanceof PROPPATCH) {
          return "PROPPATCH";
      };
      if (v instanceof MKCOL) {
          return "MKCOL";
      };
      if (v instanceof COPY) {
          return "COPY";
      };
      if (v instanceof MOVE) {
          return "MOVE";
      };
      if (v instanceof LOCK) {
          return "LOCK";
      };
      if (v instanceof UNLOCK) {
          return "UNLOCK";
      };
      if (v instanceof PATCH) {
          return "PATCH";
      };
      throw new Error("Failed pattern match at Data.HTTP.Method (line 40, column 1 - line 56, column 23): " + [ v.constructor.name ]);
  });
  var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);
  exports["GET"] = GET;
  exports["POST"] = POST;
  exports["print"] = print;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];                    
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
          };
      });
  };
  var foldableNonEmpty = function (dictFoldable) {
      return new Data_Foldable.Foldable(function (dictMonoid) {
          return function (f) {
              return function (v) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
              };
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["functorNonEmpty"] = functorNonEmpty;
  exports["foldableNonEmpty"] = foldableNonEmpty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];                    
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
      return functorNonEmptyList;
  }, function (v) {
      return function (v1) {
          return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
      };
  });
  var bindList = new Control_Bind.Bind(function () {
      return applyList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 162, column 1 - line 164, column 37): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
      return applyNonEmptyList;
  }, (function () {
      var $233 = Data_NonEmpty.singleton(plusList);
      return function ($234) {
          return NonEmptyList($233($234));
      };
  })());
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applicativeList"] = applicativeList;
  exports["bindList"] = bindList;
  exports["plusList"] = plusList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
  exports["foldableNonEmptyList"] = foldableNonEmptyList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var singleton = (function () {
      var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($169) {
          return Data_List_Types.NonEmptyList($168($169));
      };
  })();
  var head = function (v) {
      return v.value0;
  };
  var cons = function (y) {
      return function (v) {
          return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
      };
  };
  exports["singleton"] = singleton;
  exports["cons"] = cons;
  exports["head"] = head;
})(PS);
(function(exports) {
  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS);
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            try {
              step   = bhead(step);
              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail   = util.left(e);
              step   = null;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an unmasked interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an unmasked interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item, and the bracket count is 0. If the
                // bracket count is non-zero then we are in a masked state so it's
                // impossible to be killed.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                bracketCount++;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._fork = function (immediate) {
    return function (aff) {
      return Aff.Fork(immediate, aff);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports._parAffAlt = function (aff1) {
    return function (aff2) {
      return Aff.ParAlt(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports.generalBracket = function (acquire) {
    return function (options) {
      return function (k) {
        return Aff.Bracket(acquire, options, k);
      };
    };
  };

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["modify'"] = $foreign["modify'"];
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  }; 
  var monadRecEffect = new MonadRec(function () {
      return Effect.monadEffect;
  }, function (f) {
      return function (a) {
          var fromDone = function (v) {
              if (v instanceof Done) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [ v.constructor.name ]);
          };
          return function __do() {
              var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
              (function () {
                  while (!(function __do() {
                      var v = Effect_Ref.read(r)();
                      if (v instanceof Loop) {
                          var e = f(v.value0)();
                          Effect_Ref.write(e)(r)();
                          return false;
                      };
                      if (v instanceof Done) {
                          return true;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [ v.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
          };
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["monadRecEffect"] = monadRecEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Parallel.Class"] = $PS["Control.Parallel.Class"] || {};
  var exports = $PS["Control.Parallel.Class"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["Parallel"] = Parallel;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];         
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };                                                         
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };
  var suspendAff = $foreign["_fork"](false);
  var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
  var functorAff = new Data_Functor.Functor($foreign["_map"]);
  var forkAff = $foreign["_fork"](true);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 54): " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 397, column 54): " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign["_makeFiber"](ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var fiber = makeFiber(aff)();
          fiber.run();
          return fiber;
      };
  };
  var launchAff_ = (function () {
      var $43 = Data_Functor["void"](Effect.functorEffect);
      return function ($44) {
          return $43(launchAff($44));
      };
  })();                              
  var delay = function (v) {
      return $foreign["_delay"](Data_Either.Right.create, v);
  };
  var bracket = function (acquire) {
      return function (completed) {
          return $foreign.generalBracket(acquire)({
              killed: Data_Function["const"](completed),
              failed: Data_Function["const"](completed),
              completed: Data_Function["const"](completed)
          });
      };
  };
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, $foreign["_parAffApply"]);
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign["_pure"]);
  var $$finally = function (fin) {
      return function (a) {
          return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
      };
  };
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign["_liftEffect"]);
  var effectCanceler = (function () {
      var $45 = Effect_Class.liftEffect(monadEffectAff);
      return function ($46) {
          return Canceler(Data_Function["const"]($45($46)));
      };
  })();
  var joinFiber = function (v) {
      return $foreign.makeAff(function (k) {
          return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
      });
  };
  var functorFiber = new Data_Functor.Functor(function (f) {
      return function (t) {
          return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
      };
  });
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
              });
          });
      };
  };   
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign["_throwError"]);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign["_catchError"]);                                  
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)((function () {
              var $49 = Effect_Class.liftEffect(monadEffectAff);
              return function ($50) {
                  return $49(k($50));
              };
          })())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
      };
  };
  var parallelAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, (function () {
      var $53 = Control_Parallel_Class.parallel(parallelAff);
      var $54 = Control_Applicative.pure(applicativeAff);
      return function ($55) {
          return $53($54($55));
      };
  })());
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (k) {
      var go = function (a) {
          return Control_Bind.bind(bindAff)(k(a))(function (res) {
              if (res instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeAff)(res.value0);
              };
              if (res instanceof Control_Monad_Rec_Class.Loop) {
                  return go(res.value0);
              };
              throw new Error("Failed pattern match at Effect.Aff (line 100, column 7 - line 102, column 22): " + [ res.constructor.name ]);
          });
      };
      return go;
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  var altParAff = new Control_Alt.Alt(function () {
      return functorParAff;
  }, $foreign["_parAffAlt"]);
  exports["launchAff"] = launchAff;
  exports["launchAff_"] = launchAff_;
  exports["runAff_"] = runAff_;
  exports["forkAff"] = forkAff;
  exports["suspendAff"] = suspendAff;
  exports["delay"] = delay;
  exports["finally"] = $$finally;
  exports["killFiber"] = killFiber;
  exports["joinFiber"] = joinFiber;
  exports["nonCanceler"] = nonCanceler;
  exports["effectCanceler"] = effectCanceler;
  exports["functorAff"] = functorAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["altParAff"] = altParAff;
  exports["parallelAff"] = parallelAff;
  exports["functorFiber"] = functorFiber;
  exports["makeAff"] = $foreign.makeAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Aff.Compat"] = $PS["Effect.Aff.Compat"] || {};
  var exports = $PS["Effect.Aff.Compat"];
  var Data_Either = $PS["Data.Either"];
  var Effect_Aff = $PS["Effect.Aff"];
  var fromEffectFnAff = function (v) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v1 = v(function ($4) {
                  return k(Data_Either.Left.create($4))();
              }, function ($5) {
                  return k(Data_Either.Right.create($5))();
              });
              return function (e) {
                  return Effect_Aff.makeAff(function (k2) {
                      return function __do() {
                          v1(e, function ($6) {
                              return k2(Data_Either.Left.create($6))();
                          }, function ($7) {
                              return k2(Data_Either.Right.create($7))();
                          });
                          return Effect_Aff.nonCanceler;
                      };
                  });
              };
          };
      });
  };
  exports["fromEffectFnAff"] = fromEffectFnAff;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var $$try = function (action) {
      return $foreign.catchException((function () {
          var $0 = Control_Applicative.pure(Effect.applicativeEffect);
          return function ($1) {
              return $0(Data_Either.Left.create($1));
          };
      })())(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
  };
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };
  exports["throw"] = $$throw;
  exports["try"] = $$try;
  exports["error"] = $foreign.error;
  exports["message"] = $foreign.message;
  exports["throwException"] = $foreign.throwException;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };

  exports.isArray = Array.isArray || function (value) {
    return Object.prototype.toString.call(value) === "[object Array]";
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };

  exports.toStringAs = function (radix) {
    return function (i) {
      return i.toString(radix);
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var boundedBoolean = new Bounded(function () {
      return Data_Ord.ordBoolean;
  }, false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedBoolean"] = boundedBoolean;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  "use strict";

  // module Math

  exports.abs = Math.abs;

  exports.floor = Math.floor;

  exports.log = Math.log;

  exports.pow = function (n) {
    return function (p) {
      return Math.pow(n, p);
    };
  };

  exports.round = Math.round;

  exports.ln10 = Math.LN10;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["abs"] = $foreign.abs;
  exports["floor"] = $foreign.floor;
  exports["log"] = $foreign.log;
  exports["pow"] = $foreign.pow;
  exports["round"] = $foreign.round;
  exports["ln10"] = $foreign.ln10;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];
  var hexadecimal = 16;
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var round = function ($23) {
      return unsafeClamp($$Math.round($23));
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };                                                         
  var decimal = 10;
  exports["fromNumber"] = fromNumber;
  exports["floor"] = floor;
  exports["round"] = round;
  exports["fromString"] = fromString;
  exports["decimal"] = decimal;
  exports["hexadecimal"] = hexadecimal;
  exports["fromStringAs"] = fromStringAs;
  exports["toNumber"] = $foreign.toNumber;
  exports["toStringAs"] = $foreign.toStringAs;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Int = $PS["Data.Int"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];                                        
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var renderForeignError = function (v) {
      if (v instanceof ForeignError) {
          return v.value0;
      };
      if (v instanceof ErrorAtIndex) {
          return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof ErrorAtProperty) {
          return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof TypeMismatch) {
          return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
      };
      throw new Error("Failed pattern match at Foreign (line 72, column 1 - line 72, column 45): " + [ v.constructor.name ]);
  };
  var fail = (function () {
      var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
      return function ($108) {
          return $107(Data_List_NonEmpty.singleton($108));
      };
  })();
  var readArray = function (value) {
      if ($foreign.isArray(value)) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      };
      if (Data_Boolean.otherwise) {
          return fail(new TypeMismatch("array", $foreign.tagOf(value)));
      };
      throw new Error("Failed pattern match at Foreign (line 147, column 1 - line 147, column 42): " + [ value.constructor.name ]);
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };                                            
  var readNumber = unsafeReadTagged("Number");
  var readInt = function (value) {
      var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
      var fromNumber = (function () {
          var $109 = Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither));
          return function ($110) {
              return $109(Data_Int.fromNumber($110));
          };
      })();
      return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
  };
  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["renderForeignError"] = renderForeignError;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["readNumber"] = readNumber;
  exports["readInt"] = readInt;
  exports["readArray"] = readArray;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
  exports["tagOf"] = $foreign.tagOf;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Affjax"] = $PS["Affjax"] || {};
  var exports = $PS["Affjax"];
  var $foreign = $PS["Affjax"];
  var Affjax_RequestBody = $PS["Affjax.RequestBody"];
  var Affjax_RequestHeader = $PS["Affjax.RequestHeader"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Affjax_ResponseHeader = $PS["Affjax.ResponseHeader"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Parser = $PS["Data.Argonaut.Parser"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FormURLEncoded = $PS["Data.FormURLEncoded"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Compat = $PS["Effect.Aff.Compat"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign = $PS["Foreign"];                
  var RequestContentError = (function () {
      function RequestContentError(value0) {
          this.value0 = value0;
      };
      RequestContentError.create = function (value0) {
          return new RequestContentError(value0);
      };
      return RequestContentError;
  })();
  var ResponseBodyError = (function () {
      function ResponseBodyError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseBodyError.create = function (value0) {
          return function (value1) {
              return new ResponseBodyError(value0, value1);
          };
      };
      return ResponseBodyError;
  })();
  var XHRError = (function () {
      function XHRError(value0) {
          this.value0 = value0;
      };
      XHRError.create = function (value0) {
          return new XHRError(value0);
      };
      return XHRError;
  })();
  var request = function (req) {
      var parseJSON = function (v) {
          if (v === "") {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Argonaut_Core.jsonEmptyObject);
          };
          return Data_Either.either(function ($47) {
              return Foreign.fail(Foreign.ForeignError.create($47));
          })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Data_Argonaut_Parser.jsonParser(v));
      };
      var fromResponse = (function () {
          if (req.responseFormat instanceof Affjax_ResponseFormat["ArrayBuffer"]) {
              return Foreign.unsafeReadTagged("ArrayBuffer");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Blob) {
              return Foreign.unsafeReadTagged("Blob");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Document) {
              return Foreign.unsafeReadTagged("Document");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Json) {
              return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($48) {
                  return req.responseFormat.value0(parseJSON($48));
              })(Foreign.unsafeReadTagged("String"));
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat["String"]) {
              return Foreign.unsafeReadTagged("String");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Ignore) {
              return Data_Function["const"](req.responseFormat.value0(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)));
          };
          throw new Error("Failed pattern match at Affjax (line 237, column 18 - line 243, column 57): " + [ req.responseFormat.constructor.name ]);
      })();
      var extractContent = function (v) {
          if (v instanceof Affjax_RequestBody.ArrayView) {
              return Data_Either.Right.create(v.value0(Foreign.unsafeToForeign));
          };
          if (v instanceof Affjax_RequestBody.Blob) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.Document) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody["String"]) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.FormData) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.FormURLEncoded) {
              return Data_Either.note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(Data_Functor.map(Data_Maybe.functorMaybe)(Foreign.unsafeToForeign)(Data_FormURLEncoded.encode(v.value0)));
          };
          if (v instanceof Affjax_RequestBody.Json) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(Data_Argonaut_Core.stringify(v.value0)));
          };
          throw new Error("Failed pattern match at Affjax (line 203, column 20 - line 218, column 69): " + [ v.constructor.name ]);
      };
      var addHeader = function (mh) {
          return function (hs) {
              if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Affjax_RequestHeader.name)(mh.value0))(hs)) {
                  return Data_Array.snoc(hs)(mh.value0);
              };
              return hs;
          };
      };
      var headers = function (reqContent) {
          return addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.ContentType.create)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Affjax_RequestBody.toMediaType)(reqContent)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.Accept.create)(Affjax_ResponseFormat.toMediaType(req.responseFormat)))(req.headers));
      };
      var ajaxRequest = function (v) {
          return {
              method: Data_HTTP_Method.print(req.method),
              url: req.url,
              headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                  return {
                      field: Affjax_RequestHeader.name(h),
                      value: Affjax_RequestHeader.value(h)
                  };
              })(headers(req.content)),
              content: v,
              responseType: Affjax_ResponseFormat.toResponseType(req.responseFormat),
              username: Data_Nullable.toNullable(req.username),
              password: Data_Nullable.toNullable(req.password),
              withCredentials: req.withCredentials
          };
      };
      var send = function (content) {
          return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_Compat.fromEffectFnAff($foreign["_ajax"](Affjax_ResponseHeader.ResponseHeader.create, ajaxRequest(content)))))(function (v) {
              if (v instanceof Data_Either.Right) {
                  var v1 = Control_Monad_Except.runExcept(fromResponse(v.value0.body));
                  if (v1 instanceof Data_Either.Left) {
                      return new Data_Either.Left(new ResponseBodyError(Data_List_NonEmpty.head(v1.value0), v.value0));
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return new Data_Either.Right({
                          body: v1.value0,
                          headers: v.value0.headers,
                          status: v.value0.status,
                          statusText: v.value0.statusText
                      });
                  };
                  throw new Error("Failed pattern match at Affjax (line 184, column 9 - line 186, column 52): " + [ v1.constructor.name ]);
              };
              if (v instanceof Data_Either.Left) {
                  return new Data_Either.Left(new XHRError(v.value0));
              };
              throw new Error("Failed pattern match at Affjax (line 182, column 86 - line 188, column 28): " + [ v.constructor.name ]);
          });
      };
      if (req.content instanceof Data_Maybe.Nothing) {
          return send(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
      };
      if (req.content instanceof Data_Maybe.Just) {
          var v = extractContent(req.content.value0);
          if (v instanceof Data_Either.Right) {
              return send(Data_Nullable.toNullable(new Data_Maybe.Just(v.value0)));
          };
          if (v instanceof Data_Either.Left) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(new RequestContentError(v.value0)));
          };
          throw new Error("Failed pattern match at Affjax (line 173, column 7 - line 177, column 48): " + [ v.constructor.name ]);
      };
      throw new Error("Failed pattern match at Affjax (line 169, column 3 - line 177, column 48): " + [ req.content.constructor.name ]);
  };
  var printError = function (v) {
      if (v instanceof RequestContentError) {
          return "There was a problem with the request content: " + v.value0;
      };
      if (v instanceof ResponseBodyError) {
          return "There was a problem with the response body: " + Foreign.renderForeignError(v.value0);
      };
      if (v instanceof XHRError) {
          return "There was a problem making the request: " + Effect_Exception.message(v.value0);
      };
      throw new Error("Failed pattern match at Affjax (line 91, column 14 - line 97, column 66): " + [ v.constructor.name ]);
  };
  var defaultRequest = {
      method: new Data_Either.Left(Data_HTTP_Method.GET.value),
      url: "/",
      headers: [  ],
      content: Data_Maybe.Nothing.value,
      username: Data_Maybe.Nothing.value,
      password: Data_Maybe.Nothing.value,
      withCredentials: false,
      responseFormat: Affjax_ResponseFormat.ignore
  };   
  var get = function (rf) {
      return function (u) {
          return request({
              method: defaultRequest.method,
              url: u,
              headers: defaultRequest.headers,
              content: defaultRequest.content,
              username: defaultRequest.username,
              password: defaultRequest.password,
              withCredentials: defaultRequest.withCredentials,
              responseFormat: rf
          });
      };
  };
  exports["defaultRequest"] = defaultRequest;
  exports["printError"] = printError;
  exports["request"] = request;
  exports["get"] = get;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Reader.Class"] = $PS["Control.Monad.Reader.Class"] || {};
  var exports = $PS["Control.Monad.Reader.Class"];       
  var MonadAsk = function (Monad0, ask) {
      this.Monad0 = Monad0;
      this.ask = ask;
  };
  var ask = function (dict) {
      return dict.ask;
  };
  exports["ask"] = ask;
  exports["MonadAsk"] = MonadAsk;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Reader.Trans"] = $PS["Control.Monad.Reader.Trans"] || {};
  var exports = $PS["Control.Monad.Reader.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Effect_Class = $PS["Effect.Class"];                
  var ReaderT = function (x) {
      return x;
  };
  var runReaderT = function (v) {
      return v;
  };          
  var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($67) {
          return ReaderT(Data_Function["const"]($67));
      };
  });
  var mapReaderT = function (f) {
      return function (v) {
          return function ($68) {
              return f(v($68));
          };
      };
  };
  var functorReaderT = function (dictFunctor) {
      return new Data_Functor.Functor((function () {
          var $69 = Data_Functor.map(dictFunctor);
          return function ($70) {
              return mapReaderT($69($70));
          };
      })());
  };
  var applyReaderT = function (dictApply) {
      return new Control_Apply.Apply(function () {
          return functorReaderT(dictApply.Functor0());
      }, function (v) {
          return function (v1) {
              return function (r) {
                  return Control_Apply.apply(dictApply)(v(r))(v1(r));
              };
          };
      });
  };
  var bindReaderT = function (dictBind) {
      return new Control_Bind.Bind(function () {
          return applyReaderT(dictBind.Apply0());
      }, function (v) {
          return function (k) {
              return function (r) {
                  return Control_Bind.bind(dictBind)(v(r))(function (a) {
                      var v1 = k(a);
                      return v1(r);
                  });
              };
          };
      });
  };
  var semigroupReaderT = function (dictApply) {
      return function (dictSemigroup) {
          return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
      };
  };
  var applicativeReaderT = function (dictApplicative) {
      return new Control_Applicative.Applicative(function () {
          return applyReaderT(dictApplicative.Apply0());
      }, (function () {
          var $74 = Control_Applicative.pure(dictApplicative);
          return function ($75) {
              return ReaderT(Data_Function["const"]($74($75)));
          };
      })());
  };
  var monadReaderT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeReaderT(dictMonad.Applicative0());
      }, function () {
          return bindReaderT(dictMonad.Bind1());
      });
  };
  var monadAskReaderT = function (dictMonad) {
      return new Control_Monad_Reader_Class.MonadAsk(function () {
          return monadReaderT(dictMonad);
      }, Control_Applicative.pure(dictMonad.Applicative0()));
  };
  var monadEffectReader = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadReaderT(dictMonadEffect.Monad0());
      }, (function () {
          var $77 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());
          var $78 = Effect_Class.liftEffect(dictMonadEffect);
          return function ($79) {
              return $77($78($79));
          };
      })());
  };
  exports["runReaderT"] = runReaderT;
  exports["functorReaderT"] = functorReaderT;
  exports["applicativeReaderT"] = applicativeReaderT;
  exports["bindReaderT"] = bindReaderT;
  exports["monadReaderT"] = monadReaderT;
  exports["semigroupReaderT"] = semigroupReaderT;
  exports["monadTransReaderT"] = monadTransReaderT;
  exports["monadEffectReader"] = monadEffectReader;
  exports["monadAskReaderT"] = monadAskReaderT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.State"] = $PS["Control.Monad.State"] || {};
  var exports = $PS["Control.Monad.State"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];              
  var runState = function (v) {
      var $16 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($17) {
          return $16(v($17));
      };
  };
  var evalState = function (v) {
      return function (s) {
          var v1 = v(s);
          return v1.value0;
      };
  };
  exports["runState"] = runState;
  exports["evalState"] = evalState;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                      
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (v) {
      return v;
  };         
  var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return function (s) {
              return Control_Bind.bind(dictMonad.Bind1())(m)(function (x) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(x, s));
              });
          };
      };
  });
  var mapStateT = function (f) {
      return function (v) {
          return function ($106) {
              return f(v($106));
          };
      };
  };
  var lazyStateT = new Control_Lazy.Lazy(function (f) {
      return function (s) {
          var v = f(Data_Unit.unit);
          return v(s);
      };
  });
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var evalStateT = function (dictFunctor) {
      return function (v) {
          return function (s) {
              return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
          };
      };
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                      var v3 = f(v1.value0);
                      return v3(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadStateStateT = function (dictMonad) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(dictMonad);
      }, function (f) {
          return StateT((function () {
              var $112 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($113) {
                  return $112(f($113));
              };
          })());
      });
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["evalStateT"] = evalStateT;
  exports["mapStateT"] = mapStateT;
  exports["functorStateT"] = functorStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadTransStateT"] = monadTransStateT;
  exports["lazyStateT"] = lazyStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS);
(function(exports) {
  "use strict";

  var createDate = function (y, m, d) {
    var date = new Date(Date.UTC(y, m, d));
    if (y >= 0 && y < 100) {
      date.setUTCFullYear(y);
    }
    return date;
  };

  exports.canonicalDateImpl = function (ctor, y, m, d) {
    var date = createDate(y, m - 1, d);
    return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
  };

  exports.calcWeekday = function (y, m, d) {
    return createDate(y, m - 1, d).getUTCDay();
  };
})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Cardinality = function (x) {
      return x;
  };
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };                                   
  var newtypeCardinality = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Cardinality);
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var enumBoolean = new Enum(function () {
      return Data_Ord.ordBoolean;
  }, function (v) {
      if (v) {
          return new Data_Maybe.Just(false);
      };
      return Data_Maybe.Nothing.value;
  }, function (v) {
      if (!v) {
          return new Data_Maybe.Just(true);
      };
      return Data_Maybe.Nothing.value;
  });
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  var boundedEnumBoolean = new BoundedEnum(function () {
      return Data_Bounded.boundedBoolean;
  }, function () {
      return enumBoolean;
  }, 2, function (v) {
      if (!v) {
          return 0;
      };
      if (v) {
          return 1;
      };
      throw new Error("Failed pattern match at Data.Enum (line 118, column 1 - line 124, column 20): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 0) {
          return new Data_Maybe.Just(false);
      };
      if (v === 1) {
          return new Data_Maybe.Just(true);
      };
      return Data_Maybe.Nothing.value;
  });
  exports["Enum"] = Enum;
  exports["BoundedEnum"] = BoundedEnum;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["Cardinality"] = Cardinality;
  exports["boundedEnumBoolean"] = boundedEnumBoolean;
  exports["boundedEnumChar"] = boundedEnumChar;
  exports["newtypeCardinality"] = newtypeCardinality;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Date.Component"] = $PS["Data.Date.Component"] || {};
  var exports = $PS["Data.Date.Component"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Monday = (function () {
      function Monday() {

      };
      Monday.value = new Monday();
      return Monday;
  })();
  var Tuesday = (function () {
      function Tuesday() {

      };
      Tuesday.value = new Tuesday();
      return Tuesday;
  })();
  var Wednesday = (function () {
      function Wednesday() {

      };
      Wednesday.value = new Wednesday();
      return Wednesday;
  })();
  var Thursday = (function () {
      function Thursday() {

      };
      Thursday.value = new Thursday();
      return Thursday;
  })();
  var Friday = (function () {
      function Friday() {

      };
      Friday.value = new Friday();
      return Friday;
  })();
  var Saturday = (function () {
      function Saturday() {

      };
      Saturday.value = new Saturday();
      return Saturday;
  })();
  var Sunday = (function () {
      function Sunday() {

      };
      Sunday.value = new Sunday();
      return Sunday;
  })();
  var January = (function () {
      function January() {

      };
      January.value = new January();
      return January;
  })();
  var February = (function () {
      function February() {

      };
      February.value = new February();
      return February;
  })();
  var March = (function () {
      function March() {

      };
      March.value = new March();
      return March;
  })();
  var April = (function () {
      function April() {

      };
      April.value = new April();
      return April;
  })();
  var May = (function () {
      function May() {

      };
      May.value = new May();
      return May;
  })();
  var June = (function () {
      function June() {

      };
      June.value = new June();
      return June;
  })();
  var July = (function () {
      function July() {

      };
      July.value = new July();
      return July;
  })();
  var August = (function () {
      function August() {

      };
      August.value = new August();
      return August;
  })();
  var September = (function () {
      function September() {

      };
      September.value = new September();
      return September;
  })();
  var October = (function () {
      function October() {

      };
      October.value = new October();
      return October;
  })();
  var November = (function () {
      function November() {

      };
      November.value = new November();
      return November;
  })();
  var December = (function () {
      function December() {

      };
      December.value = new December();
      return December;
  })();
  var showWeekday = new Data_Show.Show(function (v) {
      if (v instanceof Monday) {
          return "Monday";
      };
      if (v instanceof Tuesday) {
          return "Tuesday";
      };
      if (v instanceof Wednesday) {
          return "Wednesday";
      };
      if (v instanceof Thursday) {
          return "Thursday";
      };
      if (v instanceof Friday) {
          return "Friday";
      };
      if (v instanceof Saturday) {
          return "Saturday";
      };
      if (v instanceof Sunday) {
          return "Sunday";
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 184, column 1 - line 191, column 25): " + [ v.constructor.name ]);
  });
  var showMonth = new Data_Show.Show(function (v) {
      if (v instanceof January) {
          return "January";
      };
      if (v instanceof February) {
          return "February";
      };
      if (v instanceof March) {
          return "March";
      };
      if (v instanceof April) {
          return "April";
      };
      if (v instanceof May) {
          return "May";
      };
      if (v instanceof June) {
          return "June";
      };
      if (v instanceof July) {
          return "July";
      };
      if (v instanceof August) {
          return "August";
      };
      if (v instanceof September) {
          return "September";
      };
      if (v instanceof October) {
          return "October";
      };
      if (v instanceof November) {
          return "November";
      };
      if (v instanceof December) {
          return "December";
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 101, column 1 - line 113, column 29): " + [ v.constructor.name ]);
  });
  var ordYear = Data_Ord.ordInt;
  var ordDay = Data_Ord.ordInt;
  var eqYear = Data_Eq.eqInt;
  var eqWeekday = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Monday && y instanceof Monday) {
              return true;
          };
          if (x instanceof Tuesday && y instanceof Tuesday) {
              return true;
          };
          if (x instanceof Wednesday && y instanceof Wednesday) {
              return true;
          };
          if (x instanceof Thursday && y instanceof Thursday) {
              return true;
          };
          if (x instanceof Friday && y instanceof Friday) {
              return true;
          };
          if (x instanceof Saturday && y instanceof Saturday) {
              return true;
          };
          if (x instanceof Sunday && y instanceof Sunday) {
              return true;
          };
          return false;
      };
  });
  var ordWeekday = new Data_Ord.Ord(function () {
      return eqWeekday;
  }, function (x) {
      return function (y) {
          if (x instanceof Monday && y instanceof Monday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Monday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Monday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Tuesday && y instanceof Tuesday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Tuesday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Tuesday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Wednesday && y instanceof Wednesday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Wednesday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Wednesday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Thursday && y instanceof Thursday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Thursday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Thursday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Friday && y instanceof Friday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Friday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Friday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Saturday && y instanceof Saturday) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Saturday) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Saturday) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Sunday && y instanceof Sunday) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 154, column 1 - line 154, column 42): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqMonth = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return true;
          };
          if (x instanceof February && y instanceof February) {
              return true;
          };
          if (x instanceof March && y instanceof March) {
              return true;
          };
          if (x instanceof April && y instanceof April) {
              return true;
          };
          if (x instanceof May && y instanceof May) {
              return true;
          };
          if (x instanceof June && y instanceof June) {
              return true;
          };
          if (x instanceof July && y instanceof July) {
              return true;
          };
          if (x instanceof August && y instanceof August) {
              return true;
          };
          if (x instanceof September && y instanceof September) {
              return true;
          };
          if (x instanceof October && y instanceof October) {
              return true;
          };
          if (x instanceof November && y instanceof November) {
              return true;
          };
          if (x instanceof December && y instanceof December) {
              return true;
          };
          return false;
      };
  });
  var ordMonth = new Data_Ord.Ord(function () {
      return eqMonth;
  }, function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof January) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof January) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof February && y instanceof February) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof February) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof February) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof March && y instanceof March) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof March) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof March) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof April && y instanceof April) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof April) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof April) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof May && y instanceof May) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof May) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof May) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof June && y instanceof June) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof June) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof June) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof July && y instanceof July) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof July) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof July) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof August && y instanceof August) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof August) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof August) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof September && y instanceof September) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof September) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof September) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof October && y instanceof October) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof October) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof October) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof November && y instanceof November) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof November) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof November) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof December && y instanceof December) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 61, column 1 - line 61, column 38): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqDay = Data_Eq.eqInt;
  var boundedYear = new Data_Bounded.Bounded(function () {
      return ordYear;
  }, -271820 | 0, 275759);
  var boundedWeekday = new Data_Bounded.Bounded(function () {
      return ordWeekday;
  }, Monday.value, Sunday.value);
  var boundedMonth = new Data_Bounded.Bounded(function () {
      return ordMonth;
  }, January.value, December.value);
  var boundedEnumYear = new Data_Enum.BoundedEnum(function () {
      return boundedYear;
  }, function () {
      return enumYear;
  }, 547580, function (v) {
      return v;
  }, function (n) {
      if (n >= (-271820 | 0) && n <= 275759) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 35, column 1 - line 40, column 24): " + [ n.constructor.name ]);
  });
  var enumYear = new Data_Enum.Enum(function () {
      return ordYear;
  }, (function () {
      var $46 = Data_Enum.toEnum(boundedEnumYear);
      var $47 = Data_Enum.fromEnum(boundedEnumYear);
      return function ($48) {
          return $46((function (v) {
              return v - 1 | 0;
          })($47($48)));
      };
  })(), (function () {
      var $49 = Data_Enum.toEnum(boundedEnumYear);
      var $50 = Data_Enum.fromEnum(boundedEnumYear);
      return function ($51) {
          return $49((function (v) {
              return v + 1 | 0;
          })($50($51)));
      };
  })());
  var boundedEnumWeekday = new Data_Enum.BoundedEnum(function () {
      return boundedWeekday;
  }, function () {
      return enumWeekday;
  }, 7, function (v) {
      if (v instanceof Monday) {
          return 1;
      };
      if (v instanceof Tuesday) {
          return 2;
      };
      if (v instanceof Wednesday) {
          return 3;
      };
      if (v instanceof Thursday) {
          return 4;
      };
      if (v instanceof Friday) {
          return 5;
      };
      if (v instanceof Saturday) {
          return 6;
      };
      if (v instanceof Sunday) {
          return 7;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 175, column 14 - line 182, column 16): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(Monday.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(Tuesday.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(Wednesday.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(Thursday.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(Friday.value);
      };
      if (v === 6) {
          return new Data_Maybe.Just(Saturday.value);
      };
      if (v === 7) {
          return new Data_Maybe.Just(Sunday.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var enumWeekday = new Data_Enum.Enum(function () {
      return ordWeekday;
  }, (function () {
      var $52 = Data_Enum.toEnum(boundedEnumWeekday);
      var $53 = Data_Enum.fromEnum(boundedEnumWeekday);
      return function ($54) {
          return $52((function (v) {
              return v - 1 | 0;
          })($53($54)));
      };
  })(), (function () {
      var $55 = Data_Enum.toEnum(boundedEnumWeekday);
      var $56 = Data_Enum.fromEnum(boundedEnumWeekday);
      return function ($57) {
          return $55((function (v) {
              return v + 1 | 0;
          })($56($57)));
      };
  })());
  var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
      return boundedMonth;
  }, function () {
      return enumMonth;
  }, 12, function (v) {
      if (v instanceof January) {
          return 1;
      };
      if (v instanceof February) {
          return 2;
      };
      if (v instanceof March) {
          return 3;
      };
      if (v instanceof April) {
          return 4;
      };
      if (v instanceof May) {
          return 5;
      };
      if (v instanceof June) {
          return 6;
      };
      if (v instanceof July) {
          return 7;
      };
      if (v instanceof August) {
          return 8;
      };
      if (v instanceof September) {
          return 9;
      };
      if (v instanceof October) {
          return 10;
      };
      if (v instanceof November) {
          return 11;
      };
      if (v instanceof December) {
          return 12;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 87, column 14 - line 99, column 19): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(January.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(February.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(March.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(April.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(May.value);
      };
      if (v === 6) {
          return new Data_Maybe.Just(June.value);
      };
      if (v === 7) {
          return new Data_Maybe.Just(July.value);
      };
      if (v === 8) {
          return new Data_Maybe.Just(August.value);
      };
      if (v === 9) {
          return new Data_Maybe.Just(September.value);
      };
      if (v === 10) {
          return new Data_Maybe.Just(October.value);
      };
      if (v === 11) {
          return new Data_Maybe.Just(November.value);
      };
      if (v === 12) {
          return new Data_Maybe.Just(December.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var enumMonth = new Data_Enum.Enum(function () {
      return ordMonth;
  }, (function () {
      var $58 = Data_Enum.toEnum(boundedEnumMonth);
      var $59 = Data_Enum.fromEnum(boundedEnumMonth);
      return function ($60) {
          return $58((function (v) {
              return v - 1 | 0;
          })($59($60)));
      };
  })(), (function () {
      var $61 = Data_Enum.toEnum(boundedEnumMonth);
      var $62 = Data_Enum.fromEnum(boundedEnumMonth);
      return function ($63) {
          return $61((function (v) {
              return v + 1 | 0;
          })($62($63)));
      };
  })());
  var boundedDay = new Data_Bounded.Bounded(function () {
      return ordDay;
  }, 1, 31);
  var boundedEnumDay = new Data_Enum.BoundedEnum(function () {
      return boundedDay;
  }, function () {
      return enumDay;
  }, 31, function (v) {
      return v;
  }, function (n) {
      if (n >= 1 && n <= 31) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Date.Component (line 133, column 1 - line 138, column 23): " + [ n.constructor.name ]);
  });
  var enumDay = new Data_Enum.Enum(function () {
      return ordDay;
  }, (function () {
      var $64 = Data_Enum.toEnum(boundedEnumDay);
      var $65 = Data_Enum.fromEnum(boundedEnumDay);
      return function ($66) {
          return $64((function (v) {
              return v - 1 | 0;
          })($65($66)));
      };
  })(), (function () {
      var $67 = Data_Enum.toEnum(boundedEnumDay);
      var $68 = Data_Enum.fromEnum(boundedEnumDay);
      return function ($69) {
          return $67((function (v) {
              return v + 1 | 0;
          })($68($69)));
      };
  })());
  exports["January"] = January;
  exports["February"] = February;
  exports["March"] = March;
  exports["April"] = April;
  exports["May"] = May;
  exports["June"] = June;
  exports["July"] = July;
  exports["August"] = August;
  exports["September"] = September;
  exports["October"] = October;
  exports["November"] = November;
  exports["December"] = December;
  exports["Monday"] = Monday;
  exports["Tuesday"] = Tuesday;
  exports["Wednesday"] = Wednesday;
  exports["Thursday"] = Thursday;
  exports["Friday"] = Friday;
  exports["Saturday"] = Saturday;
  exports["Sunday"] = Sunday;
  exports["eqYear"] = eqYear;
  exports["boundedEnumYear"] = boundedEnumYear;
  exports["eqMonth"] = eqMonth;
  exports["boundedEnumMonth"] = boundedEnumMonth;
  exports["showMonth"] = showMonth;
  exports["eqDay"] = eqDay;
  exports["boundedEnumDay"] = boundedEnumDay;
  exports["boundedEnumWeekday"] = boundedEnumWeekday;
  exports["showWeekday"] = showWeekday;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Date"] = $PS["Data.Date"] || {};
  var exports = $PS["Data.Date"];
  var $foreign = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];                                
  var $$Date = (function () {
      function $$Date(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      $$Date.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new $$Date(value0, value1, value2);
              };
          };
      };
      return $$Date;
  })();
  var year = function (v) {
      return v.value0;
  };
  var weekday = function (v) {
      var n = $foreign.calcWeekday(v.value0, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(v.value1), v.value2);
      var $41 = n === 0;
      if ($41) {
          return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(7));
      };
      return Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumWeekday)(n));
  }; 
  var month = function (v) {
      return v.value1;
  };
  var eqDate = new Data_Eq.Eq(function (x) {
      return function (y) {
          return Data_Eq.eq(Data_Date_Component.eqYear)(x.value0)(y.value0) && Data_Eq.eq(Data_Date_Component.eqMonth)(x.value1)(y.value1) && Data_Eq.eq(Data_Date_Component.eqDay)(x.value2)(y.value2);
      };
  });
  var day = function (v) {
      return v.value2;
  };
  var canonicalDate = function (y) {
      return function (m) {
          return function (d) {
              var mkDate = function (y$prime) {
                  return function (m$prime) {
                      return function (d$prime) {
                          return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                      };
                  };
              };
              return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
          };
      };
  };
  var exactDate = function (y) {
      return function (m) {
          return function (d) {
              var dt = new $$Date(y, m, d);
              var $99 = Data_Eq.eq(eqDate)(canonicalDate(y)(m)(d))(dt);
              if ($99) {
                  return new Data_Maybe.Just(dt);
              };
              return Data_Maybe.Nothing.value;
          };
      };
  };
  exports["canonicalDate"] = canonicalDate;
  exports["exactDate"] = exactDate;
  exports["year"] = year;
  exports["month"] = month;
  exports["day"] = day;
  exports["weekday"] = weekday;
})(PS);
(function(exports) {
  "use strict";

  var createUTC = function (y, mo, d, h, m, s, ms) {
    var date = new Date(Date.UTC(y, mo, d, h, m, s, ms));
    if (y >= 0 && y < 100) {
      date.setUTCFullYear(y);
    }
    return date.getTime();
  };

  exports.adjustImpl = function (just) {
    return function (nothing) {
      return function (offset) {
        return function (rec) {
          var msUTC = createUTC(rec.year, rec.month - 1, rec.day, rec.hour, rec.minute, rec.second, rec.millisecond);
          var dt = new Date(msUTC + offset);
          return isNaN(dt.getTime()) ? nothing : just({
            year: dt.getUTCFullYear(),
            month: dt.getUTCMonth() + 1,
            day: dt.getUTCDate(),
            hour: dt.getUTCHours(),
            minute: dt.getUTCMinutes(),
            second: dt.getUTCSeconds(),
            millisecond: dt.getUTCMilliseconds()
          });
        };
      };
    };
  };
})(PS["Data.DateTime"] = PS["Data.DateTime"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Time"] = $PS["Data.Time"] || {};
  var exports = $PS["Data.Time"];          
  var Time = (function () {
      function Time(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Time.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Time(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Time;
  })();
  var second = function (v) {
      return v.value2;
  };
  var minute = function (v) {
      return v.value1;
  };
  var millisecond = function (v) {
      return v.value3;
  };
  var hour = function (v) {
      return v.value0;
  };
  exports["Time"] = Time;
  exports["hour"] = hour;
  exports["minute"] = minute;
  exports["second"] = second;
  exports["millisecond"] = millisecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Time.Component"] = $PS["Data.Time.Component"] || {};
  var exports = $PS["Data.Time.Component"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var ordSecond = Data_Ord.ordInt;
  var ordMinute = Data_Ord.ordInt;
  var ordMillisecond = Data_Ord.ordInt;
  var ordHour = Data_Ord.ordInt;
  var boundedSecond = new Data_Bounded.Bounded(function () {
      return ordSecond;
  }, 0, 59);
  var boundedMinute = new Data_Bounded.Bounded(function () {
      return ordMinute;
  }, 0, 59);
  var boundedMillisecond = new Data_Bounded.Bounded(function () {
      return ordMillisecond;
  }, 0, 999);
  var boundedHour = new Data_Bounded.Bounded(function () {
      return ordHour;
  }, 0, 23);
  var boundedEnumSecond = new Data_Enum.BoundedEnum(function () {
      return boundedSecond;
  }, function () {
      return enumSecond;
  }, 60, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 59) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 90, column 1 - line 95, column 26): " + [ n.constructor.name ]);
  });
  var enumSecond = new Data_Enum.Enum(function () {
      return ordSecond;
  }, (function () {
      var $28 = Data_Enum.toEnum(boundedEnumSecond);
      var $29 = Data_Enum.fromEnum(boundedEnumSecond);
      return function ($30) {
          return $28((function (v) {
              return v - 1 | 0;
          })($29($30)));
      };
  })(), (function () {
      var $31 = Data_Enum.toEnum(boundedEnumSecond);
      var $32 = Data_Enum.fromEnum(boundedEnumSecond);
      return function ($33) {
          return $31((function (v) {
              return v + 1 | 0;
          })($32($33)));
      };
  })());
  var boundedEnumMinute = new Data_Enum.BoundedEnum(function () {
      return boundedMinute;
  }, function () {
      return enumMinute;
  }, 60, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 59) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 61, column 1 - line 66, column 26): " + [ n.constructor.name ]);
  });
  var enumMinute = new Data_Enum.Enum(function () {
      return ordMinute;
  }, (function () {
      var $34 = Data_Enum.toEnum(boundedEnumMinute);
      var $35 = Data_Enum.fromEnum(boundedEnumMinute);
      return function ($36) {
          return $34((function (v) {
              return v - 1 | 0;
          })($35($36)));
      };
  })(), (function () {
      var $37 = Data_Enum.toEnum(boundedEnumMinute);
      var $38 = Data_Enum.fromEnum(boundedEnumMinute);
      return function ($39) {
          return $37((function (v) {
              return v + 1 | 0;
          })($38($39)));
      };
  })());
  var boundedEnumMillisecond = new Data_Enum.BoundedEnum(function () {
      return boundedMillisecond;
  }, function () {
      return enumMillisecond;
  }, 1000, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 999) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 120, column 1 - line 125, column 31): " + [ n.constructor.name ]);
  });
  var enumMillisecond = new Data_Enum.Enum(function () {
      return ordMillisecond;
  }, (function () {
      var $40 = Data_Enum.toEnum(boundedEnumMillisecond);
      var $41 = Data_Enum.fromEnum(boundedEnumMillisecond);
      return function ($42) {
          return $40((function (v) {
              return v - 1 | 0;
          })($41($42)));
      };
  })(), (function () {
      var $43 = Data_Enum.toEnum(boundedEnumMillisecond);
      var $44 = Data_Enum.fromEnum(boundedEnumMillisecond);
      return function ($45) {
          return $43((function (v) {
              return v + 1 | 0;
          })($44($45)));
      };
  })());
  var boundedEnumHour = new Data_Enum.BoundedEnum(function () {
      return boundedHour;
  }, function () {
      return enumHour;
  }, 24, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 23) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Time.Component (line 32, column 1 - line 37, column 24): " + [ n.constructor.name ]);
  });
  var enumHour = new Data_Enum.Enum(function () {
      return ordHour;
  }, (function () {
      var $46 = Data_Enum.toEnum(boundedEnumHour);
      var $47 = Data_Enum.fromEnum(boundedEnumHour);
      return function ($48) {
          return $46((function (v) {
              return v - 1 | 0;
          })($47($48)));
      };
  })(), (function () {
      var $49 = Data_Enum.toEnum(boundedEnumHour);
      var $50 = Data_Enum.fromEnum(boundedEnumHour);
      return function ($51) {
          return $49((function (v) {
              return v + 1 | 0;
          })($50($51)));
      };
  })());
  exports["boundedEnumHour"] = boundedEnumHour;
  exports["boundedEnumMinute"] = boundedEnumMinute;
  exports["boundedEnumSecond"] = boundedEnumSecond;
  exports["boundedEnumMillisecond"] = boundedEnumMillisecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Time.Duration"] = $PS["Data.Time.Duration"] || {};
  var exports = $PS["Data.Time.Duration"];
  var Control_Category = $PS["Control.Category"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Milliseconds = function (x) {
      return x;
  };
  var Hours = function (x) {
      return x;
  };
  var Duration = function (fromDuration, toDuration) {
      this.fromDuration = fromDuration;
      this.toDuration = toDuration;
  };          
  var newtypeMilliseconds = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Milliseconds);
  var newtypeHours = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Hours);
  var fromDuration = function (dict) {
      return dict.fromDuration;
  };  
  var durationMilliseconds = new Duration(Control_Category.identity(Control_Category.categoryFn), Control_Category.identity(Control_Category.categoryFn));
  var durationHours = new Duration(Data_Newtype.over(newtypeHours)(newtypeMilliseconds)(Hours)(function (v) {
      return v * 3600000.0;
  }), Data_Newtype.over(newtypeMilliseconds)(newtypeHours)(Milliseconds)(function (v) {
      return v / 3600000.0;
  }));
  exports["fromDuration"] = fromDuration;
  exports["Milliseconds"] = Milliseconds;
  exports["newtypeMilliseconds"] = newtypeMilliseconds;
  exports["durationMilliseconds"] = durationMilliseconds;
  exports["durationHours"] = durationHours;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.DateTime"] = $PS["Data.DateTime"] || {};
  var exports = $PS["Data.DateTime"];
  var $foreign = $PS["Data.DateTime"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Time = $PS["Data.Time"];
  var Data_Time_Component = $PS["Data.Time.Component"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];                
  var DateTime = (function () {
      function DateTime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DateTime.create = function (value0) {
          return function (value1) {
              return new DateTime(value0, value1);
          };
      };
      return DateTime;
  })();
  var toRecord = function (v) {
      return {
          year: Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)),
          month: Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)),
          day: Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)),
          hour: Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)),
          minute: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)),
          second: Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)),
          millisecond: Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))
      };
  };                                                                                                                                                                                                       
  var adjust = function (dictDuration) {
      return function (d) {
          return function (dt) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)($foreign.adjustImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(Data_Time_Duration.fromDuration(dictDuration)(d))(toRecord(dt)))(function (rec) {
                  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(DateTime.create)(Control_Bind.join(Data_Maybe.bindMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Date.exactDate)(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(rec.year)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(rec.month)))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(rec.day)))))(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Time.Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(rec.hour)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(rec.minute)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(rec.second)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(rec.millisecond)));
              });
          };
      };
  };
  exports["DateTime"] = DateTime;
  exports["adjust"] = adjust;
})(PS);
(function(exports) {
  "use strict";

  var createDateTime = function (y, m, d, h, mi, s, ms) {
    var dateTime = new Date(Date.UTC(y, m, d, h, mi, s, ms));
    if (y >= 0 && y < 100) {
      dateTime.setUTCFullYear(y);
    }
    return dateTime;
  };

  exports.fromDateTimeImpl = function (y, mo, d, h, mi, s, ms) {
    return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
  };

  exports.toDateTimeImpl = function (ctor) {
    return function (instant) {
      var dt = new Date(instant);
      return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
    };
  };
})(PS["Data.DateTime.Instant"] = PS["Data.DateTime.Instant"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.DateTime.Instant"] = $PS["Data.DateTime.Instant"] || {};
  var exports = $PS["Data.DateTime.Instant"];
  var $foreign = $PS["Data.DateTime.Instant"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Time = $PS["Data.Time"];
  var unInstant = function (v) {
      return v;
  };
  var toDateTime = (function () {
      var mkDateTime = function (y) {
          return function (mo) {
              return function (d) {
                  return function (h) {
                      return function (mi) {
                          return function (s) {
                              return function (ms) {
                                  return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                              };
                          };
                      };
                  };
              };
          };
      };
      return $foreign.toDateTimeImpl(mkDateTime);
  })();                                                
  var instant = function (v) {
      if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
          return new Data_Maybe.Just(v);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.DateTime.Instant (line 44, column 1 - line 44, column 41): " + [ v.constructor.name ]);
  };
  var fromDateTime = function (v) {
      return $foreign.fromDateTimeImpl(Data_Date.year(v.value0), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)), Data_Date.day(v.value0), Data_Time.hour(v.value1), Data_Time.minute(v.value1), Data_Time.second(v.value1), Data_Time.millisecond(v.value1));
  };
  exports["instant"] = instant;
  exports["unInstant"] = unInstant;
  exports["fromDateTime"] = fromDateTime;
  exports["toDateTime"] = toDateTime;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Formatter.Internal"] = $PS["Data.Formatter.Internal"] || {};
  var exports = $PS["Data.Formatter.Internal"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];                
  var repeat = function (dictMonoid) {
      var repeat$prime = function ($copy_accum) {
          return function ($copy_part) {
              return function ($copy_count) {
                  var $tco_var_accum = $copy_accum;
                  var $tco_var_part = $copy_part;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(accum, part, count) {
                      if (count < 1) {
                          $tco_done = true;
                          return accum;
                      };
                      $tco_var_accum = Data_Semigroup.append(dictMonoid.Semigroup0())(accum)(part);
                      $tco_var_part = part;
                      $copy_count = count - 1 | 0;
                      return;
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_accum, $tco_var_part, $copy_count);
                  };
                  return $tco_result;
              };
          };
      };
      return repeat$prime(Data_Monoid.mempty(dictMonoid));
  };
  var foldDigits = function (dictFoldable) {
      return Data_Foldable.foldl(dictFoldable)(function (acc) {
          return function (d) {
              return (acc * 10 | 0) + d | 0;
          };
      })(0);
  };
  exports["foldDigits"] = foldDigits;
  exports["repeat"] = repeat;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Pattern"] = $PS["Data.String.Pattern"] || {};
  var exports = $PS["Data.String.Pattern"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Pattern = function (x) {
      return x;
  };              
  var newtypePattern = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Pattern);
  exports["newtypePattern"] = newtypePattern;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Text.Parsing.Parser.Pos"] = $PS["Text.Parsing.Parser.Pos"] || {};
  var exports = $PS["Text.Parsing.Parser.Pos"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Pattern = $PS["Data.String.Pattern"];
  var updatePosString = function (pos$prime) {
      return function (str) {
          var updatePosChar = function (v) {
              return function (c) {
                  if (c === "\x0a") {
                      return {
                          line: v.line + 1 | 0,
                          column: 1
                      };
                  };
                  if (c === "\x0d") {
                      return {
                          line: v.line + 1 | 0,
                          column: 1
                      };
                  };
                  if (c === "\x09") {
                      return {
                          line: v.line,
                          column: (v.column + 8 | 0) - Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.column - 1 | 0)(8) | 0
                      };
                  };
                  return {
                      line: v.line,
                      column: v.column + 1 | 0
                  };
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos$prime)(Data_String_Common.split(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(""))(str));
      };
  }; 
  var initialPos = {
      line: 1,
      column: 1
  };
  exports["initialPos"] = initialPos;
  exports["updatePosString"] = updatePosString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Text.Parsing.Parser"] = $PS["Text.Parsing.Parser"] || {};
  var exports = $PS["Text.Parsing.Parser"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser_Pos = $PS["Text.Parsing.Parser.Pos"];                
  var ParseState = (function () {
      function ParseState(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ParseState.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ParseState(value0, value1, value2);
              };
          };
      };
      return ParseState;
  })();
  var ParseError = (function () {
      function ParseError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ParseError.create = function (value0) {
          return function (value1) {
              return new ParseError(value0, value1);
          };
      };
      return ParseError;
  })();
  var ParserT = function (x) {
      return x;
  }; 
  var parseErrorPosition = function (v) {
      return v.value1;
  };
  var parseErrorMessage = function (v) {
      return v.value0;
  };
  var newtypeParserT = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ParserT);
  var runParserT = function (dictMonad) {
      return function (s) {
          return function (p) {
              var initialState = new ParseState(s, Text_Parsing_Parser_Pos.initialPos, false);
              return Control_Monad_State_Trans.evalStateT(((dictMonad.Bind1()).Apply0()).Functor0())(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p)))(initialState);
          };
      };
  };
  var runParser = function (s) {
      var $90 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      var $91 = runParserT(Data_Identity.monadIdentity)(s);
      return function ($92) {
          return $90($91($92));
      };
  };
  var monadTransParserT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      var $93 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(dictMonad));
      var $94 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad);
      return function ($95) {
          return ParserT($93($94($95)));
      };
  });
  var monadThrowParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var monadStateParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad));
  };
  var position = function (dictMonad) {
      return Control_Monad_State_Class.gets(monadStateParserT(dictMonad))(function (v) {
          return v.value1;
      });
  };
  var mapParserT = (function () {
      var $96 = Data_Newtype.over(newtypeParserT)(newtypeParserT)(ParserT);
      return function ($97) {
          return $96(Control_Monad_Except_Trans.mapExceptT(Control_Monad_State_Trans.mapStateT($97)));
      };
  })();
  var lazyParserT = new Control_Lazy.Lazy(function (f) {
      return Control_Lazy.defer(Control_Monad_State_Trans.lazyStateT)((function () {
          var $98 = Data_Newtype.unwrap(newtypeParserT);
          return function ($99) {
              return Control_Monad_Except_Trans.runExceptT($98(f($99)));
          };
      })());
  });                           
  var functorParserT = function (dictFunctor) {
      return Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(dictFunctor));
  };
  var failWithPosition = function (dictMonad) {
      return function (message) {
          return function (pos) {
              return Control_Monad_Error_Class.throwError(monadThrowParserT(dictMonad))(new ParseError(message, pos));
          };
      };
  };
  var bindParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var fail = function (dictMonad) {
      return function (message) {
          return Control_Bind.bindFlipped(bindParserT(dictMonad))(failWithPosition(dictMonad)(message))(position(dictMonad));
      };
  };
  var applyParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var semigroupParserT = function (dictMonad) {
      return function (dictSemigroup) {
          return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParserT(dictMonad))(Data_Semigroup.append(dictSemigroup)));
      };
  };
  var applicativeParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var monoidParserT = function (dictMonad) {
      return function (dictMonoid) {
          return new Data_Monoid.Monoid(function () {
              return semigroupParserT(dictMonad)(dictMonoid.Semigroup0());
          }, Control_Applicative.pure(applicativeParserT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
      };
  };
  var altParserT = function (dictMonad) {
      return new Control_Alt.Alt(function () {
          return functorParserT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, function (p1) {
          return function (p2) {
              return ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p1)))(new ParseState(v.value0, v.value1, false)))(function (v1) {
                      if (v1.value0 instanceof Data_Either.Left && !v1.value1.value2) {
                          return Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p2)))(v);
                      };
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
                  });
              })));
          };
      });
  };
  var plusParserT = function (dictMonad) {
      return new Control_Plus.Plus(function () {
          return altParserT(dictMonad);
      }, fail(dictMonad)("No alternative"));
  };
  var alternativeParserT = function (dictMonad) {
      return new Control_Alternative.Alternative(function () {
          return applicativeParserT(dictMonad);
      }, function () {
          return plusParserT(dictMonad);
      });
  };
  exports["ParseError"] = ParseError;
  exports["parseErrorMessage"] = parseErrorMessage;
  exports["parseErrorPosition"] = parseErrorPosition;
  exports["ParseState"] = ParseState;
  exports["ParserT"] = ParserT;
  exports["runParser"] = runParser;
  exports["mapParserT"] = mapParserT;
  exports["fail"] = fail;
  exports["newtypeParserT"] = newtypeParserT;
  exports["lazyParserT"] = lazyParserT;
  exports["monoidParserT"] = monoidParserT;
  exports["functorParserT"] = functorParserT;
  exports["applyParserT"] = applyParserT;
  exports["applicativeParserT"] = applicativeParserT;
  exports["bindParserT"] = bindParserT;
  exports["monadStateParserT"] = monadStateParserT;
  exports["altParserT"] = altParserT;
  exports["plusParserT"] = plusParserT;
  exports["alternativeParserT"] = alternativeParserT;
  exports["monadTransParserT"] = monadTransParserT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Text.Parsing.Parser.Combinators"] = $PS["Text.Parsing.Parser.Combinators"] || {};
  var exports = $PS["Text.Parsing.Parser.Combinators"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];                
  var withErrorMessage = function (dictMonad) {
      return function (p) {
          return function (msg) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Text_Parsing_Parser.fail(dictMonad)("Expected " + msg));
          };
      };
  };
  var tryRethrow = function (dictMonad) {
      return function (p) {
          return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
              return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
                  if (v1.value0 instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Either.Left(new Text_Parsing_Parser.ParseError(v1.value0.value0.value0, v.value1)), new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
                  };
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
              });
          })));
      };
  };
  var $$try = function (dictMonad) {
      return function (p) {
          return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
              return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
                  if (v1.value0 instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
                  };
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
              });
          })));
      };
  };
  var option = function (dictMonad) {
      return function (a) {
          return function (p) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
          };
      };
  };
  var optionMaybe = function (dictMonad) {
      return function (p) {
          return option(dictMonad)(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.Just.create)(p));
      };
  };
  var choice = function (dictFoldable) {
      return function (dictMonad) {
          return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad)))(Control_Plus.empty(Text_Parsing_Parser.plusParserT(dictMonad)));
      };
  };
  var between = function (dictMonad) {
      return function (open) {
          return function (close) {
              return function (p) {
                  return Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(dictMonad))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(open)(p))(close);
              };
          };
      };
  };
  exports["withErrorMessage"] = withErrorMessage;
  exports["between"] = between;
  exports["option"] = option;
  exports["optionMaybe"] = optionMaybe;
  exports["try"] = $$try;
  exports["tryRethrow"] = tryRethrow;
  exports["choice"] = choice;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._fromCodePointArray = function (singleton) {
    return hasFromCodePoint
      ? function (cps) {
        // Function.prototype.apply will fail for very large second parameters,
        // so we don't use it for arrays with 10,000 or more entries.
        if (cps.length < 10e3) {
          return String.fromCodePoint.apply(String, cps);
        }
        return cps.map(singleton).join("");
      }
      : function (cps) {
        return cps.map(singleton).join("");
      };
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };

  exports.singleton = function (c) {
    return c;
  };

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];                
  var uncons = function (v) {
      if (v === "") {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just({
          head: Data_String_Unsafe.charAt(0)(v),
          tail: $foreign.drop(1)(v)
      });
  };                                                                                          
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["uncons"] = uncons;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  };
  var unfoldr1 = function (dict) {
      return dict.unfoldr1;
  };
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldr1"] = unfoldr1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var CodePoint = function (x) {
      return x;
  };
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };
  var fromCodePointArray = $foreign["_fromCodePointArray"](singletonFallback);
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var splitAt = function (i) {
      return function (s) {
          var before = take(i)(s);
          return {
              before: before,
              after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
          };
      };
  }; 
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  var codePointFromChar = (function () {
      var $55 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
      return function ($56) {
          return CodePoint($55($56));
      };
  })();
  exports["codePointFromChar"] = codePointFromChar;
  exports["singleton"] = singleton;
  exports["fromCodePointArray"] = fromCodePointArray;
  exports["toCodePointArray"] = toCodePointArray;
  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["take"] = take;
  exports["drop"] = drop;
  exports["splitAt"] = splitAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Text.Parsing.Parser.String"] = $PS["Text.Parsing.Parser.String"] || {};
  var exports = $PS["Text.Parsing.Parser.String"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Pattern = $PS["Data.String.Pattern"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_Pos = $PS["Text.Parsing.Parser.Pos"];                
  var StringLike = function (drop, indexOf, $$null, uncons) {
      this.drop = drop;
      this.indexOf = indexOf;
      this["null"] = $$null;
      this.uncons = uncons;
  };
  var uncons = function (dict) {
      return dict.uncons;
  };
  var stringLikeString = new StringLike(Data_String_CodePoints.drop, Data_String_CodePoints.indexOf, Data_String_Common["null"], Data_String_CodeUnits.uncons);
  var $$null = function (dict) {
      return dict["null"];
  };
  var indexOf = function (dict) {
      return dict.indexOf;
  };
  var eof = function (dictStringLike) {
      return function (dictMonad) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
              return v.value0;
          }))(function (input) {
              return Control_Applicative.unless(Text_Parsing_Parser.applicativeParserT(dictMonad))($$null(dictStringLike)(input))(Text_Parsing_Parser.fail(dictMonad)("Expected EOF"));
          });
      };
  };
  var drop = function (dict) {
      return dict.drop;
  };
  var string = function (dictStringLike) {
      return function (dictMonad) {
          return function (str) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
                  return v.value0;
              }))(function (input) {
                  var v = indexOf(dictStringLike)(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(str))(input);
                  if (v instanceof Data_Maybe.Just && v.value0 === 0) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify_(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
                          return new Text_Parsing_Parser.ParseState(drop(dictStringLike)(Data_String_CodePoints.length(str))(input), Text_Parsing_Parser_Pos.updatePosString(v1.value1)(str), true);
                      }))(function () {
                          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(str);
                      });
                  };
                  return Text_Parsing_Parser.fail(dictMonad)("Expected " + Data_Show.show(Data_Show.showString)(str));
              });
          };
      };
  };
  var anyChar = function (dictStringLike) {
      return function (dictMonad) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
              return v.value0;
          }))(function (input) {
              var v = uncons(dictStringLike)(input);
              if (v instanceof Data_Maybe.Nothing) {
                  return Text_Parsing_Parser.fail(dictMonad)("Unexpected EOF");
              };
              if (v instanceof Data_Maybe.Just) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify_(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
                      return new Text_Parsing_Parser.ParseState(v.value0.tail, Text_Parsing_Parser_Pos.updatePosString(v1.value1)(Data_String_CodeUnits.singleton(v.value0.head)), true);
                  }))(function () {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v.value0.head);
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.Parser.String (line 56, column 3 - line 63, column 16): " + [ v.constructor.name ]);
          });
      };
  };
  var satisfy = function (dictStringLike) {
      return function (dictMonad) {
          return function (f) {
              return Text_Parsing_Parser_Combinators.tryRethrow(dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictStringLike)(dictMonad))(function (c) {
                  var $52 = f(c);
                  if ($52) {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(c);
                  };
                  return Text_Parsing_Parser.fail(dictMonad)("Character '" + (Data_String_CodeUnits.singleton(c) + "' did not satisfy predicate"));
              }));
          };
      };
  };
  var $$char = function (dictStringLike) {
      return function (dictMonad) {
          return function (c) {
              return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(function (v) {
                  return v === c;
              }))(Data_Show.show(Data_Show.showChar)(c));
          };
      };
  };
  var noneOf = function (dictStringLike) {
      return function (dictMonad) {
          return function (ss) {
              return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(Data_Function.flip(Data_Foldable.notElem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss)))("none of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
          };
      };
  };
  var whiteSpace = function (dictStringLike) {
      return function (dictMonad) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(satisfy(dictStringLike)(dictMonad)(function (c) {
              return c === "\x0a" || (c === "\x0d" || (c === " " || c === "\x09"));
          })))(function (cs) {
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_String_CodeUnits.fromCharArray(cs));
          });
      };
  };
  var skipSpaces = function (dictStringLike) {
      return function (dictMonad) {
          return Data_Functor["void"](Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(whiteSpace(dictStringLike)(dictMonad));
      };
  };
  exports["eof"] = eof;
  exports["string"] = string;
  exports["satisfy"] = satisfy;
  exports["char"] = $$char;
  exports["skipSpaces"] = skipSpaces;
  exports["noneOf"] = noneOf;
  exports["stringLikeString"] = stringLikeString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Formatter.Parser.Utils"] = $PS["Data.Formatter.Parser.Utils"] || {};
  var exports = $PS["Data.Formatter.Parser.Utils"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Show = $PS["Data.Show"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var printPosition = function (v) {
      return "(line " + (Data_Show.show(Data_Show.showInt)(v.line) + (", col " + (Data_Show.show(Data_Show.showInt)(v.column) + ")")));
  };
  var printError = function (err) {
      return Text_Parsing_Parser.parseErrorMessage(err) + (" " + printPosition(Text_Parsing_Parser.parseErrorPosition(err)));
  };
  var runP = function (dictStringLike) {
      return function (p) {
          return function (s) {
              return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(printError)(Text_Parsing_Parser.runParser(s)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(p)(Text_Parsing_Parser_String.eof(dictStringLike)(Data_Identity.monadIdentity))));
          };
      };
  };
  var oneOfAs = function (dictFunctor) {
      return function (dictFoldable) {
          return function (dictMonad) {
              return function (p) {
                  return function (xs) {
                      return Text_Parsing_Parser_Combinators.choice(dictFoldable)(dictMonad)(Data_Functor.map(dictFunctor)(function (v) {
                          return Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(p(v.value0))(v.value1);
                      })(xs));
                  };
              };
          };
      };
  };
  exports["oneOfAs"] = oneOfAs;
  exports["runP"] = runP;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Formatter.Parser.Number"] = $PS["Data.Formatter.Parser.Number"] || {};
  var exports = $PS["Data.Formatter.Parser.Number"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Formatter_Parser_Utils = $PS["Data.Formatter.Parser.Utils"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var parseDigit = function (dictMonad) {
      return function (dictStringLike) {
          return Text_Parsing_Parser_Combinators["try"](dictMonad)(Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(Text_Parsing_Parser_String["char"](dictStringLike)(dictMonad))([ new Data_Tuple.Tuple("0", 0), new Data_Tuple.Tuple("1", 1), new Data_Tuple.Tuple("2", 2), new Data_Tuple.Tuple("3", 3), new Data_Tuple.Tuple("4", 4), new Data_Tuple.Tuple("5", 5), new Data_Tuple.Tuple("6", 6), new Data_Tuple.Tuple("7", 7), new Data_Tuple.Tuple("8", 8), new Data_Tuple.Tuple("9", 9) ]));
      };
  };
  exports["parseDigit"] = parseDigit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                  
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [ v.constructor.name ]);
  };
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var unsnoc = function (lst) {
      var go = function ($copy_v) {
          return function ($copy_acc) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, acc) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return new Data_Maybe.Just({
                          revInit: acc,
                          last: v.value0
                      });
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_v = v.value1;
                      $copy_acc = new Data_List_Types.Cons(v.value0, acc);
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 23): " + [ v.constructor.name, acc.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $copy_acc);
              };
              return $tco_result;
          };
      };
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
          return {
              init: reverse(h.revInit),
              last: h.last
          };
      })(go(lst)(Data_List_Types.Nil.value));
  };
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
          };
      };
  };
  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
      return function (v) {
          return acc + 1 | 0;
      };
  })(0);
  var last = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value0);
          };
          if (v instanceof Data_List_Types.Cons) {
              $copy_v = v.value1;
              return;
          };
          $tco_done = true;
          return Data_Maybe.Nothing.value;
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["some"] = some;
  exports["null"] = $$null;
  exports["length"] = length;
  exports["unsnoc"] = unsnoc;
  exports["reverse"] = reverse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Formatter.DateTime"] = $PS["Data.Formatter.DateTime"] || {};
  var exports = $PS["Data.Formatter.DateTime"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Either = $PS["Data.Either"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Formatter_Internal = $PS["Data.Formatter.Internal"];
  var Data_Formatter_Parser_Number = $PS["Data.Formatter.Parser.Number"];
  var Data_Formatter_Parser_Utils = $PS["Data.Formatter.Parser.Utils"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Int = $PS["Data.Int"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Time = $PS["Data.Time"];
  var Data_Time_Component = $PS["Data.Time.Component"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var AM = (function () {
      function AM() {

      };
      AM.value = new AM();
      return AM;
  })();
  var PM = (function () {
      function PM() {

      };
      PM.value = new PM();
      return PM;
  })();
  var YearFull = (function () {
      function YearFull() {

      };
      YearFull.value = new YearFull();
      return YearFull;
  })();
  var YearTwoDigits = (function () {
      function YearTwoDigits() {

      };
      YearTwoDigits.value = new YearTwoDigits();
      return YearTwoDigits;
  })();
  var YearAbsolute = (function () {
      function YearAbsolute() {

      };
      YearAbsolute.value = new YearAbsolute();
      return YearAbsolute;
  })();
  var MonthFull = (function () {
      function MonthFull() {

      };
      MonthFull.value = new MonthFull();
      return MonthFull;
  })();
  var MonthShort = (function () {
      function MonthShort() {

      };
      MonthShort.value = new MonthShort();
      return MonthShort;
  })();
  var MonthTwoDigits = (function () {
      function MonthTwoDigits() {

      };
      MonthTwoDigits.value = new MonthTwoDigits();
      return MonthTwoDigits;
  })();
  var DayOfMonthTwoDigits = (function () {
      function DayOfMonthTwoDigits() {

      };
      DayOfMonthTwoDigits.value = new DayOfMonthTwoDigits();
      return DayOfMonthTwoDigits;
  })();
  var DayOfMonth = (function () {
      function DayOfMonth() {

      };
      DayOfMonth.value = new DayOfMonth();
      return DayOfMonth;
  })();
  var UnixTimestamp = (function () {
      function UnixTimestamp() {

      };
      UnixTimestamp.value = new UnixTimestamp();
      return UnixTimestamp;
  })();
  var DayOfWeek = (function () {
      function DayOfWeek() {

      };
      DayOfWeek.value = new DayOfWeek();
      return DayOfWeek;
  })();
  var DayOfWeekName = (function () {
      function DayOfWeekName() {

      };
      DayOfWeekName.value = new DayOfWeekName();
      return DayOfWeekName;
  })();
  var DayOfWeekNameShort = (function () {
      function DayOfWeekNameShort() {

      };
      DayOfWeekNameShort.value = new DayOfWeekNameShort();
      return DayOfWeekNameShort;
  })();
  var Hours24 = (function () {
      function Hours24() {

      };
      Hours24.value = new Hours24();
      return Hours24;
  })();
  var Hours12 = (function () {
      function Hours12() {

      };
      Hours12.value = new Hours12();
      return Hours12;
  })();
  var Meridiem = (function () {
      function Meridiem() {

      };
      Meridiem.value = new Meridiem();
      return Meridiem;
  })();
  var Minutes = (function () {
      function Minutes() {

      };
      Minutes.value = new Minutes();
      return Minutes;
  })();
  var MinutesTwoDigits = (function () {
      function MinutesTwoDigits() {

      };
      MinutesTwoDigits.value = new MinutesTwoDigits();
      return MinutesTwoDigits;
  })();
  var Seconds = (function () {
      function Seconds() {

      };
      Seconds.value = new Seconds();
      return Seconds;
  })();
  var SecondsTwoDigits = (function () {
      function SecondsTwoDigits() {

      };
      SecondsTwoDigits.value = new SecondsTwoDigits();
      return SecondsTwoDigits;
  })();
  var Milliseconds = (function () {
      function Milliseconds() {

      };
      Milliseconds.value = new Milliseconds();
      return Milliseconds;
  })();
  var MillisecondsShort = (function () {
      function MillisecondsShort() {

      };
      MillisecondsShort.value = new MillisecondsShort();
      return MillisecondsShort;
  })();
  var MillisecondsTwoDigits = (function () {
      function MillisecondsTwoDigits() {

      };
      MillisecondsTwoDigits.value = new MillisecondsTwoDigits();
      return MillisecondsTwoDigits;
  })();
  var Placeholder = (function () {
      function Placeholder(value0) {
          this.value0 = value0;
      };
      Placeholder.create = function (value0) {
          return new Placeholder(value0);
      };
      return Placeholder;
  })();
  var validateRange = function (min) {
      return function (max) {
          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function (v) {
              return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)((function () {
                  var $92 = v.num < min || v.num > max;
                  if ($92) {
                      return Data_Either.Left.create("Number is out of range [ " + (Data_Show.show(Data_Show.showInt)(min) + (", " + (Data_Show.show(Data_Show.showInt)(max) + " ]"))));
                  };
                  return new Data_Either.Right(Data_Unit.unit);
              })());
          });
      };
  };
  var validAccum = function (v) {
      if (v.hour instanceof Data_Maybe.Just && v.hour.value0 === 24) {
          return Data_Foldable.for_(Data_Either.applicativeEither)(Data_Foldable.foldableArray)([ v.minute, v.second, v.millisecond ])(function (val) {
              return Control_Applicative.when(Data_Either.applicativeEither)(Data_Maybe.fromMaybe(0)(val) > 0)(new Data_Either.Left("When hour is 24, other time components must be 0"));
          });
      };
      return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit);
  };
  var takeSome = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return function (v1) {
                  if (v === 0) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value);
                  };
                  return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v1))(Control_Lazy.defer(dictLazy)(function (v3) {
                      return takeMany(dictAlternative)(dictLazy)(v - 1 | 0)(v1);
                  }));
              };
          };
      };
  };
  var takeMany = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return function (v1) {
                  if (v === 0) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value);
                  };
                  return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(takeSome(dictAlternative)(dictLazy)(v)(v1))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
              };
          };
      };
  };
  var printShortMonth = function (v) {
      if (v instanceof Data_Date_Component.January) {
          return "Jan";
      };
      if (v instanceof Data_Date_Component.February) {
          return "Feb";
      };
      if (v instanceof Data_Date_Component.March) {
          return "Mar";
      };
      if (v instanceof Data_Date_Component.April) {
          return "Apr";
      };
      if (v instanceof Data_Date_Component.May) {
          return "May";
      };
      if (v instanceof Data_Date_Component.June) {
          return "Jun";
      };
      if (v instanceof Data_Date_Component.July) {
          return "Jul";
      };
      if (v instanceof Data_Date_Component.August) {
          return "Aug";
      };
      if (v instanceof Data_Date_Component.September) {
          return "Sep";
      };
      if (v instanceof Data_Date_Component.October) {
          return "Oct";
      };
      if (v instanceof Data_Date_Component.November) {
          return "Nov";
      };
      if (v instanceof Data_Date_Component.December) {
          return "Dec";
      };
      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 482, column 19 - line 494, column 21): " + [ v.constructor.name ]);
  };                                                                                                                        
  var placeholderContent = Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.noneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(Data_String_CodeUnits.toCharArray("YMDEHhamsS"))))(Data_String_CodeUnits.fromCharArray);
  var parseShortMonth = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $435 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $436 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($437) {
              return $435($436($437));
          };
      })())([ new Data_Tuple.Tuple("Jan", Data_Date_Component.January.value), new Data_Tuple.Tuple("Feb", Data_Date_Component.February.value), new Data_Tuple.Tuple("Mar", Data_Date_Component.March.value), new Data_Tuple.Tuple("Apr", Data_Date_Component.April.value), new Data_Tuple.Tuple("May", Data_Date_Component.May.value), new Data_Tuple.Tuple("Jun", Data_Date_Component.June.value), new Data_Tuple.Tuple("Jul", Data_Date_Component.July.value), new Data_Tuple.Tuple("Aug", Data_Date_Component.August.value), new Data_Tuple.Tuple("Sep", Data_Date_Component.September.value), new Data_Tuple.Tuple("Oct", Data_Date_Component.October.value), new Data_Tuple.Tuple("Nov", Data_Date_Component.November.value), new Data_Tuple.Tuple("Dec", Data_Date_Component.December.value) ]);
  };
  var parseMonth = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $438 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $439 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($440) {
              return $438($439($440));
          };
      })())([ new Data_Tuple.Tuple("January", Data_Date_Component.January.value), new Data_Tuple.Tuple("February", Data_Date_Component.February.value), new Data_Tuple.Tuple("March", Data_Date_Component.March.value), new Data_Tuple.Tuple("April", Data_Date_Component.April.value), new Data_Tuple.Tuple("May", Data_Date_Component.May.value), new Data_Tuple.Tuple("June", Data_Date_Component.June.value), new Data_Tuple.Tuple("July", Data_Date_Component.July.value), new Data_Tuple.Tuple("August", Data_Date_Component.August.value), new Data_Tuple.Tuple("September", Data_Date_Component.September.value), new Data_Tuple.Tuple("October", Data_Date_Component.October.value), new Data_Tuple.Tuple("November", Data_Date_Component.November.value), new Data_Tuple.Tuple("December", Data_Date_Component.December.value) ]);
  };
  var parseMeridiem = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $441 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $442 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($443) {
              return $441($442($443));
          };
      })())([ new Data_Tuple.Tuple("am", AM.value), new Data_Tuple.Tuple("AM", AM.value), new Data_Tuple.Tuple("pm", PM.value), new Data_Tuple.Tuple("PM", PM.value) ]);
  };
  var $$parseInt = function (dictMonad) {
      return function (maxLength) {
          return function (validators) {
              return function (errMsg) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(takeSome(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(maxLength)(Data_Formatter_Parser_Number.parseDigit(dictMonad)(Text_Parsing_Parser_String.stringLikeString)))(function (ds) {
                      var num = Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList)(ds);
                      var length = Data_List.length(ds);
                      var v = Control_Monad_Reader_Trans.runReaderT(validators)({
                          length: length,
                          num: num,
                          maxLength: maxLength
                      });
                      if (v instanceof Data_Either.Left) {
                          return Text_Parsing_Parser.fail(dictMonad)(errMsg + ("(" + (v.value0 + ")")));
                      };
                      if (v instanceof Data_Either.Right) {
                          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(num);
                      };
                      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 336, column 3 - line 338, column 23): " + [ v.constructor.name ]);
                  });
              };
          };
      };
  };
  var parseSignedInt = function (dictMonad) {
      return function (maxLength) {
          return function (validators) {
              return function (errMsg) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.isJust)(Text_Parsing_Parser_Combinators.optionMaybe(dictMonad)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("-"))))(function (isNegative) {
                      return Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))((function () {
                          if (isNegative) {
                              return Data_Ring.negate(Data_Ring.ringInt);
                          };
                          return Control_Category.identity(Control_Category.categoryFn);
                      })())($$parseInt(dictMonad)(maxLength)(validators)(errMsg));
                  });
              };
          };
      };
  };
  var parseDayOfWeekNameShort = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $444 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $445 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($446) {
              return $444($445($446));
          };
      })())([ new Data_Tuple.Tuple("Mon", Data_Date_Component.Monday.value), new Data_Tuple.Tuple("Tue", Data_Date_Component.Tuesday.value), new Data_Tuple.Tuple("Wed", Data_Date_Component.Wednesday.value), new Data_Tuple.Tuple("Thu", Data_Date_Component.Thursday.value), new Data_Tuple.Tuple("Fri", Data_Date_Component.Friday.value), new Data_Tuple.Tuple("Sat", Data_Date_Component.Saturday.value), new Data_Tuple.Tuple("Sun", Data_Date_Component.Sunday.value) ]);
  };
  var parseDayOfWeekName = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $447 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $448 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad);
          return function ($449) {
              return $447($448($449));
          };
      })())([ new Data_Tuple.Tuple("Monday", Data_Date_Component.Monday.value), new Data_Tuple.Tuple("Tuesday", Data_Date_Component.Tuesday.value), new Data_Tuple.Tuple("Wednesday", Data_Date_Component.Wednesday.value), new Data_Tuple.Tuple("Thursday", Data_Date_Component.Thursday.value), new Data_Tuple.Tuple("Friday", Data_Date_Component.Friday.value), new Data_Tuple.Tuple("Saturday", Data_Date_Component.Saturday.value), new Data_Tuple.Tuple("Sunday", Data_Date_Component.Sunday.value) ]);
  };
  var padSingleDigit = function (i) {
      if (i < 0) {
          return "-" + padSingleDigit(-i | 0);
      };
      if (i < 10) {
          return "0" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (Data_Boolean.otherwise) {
          return Data_Show.show(Data_Show.showInt)(i);
      };
      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 192, column 1 - line 192, column 30): " + [ i.constructor.name ]);
  };
  var padQuadrupleDigit = function (i) {
      if (i < 0) {
          return "-" + padQuadrupleDigit(-i | 0);
      };
      if (i < 10) {
          return "000" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (i < 100) {
          return "00" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (i < 1000) {
          return "0" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (Data_Boolean.otherwise) {
          return Data_Show.show(Data_Show.showInt)(i);
      };
      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 205, column 1 - line 205, column 33): " + [ i.constructor.name ]);
  };
  var padDoubleDigit = function (i) {
      if (i < 0) {
          return "-" + padDoubleDigit(-i | 0);
      };
      if (i < 10) {
          return "00" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (i < 100) {
          return "0" + Data_Show.show(Data_Show.showInt)(i);
      };
      if (Data_Boolean.otherwise) {
          return Data_Show.show(Data_Show.showInt)(i);
      };
      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 198, column 1 - line 198, column 30): " + [ i.constructor.name ]);
  };
  var initialAccum = {
      year: Data_Maybe.Nothing.value,
      month: Data_Maybe.Nothing.value,
      day: Data_Maybe.Nothing.value,
      hour: Data_Maybe.Nothing.value,
      minute: Data_Maybe.Nothing.value,
      second: Data_Maybe.Nothing.value,
      millisecond: Data_Maybe.Nothing.value,
      meridiem: Data_Maybe.Nothing.value
  };                          
  var formatterCommandParser = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(Data_Identity.monadIdentity)((function () {
      var $450 = Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity);
      var $451 = Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity);
      return function ($452) {
          return $450($451($452));
      };
  })())([ new Data_Tuple.Tuple("YYYY", YearFull.value), new Data_Tuple.Tuple("YY", YearTwoDigits.value), new Data_Tuple.Tuple("Y", YearAbsolute.value), new Data_Tuple.Tuple("MMMM", MonthFull.value), new Data_Tuple.Tuple("MMM", MonthShort.value), new Data_Tuple.Tuple("MM", MonthTwoDigits.value), new Data_Tuple.Tuple("DD", DayOfMonthTwoDigits.value), new Data_Tuple.Tuple("D", DayOfMonth.value), new Data_Tuple.Tuple("E", DayOfWeek.value), new Data_Tuple.Tuple("X", UnixTimestamp.value), new Data_Tuple.Tuple("dddd", DayOfWeekName.value), new Data_Tuple.Tuple("ddd", DayOfWeekNameShort.value), new Data_Tuple.Tuple("HH", Hours24.value), new Data_Tuple.Tuple("hh", Hours12.value), new Data_Tuple.Tuple("a", Meridiem.value), new Data_Tuple.Tuple("mm", MinutesTwoDigits.value), new Data_Tuple.Tuple("m", Minutes.value), new Data_Tuple.Tuple("ss", SecondsTwoDigits.value), new Data_Tuple.Tuple("s", Seconds.value), new Data_Tuple.Tuple("SSS", Milliseconds.value), new Data_Tuple.Tuple("SS", MillisecondsTwoDigits.value), new Data_Tuple.Tuple("S", MillisecondsShort.value) ]))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Placeholder.create)(placeholderContent));
  var formatYearTwoDigits = function (i) {
      var dateString = Data_Show.show(Data_Show.showInt)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(i));
      var dateLength = Data_String_CodePoints.length(dateString);
      if (dateLength === 1) {
          return "0" + dateString;
      };
      if (dateLength === 2) {
          return dateString;
      };
      return Data_String_CodePoints.drop(dateLength - 2 | 0)(dateString);
  };
  var formatParser = Data_List.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(formatterCommandParser);
  var parseFormatString = Data_Formatter_Parser_Utils.runP(Text_Parsing_Parser_String.stringLikeString)(formatParser);
  var fix12 = function (h) {
      var $394 = h === 0;
      if ($394) {
          return 12;
      };
      return h;
  };
  var formatCommand = function (v) {
      return function (v1) {
          if (v1 instanceof YearFull) {
              return padQuadrupleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));
          };
          if (v1 instanceof YearTwoDigits) {
              return formatYearTwoDigits(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));
          };
          if (v1 instanceof YearAbsolute) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v.value0)));
          };
          if (v1 instanceof MonthFull) {
              return Data_Show.show(Data_Date_Component.showMonth)(Data_Date.month(v.value0));
          };
          if (v1 instanceof MonthShort) {
              return printShortMonth(Data_Date.month(v.value0));
          };
          if (v1 instanceof MonthTwoDigits) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)));
          };
          if (v1 instanceof DayOfMonthTwoDigits) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)));
          };
          if (v1 instanceof DayOfMonth) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v.value0)));
          };
          if (v1 instanceof UnixTimestamp) {
              return Data_Show.show(Data_Show.showInt)(Data_Int.floor((function (v2) {
                  return v2 / 1000.0;
              })(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(Data_DateTime_Instant.unInstant(Data_DateTime_Instant.fromDateTime(v))))));
          };
          if (v1 instanceof DayOfWeek) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday)(Data_Date.weekday(v.value0)));
          };
          if (v1 instanceof DayOfWeekName) {
              return Data_Show.show(Data_Date_Component.showWeekday)(Data_Date.weekday(v.value0));
          };
          if (v1 instanceof DayOfWeekNameShort) {
              return Data_String_CodePoints.take(3)(Data_Show.show(Data_Date_Component.showWeekday)(Data_Date.weekday(v.value0)));
          };
          if (v1 instanceof Hours24) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)));
          };
          if (v1 instanceof Hours12) {
              return padSingleDigit(fix12(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)))(12)));
          };
          if (v1 instanceof Meridiem) {
              var $397 = Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v.value1)) >= 12;
              if ($397) {
                  return "PM";
              };
              return "AM";
          };
          if (v1 instanceof Minutes) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)));
          };
          if (v1 instanceof MinutesTwoDigits) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v.value1)));
          };
          if (v1 instanceof Seconds) {
              return Data_Show.show(Data_Show.showInt)(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)));
          };
          if (v1 instanceof SecondsTwoDigits) {
              return padSingleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v.value1)));
          };
          if (v1 instanceof Milliseconds) {
              return padDoubleDigit(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1)));
          };
          if (v1 instanceof MillisecondsShort) {
              return Data_Show.show(Data_Show.showInt)((function (v2) {
                  return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v2)(100);
              })(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))));
          };
          if (v1 instanceof MillisecondsTwoDigits) {
              return padSingleDigit((function (v2) {
                  return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v2)(10);
              })(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v.value1))));
          };
          if (v1 instanceof Placeholder) {
              return v1.value0;
          };
          throw new Error("Failed pattern match at Data.Formatter.DateTime (line 167, column 38 - line 190, column 20): " + [ v1.constructor.name ]);
      };
  };
  var format = function (f) {
      return function (d) {
          return Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(formatCommand(d))(f);
      };
  };
  var formatDateTime = function (pattern) {
      return function (datetime) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(parseFormatString(pattern))(function (v) {
              return format(v)(datetime);
          });
      };
  };
  var exactLength = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function (v) {
      return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)((function () {
          var $402 = v.maxLength !== v.length;
          if ($402) {
              return Data_Either.Left.create("Expected " + (Data_Show.show(Data_Show.showInt)(v.maxLength) + (" digits but got " + Data_Show.show(Data_Show.showInt)(v.length))));
          };
          return new Data_Either.Right(Data_Unit.unit);
      })());
  });
  var unformatCommandParser = (function () {
      var modifyWithParser = function (f) {
          return function (p) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(p)(function (v) {
                  return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Data_Function.flip(f)(new Data_Maybe.Just(v))));
              });
          };
      };
      return function (v) {
          if (v instanceof YearFull) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          year: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second
                      };
                  };
              })(parseSignedInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(4)(exactLength)("Incorrect full year"));
          };
          if (v instanceof YearTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          year: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second
                      };
                  };
              })(parseSignedInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit year"));
          };
          if (v instanceof YearAbsolute) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          year: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second
                      };
                  };
              })(Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Semiring.mul(Data_Semiring.semiringInt))(Text_Parsing_Parser_Combinators.option(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(Text_Parsing_Parser_Combinators["try"](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("-"))(Data_Function["const"](-1 | 0)))))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.stringLikeString)))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))));
          };
          if (v instanceof MonthFull) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          month: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))(parseMonth(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof MonthShort) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          month: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))(parseShortMonth(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof MonthTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          month: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(12))(exactLength))("Incorrect 2-digit month"));
          };
          if (v instanceof DayOfMonthTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(31))(exactLength))("Incorrect day of month"));
          };
          if (v instanceof DayOfMonth) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(1)(31))("Incorrect day of month"));
          };
          if (v instanceof UnixTimestamp) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.stringLikeString))))(function (s) {
                  var v1 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime)(Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds(1000.0 * Data_Int.toNumber(s))));
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Text_Parsing_Parser.fail(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("Incorrect timestamp");
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))({
                          year: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v1.value0.value0))),
                          month: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v1.value0.value0))),
                          day: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v1.value0.value0))),
                          hour: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v1.value0.value1))),
                          minute: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v1.value0.value1))),
                          second: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v1.value0.value1))),
                          millisecond: Data_Maybe.Just.create(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v1.value0.value1))),
                          meridiem: Data_Maybe.Nothing.value
                      }));
                  };
                  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 362, column 5 - line 373, column 10): " + [ v1.constructor.name ]);
              });
          };
          if (v instanceof DayOfWeek) {
              return Data_Functor["void"](Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(validateRange(1)(7))("Incorrect day of week"));
          };
          if (v instanceof DayOfWeekName) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(parseDayOfWeekName(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof DayOfWeekNameShort) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(parseDayOfWeekNameShort(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof Hours24) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          hour: v2,
                          day: v1.day,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(24))(exactLength))("Incorrect 24 hour"));
          };
          if (v instanceof Hours12) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          hour: v2,
                          day: v1.day,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(12))(exactLength))("Incorrect 12 hour"));
          };
          if (v instanceof Meridiem) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          meridiem: v2,
                          day: v1.day,
                          hour: v1.hour,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(parseMeridiem(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)));
          };
          if (v instanceof MinutesTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          minute: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit minute"));
          };
          if (v instanceof Minutes) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          minute: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect minute"));
          };
          if (v instanceof SecondsTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          second: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit second"));
          };
          if (v instanceof Seconds) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          second: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect second"));
          };
          if (v instanceof Milliseconds) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          millisecond: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(3)(exactLength)("Incorrect millisecond"));
          };
          if (v instanceof Placeholder) {
              return Data_Functor["void"](Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(v.value0));
          };
          if (v instanceof MillisecondsShort) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          millisecond: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(exactLength)("Incorrect 1-digit millisecond"))(function (v1) {
                  return v1 * 100 | 0;
              }));
          };
          if (v instanceof MillisecondsTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          millisecond: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit millisecond"))(function (v1) {
                  return v1 * 10 | 0;
              }));
          };
          throw new Error("Failed pattern match at Data.Formatter.DateTime (line 341, column 25 - line 399, column 74): " + [ v.constructor.name ]);
      };
  })();
  var adjustMeridiem = function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just && (v.value0 instanceof AM && v1 === 12)) {
              return 0;
          };
          if (v instanceof Data_Maybe.Just && (v.value0 instanceof PM && v1 === 12)) {
              return 12;
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof PM) {
              return v1 + 12 | 0;
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof AM) {
              return v1;
          };
          if (v instanceof Data_Maybe.Nothing && v1 === 24) {
              return 0;
          };
          if (v instanceof Data_Maybe.Nothing) {
              return v1;
          };
          throw new Error("Failed pattern match at Data.Formatter.DateTime (line 279, column 1 - line 279, column 44): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var adjustDay = function (v) {
      return function (n) {
          if (v instanceof Data_Maybe.Just && v.value0 === 24) {
              return n + 1 | 0;
          };
          return n;
      };
  };
  var unformatAccumToDateTime = function (a) {
      return Control_Apply.applySecond(Data_Either.applyEither)(validAccum(a))(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_DateTime.DateTime.create)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Date.canonicalDate)(Data_Maybe.maybe(new Data_Either.Left("Incorrect year"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(Data_Maybe.fromMaybe(0)(a.year)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect month"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(Data_Maybe.fromMaybe(1)(a.month)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect day"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(adjustDay(a.hour)(Data_Maybe.fromMaybe(1)(a.day)))))))(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Time.Time.create)(Data_Maybe.maybe(new Data_Either.Left("Incorrect hour"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Maybe.fromMaybe(0)(Data_Functor.map(Data_Maybe.functorMaybe)(adjustMeridiem(a.meridiem))(a.hour))))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect minute"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Maybe.fromMaybe(0)(a.minute)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect second"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Maybe.fromMaybe(0)(a.second)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect millisecond"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Maybe.fromMaybe(0)(a.millisecond))))));
  };
  var unformatParser = function (dictMonad) {
      return function (f) {
          var unState = function (dictMonad1) {
              return function (s) {
                  var v = Control_Monad_State.runState(s)(initialAccum);
                  return Control_Applicative.pure(dictMonad1.Applicative0())(new Data_Tuple.Tuple(Data_Functor.voidLeft(Data_Either.functorEither)(v.value0.value0)(v.value1), v.value0.value1));
              };
          };
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser.mapParserT(unState(dictMonad))(Data_Foldable.foldMap(Data_List_Types.foldableList)(Text_Parsing_Parser.monoidParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Monoid.monoidUnit))(unformatCommandParser)(f)))(function (acc) {
              return Data_Either.either(Text_Parsing_Parser.fail(dictMonad))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad)))(unformatAccumToDateTime(acc));
          });
      };
  };
  exports["parseFormatString"] = parseFormatString;
  exports["formatDateTime"] = formatDateTime;
  exports["unformatParser"] = unformatParser;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Formatter.Parser.Interval"] = $PS["Data.Formatter.Parser.Interval"] || {};
  var exports = $PS["Data.Formatter.Parser.Interval"];
  var Data_Either = $PS["Data.Either"];
  var Data_Formatter_DateTime = $PS["Data.Formatter.DateTime"];
  var extendedDateTimeFormatInUTC = Data_Either.fromRight()(Data_Formatter_DateTime.parseFormatString("YYYY-MM-DDTHH:mm:ssZ"));
  var parseDateTime = function (dictMonad) {
      return Data_Formatter_DateTime.unformatParser(dictMonad)(extendedDateTimeFormatInUTC);
  };
  exports["parseDateTime"] = parseDateTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];             
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Constructor = function (x) {
      return x;
  };
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Constructor"] = Constructor;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Function = $PS["Data.Function"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];
  var Index = function (errorAt, hasOwnProperty, hasProperty, index) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.index = index;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  var index = function (dict) {
      return dict.index;
  }; 
  var hasPropertyImpl = function (v) {
      return function (value) {
          if (Foreign.isNull(value)) {
              return false;
          };
          if (Foreign.isUndefined(value)) {
              return false;
          };
          if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasProperty(v, value);
          };
          return false;
      };
  };
  var hasOwnPropertyImpl = function (v) {
      return function (value) {
          if (Foreign.isNull(value)) {
              return false;
          };
          if (Foreign.isUndefined(value)) {
              return false;
          };
          if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasOwnProperty(v, value);
          };
          return false;
      };
  };                                                                                                                        
  var indexString = new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));
  exports["readProp"] = readProp;
  exports["index"] = index;
  exports["indexString"] = indexString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var set = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (b) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(b)(r);
                      };
                  };
              };
          };
      };
  };
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  exports["get"] = get;
  exports["set"] = set;
})(PS);
(function(exports) {
  "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };

  exports.unsafeInsert = function(l) {
    return function(a) {
      return function(rec) {
        rec[l] = a;
        return rec;
      };
    };
  };

  exports.unsafeModify = function(l) {
    return function (f) {
      return function(rec) {
        rec[l] = f(rec[l]);
        return rec;
      };
    };
  };

  exports.unsafeDelete = function(l) {
    return function(rec) {
      delete rec[l];
      return rec;
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var modify = function (dictCons) {
      return function (dictCons1) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (f) {
                      return function (r1) {
                          return $foreign.unsafeModify(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(f)(r1);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictLacks) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (a) {
                      return function (r1) {
                          return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                      };
                  };
              };
          };
      };
  };
  var $$delete = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (r2) {
                      return $foreign.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r2);
                  };
              };
          };
      };
  };
  var categoryBuilder = Control_Category.categoryFn;
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["insert"] = insert;
  exports["modify"] = modify;
  exports["delete"] = $$delete;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.Generic.Class"] = $PS["Foreign.Generic.Class"] || {};
  var exports = $PS["Foreign.Generic.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record = $PS["Record"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var TaggedObject = (function () {
      function TaggedObject(value0) {
          this.value0 = value0;
      };
      TaggedObject.create = function (value0) {
          return new TaggedObject(value0);
      };
      return TaggedObject;
  })();
  var GenericEncodeArgs = function (encodeArgs) {
      this.encodeArgs = encodeArgs;
  };
  var GenericEncode = function (encodeOpts) {
      this.encodeOpts = encodeOpts;
  };
  var GenericDecodeArgs = function (decodeArgs) {
      this.decodeArgs = decodeArgs;
  };
  var GenericDecode = function (decodeOpts) {
      this.decodeOpts = decodeOpts;
  };
  var GenericCountArgs = function (countArgs) {
      this.countArgs = countArgs;
  };
  var EncodeWithOptions = function (encodeWithOptions) {
      this.encodeWithOptions = encodeWithOptions;
  };
  var EncodeRecord = function (encodeRecordWithOptions) {
      this.encodeRecordWithOptions = encodeRecordWithOptions;
  };
  var Encode = function (encode) {
      this.encode = encode;
  };
  var DecodeWithOptions = function (decodeWithOptions) {
      this.decodeWithOptions = decodeWithOptions;
  };
  var DecodeRecord = function (decodeRecordWithOptions) {
      this.decodeRecordWithOptions = decodeRecordWithOptions;
  };
  var Decode = function (decode) {
      this.decode = decode;
  }; 
  var stringEncode = new Encode(Foreign.unsafeToForeign);
  var stringDecode = new Decode(Foreign.readString);     
  var numberDecode = new Decode(Foreign.readNumber);
  var intEncode = new Encode(Foreign.unsafeToForeign);
  var intDecode = new Decode(Foreign.readInt);
  var genericCountArgsArgument = new GenericCountArgs(function (v) {
      return new Data_Either.Right(1);
  });                                                                                                                                  
  var encodeWithOptions = function (dict) {
      return dict.encodeWithOptions;
  };
  var genericEncodeArgsArgument = function (dictEncodeWithOptions) {
      return new GenericEncodeArgs(function (opts) {
          return function (v) {
              return Data_List.singleton(encodeWithOptions(dictEncodeWithOptions)(opts)(v));
          };
      });
  };
  var encodeRecordWithOptions = function (dict) {
      return dict.encodeRecordWithOptions;
  };
  var encodeWithOptionsRecord = function (dictRowToList) {
      return function (dictEncodeRecord) {
          return new EncodeWithOptions(function (opts) {
              var $148 = encodeRecordWithOptions(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts);
              return function ($149) {
                  return Foreign.unsafeToForeign($148($149));
              };
          });
      };
  };
  var encodeRecordNil = new EncodeRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return Foreign_Object.empty;
          };
      };
  });
  var encodeRecordCons = function (dictCons) {
      return function (dictEncodeRecord) {
          return function (dictIsSymbol) {
              return function (dictEncodeWithOptions) {
                  return new EncodeRecord(function (v) {
                      return function (opts) {
                          return function (rec) {
                              var obj = encodeRecordWithOptions(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(rec);
                              var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              return Foreign_Object.insert(opts.fieldTransform(l))(encodeWithOptions(dictEncodeWithOptions)(opts)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(rec)))(obj);
                          };
                      };
                  });
              };
          };
      };
  };
  var encodeOpts = function (dict) {
      return dict.encodeOpts;
  };
  var encodeArgs = function (dict) {
      return dict.encodeArgs;
  };
  var genericEncodeConstructor = function (dictIsSymbol) {
      return function (dictGenericEncodeArgs) {
          return new GenericEncode(function (opts) {
              return function (v) {
                  var unwrapArguments = function (v1) {
                      if (v1.length === 0) {
                          return Data_Maybe.Nothing.value;
                      };
                      if (v1.length === 1 && opts.unwrapSingleArguments) {
                          return new Data_Maybe.Just(v1[0]);
                      };
                      return new Data_Maybe.Just(Foreign.unsafeToForeign(v1));
                  };
                  var encodeArgsArray = (function () {
                      var $150 = Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray);
                      var $151 = encodeArgs(dictGenericEncodeArgs)(opts);
                      return function ($152) {
                          return unwrapArguments($150($151($152)));
                      };
                  })();
                  var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                  if (opts.unwrapSingleConstructors) {
                      return Data_Maybe.maybe(Foreign.unsafeToForeign({}))(Foreign.unsafeToForeign)(encodeArgsArray(v));
                  };
                  return Foreign.unsafeToForeign(Foreign_Object.union(Foreign_Object.singleton(opts.sumEncoding.value0.tagFieldName)(Foreign.unsafeToForeign(opts.sumEncoding.value0.constructorTagTransform(ctorName))))(Data_Maybe.maybe(Foreign_Object.empty)(Foreign_Object.singleton(opts.sumEncoding.value0.contentsFieldName))(encodeArgsArray(v))));
              };
          });
      };
  };
  var encode = function (dict) {
      return dict.encode;
  };
  var encodeWithOptionsOther = function (dictEncode) {
      return new EncodeWithOptions(function (v) {
          return encode(dictEncode);
      });
  };
  var defaultOptions = {
      sumEncoding: new TaggedObject({
          tagFieldName: "tag",
          contentsFieldName: "contents",
          constructorTagTransform: Control_Category.identity(Control_Category.categoryFn)
      }),
      unwrapSingleConstructors: false,
      unwrapSingleArguments: true,
      fieldTransform: Control_Category.identity(Control_Category.categoryFn)
  };
  var decodeWithOptions = function (dict) {
      return dict.decodeWithOptions;
  };
  var genericDecodeArgsArgument = function (dictDecodeWithOptions) {
      return new GenericDecodeArgs(function (v) {
          return function (v1) {
              return function (v2) {
                  if (v2 instanceof Data_List_Types.Cons) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(v1))))(decodeWithOptions(dictDecodeWithOptions)(v)(v2.value0)))(function (a) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                              result: a,
                              rest: v2.value1,
                              next: v1 + 1 | 0
                          });
                      });
                  };
                  return Foreign.fail(new Foreign.ForeignError("Not enough constructor arguments"));
              };
          };
      });
  };
  var decodeRecordWithOptions = function (dict) {
      return dict.decodeRecordWithOptions;
  };
  var decodeWithOptionsRecord = function (dictRowToList) {
      return function (dictDecodeRecord) {
          return new DecodeWithOptions(function (opts) {
              return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Function.flip(Record_Builder.build)({})))(decodeRecordWithOptions(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts));
          });
      };
  };
  var decodeRecordNil = new DecodeRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.identity(Record_Builder.categoryBuilder));
          };
      };
  });
  var decodeRecordCons = function (dictCons) {
      return function (dictDecodeRecord) {
          return function (dictIsSymbol) {
              return function (dictDecodeWithOptions) {
                  return function (dictLacks) {
                      return new DecodeRecord(function (v) {
                          return function (opts) {
                              return function (f) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeRecordWithOptions(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(f))(function (builder) {
                                      var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                                      var l_transformed = opts.fieldTransform(l);
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(l_transformed))(function (f_) {
                                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(l_transformed))))(decodeWithOptions(dictDecodeWithOptions)(opts)(f_)))(function (a) {
                                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(builder)(Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(a)));
                                          });
                                      });
                                  });
                              };
                          };
                      });
                  };
              };
          };
      };
  };
  var decodeOpts = function (dict) {
      return dict.decodeOpts;
  };
  var decodeArgs = function (dict) {
      return dict.decodeArgs;
  };
  var decode = function (dict) {
      return dict.decode;
  };
  var decodeWithOptionsOther = function (dictDecode) {
      return new DecodeWithOptions(function (v) {
          return decode(dictDecode);
      });
  };
  var countArgs = function (dict) {
      return dict.countArgs;
  };
  var genericDecodeConstructor = function (dictIsSymbol) {
      return function (dictGenericDecodeArgs) {
          return function (dictGenericCountArgs) {
              return new GenericDecode(function (opts) {
                  return function (f) {
                      var numArgs = countArgs(dictGenericCountArgs)(Type_Proxy["Proxy"].value);
                      var readArguments = function (args) {
                          if (numArgs instanceof Data_Either.Left) {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(numArgs.value0);
                          };
                          if (numArgs instanceof Data_Either.Right && (numArgs.value0 === 1 && opts.unwrapSingleArguments)) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.singleton(args)))(function (v) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v.rest))(Foreign.fail(new Foreign.ForeignError("Expected a single argument"))))(function () {
                                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v.result);
                                  });
                              });
                          };
                          if (numArgs instanceof Data_Either.Right) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray(args))(function (vals) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.fromFoldable(Data_Foldable.foldableArray)(vals)))(function (v) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v.rest))(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showInt)(numArgs.value0) + " constructor arguments")))))(function () {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v.result);
                                      });
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Foreign.Generic.Class (line 307, column 9 - line 319, column 24): " + [ numArgs.constructor.name ]);
                      };
                      var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      if (opts.unwrapSingleConstructors) {
                          return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Constructor)(readArguments(f));
                      };
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.tagFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.tagFieldName))(Foreign.readString))(function (tag) {
                          var expected = opts.sumEncoding.value0.constructorTagTransform(ctorName);
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(tag === expected)(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showString)(expected) + " tag")))))(function () {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(tag);
                          });
                      })))(function (tag) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.contentsFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.contentsFieldName))(readArguments)))(function (args) {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(args);
                          });
                      });
                  };
              });
          };
      };
  };
  var arrayDecode = function (dictDecode) {
      return new Decode((function () {
          var readElement = function (i) {
              return function (value) {
                  return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(i))))(decode(dictDecode)(value));
              };
          };
          var readElements = function (arr) {
              return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
          };
          return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray)(readElements);
      })());
  };
  exports["decodeOpts"] = decodeOpts;
  exports["encodeOpts"] = encodeOpts;
  exports["defaultOptions"] = defaultOptions;
  exports["Decode"] = Decode;
  exports["stringDecode"] = stringDecode;
  exports["numberDecode"] = numberDecode;
  exports["intDecode"] = intDecode;
  exports["arrayDecode"] = arrayDecode;
  exports["stringEncode"] = stringEncode;
  exports["intEncode"] = intEncode;
  exports["decodeWithOptionsRecord"] = decodeWithOptionsRecord;
  exports["decodeWithOptionsOther"] = decodeWithOptionsOther;
  exports["encodeWithOptionsRecord"] = encodeWithOptionsRecord;
  exports["encodeWithOptionsOther"] = encodeWithOptionsOther;
  exports["decodeRecordNil"] = decodeRecordNil;
  exports["encodeRecordNil"] = encodeRecordNil;
  exports["decodeRecordCons"] = decodeRecordCons;
  exports["encodeRecordCons"] = encodeRecordCons;
  exports["genericDecodeConstructor"] = genericDecodeConstructor;
  exports["genericEncodeConstructor"] = genericEncodeConstructor;
  exports["genericDecodeArgsArgument"] = genericDecodeArgsArgument;
  exports["genericEncodeArgsArgument"] = genericEncodeArgsArgument;
  exports["genericCountArgsArgument"] = genericCountArgsArgument;
})(PS);
(function(exports) {
  "use strict";

  exports.parseJSONImpl = function (str) {
    return JSON.parse(str);
  };
})(PS["Foreign.JSON"] = PS["Foreign.JSON"] || {});
(function(exports) {
  "use strict";

  exports.runEffectFn1 = function runEffectFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["runEffectFn1"] = $foreign.runEffectFn1;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.JSON"] = $PS["Foreign.JSON"] || {};
  var exports = $PS["Foreign.JSON"];
  var $foreign = $PS["Foreign.JSON"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Foreign = $PS["Foreign"];                
  var parseJSON = (function () {
      var $0 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)((function () {
          var $3 = Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList);
          return function ($4) {
              return $3(Foreign.ForeignError.create(Effect_Exception.message($4)));
          };
      })());
      var $1 = Effect_Uncurried.runEffectFn1($foreign.parseJSONImpl);
      return function ($2) {
          return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity($0(Effect_Unsafe.unsafePerformEffect(Effect_Exception["try"]($1($2))))));
      };
  })();
  exports["parseJSON"] = parseJSON;
})(PS);
(function(exports) {
  /* globals exports, JSON */
  "use strict";

  exports.unsafeStringify = function (x) {
    return JSON.stringify(x);
  };                                  
  exports.unsafeDecodeURIComponent = decodeURIComponent;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Global.Unsafe"] = $PS["Global.Unsafe"] || {};
  var exports = $PS["Global.Unsafe"];
  var $foreign = $PS["Global.Unsafe"];
  exports["unsafeStringify"] = $foreign.unsafeStringify;
  exports["unsafeDecodeURIComponent"] = $foreign.unsafeDecodeURIComponent;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.Generic"] = $PS["Foreign.Generic"] || {};
  var exports = $PS["Foreign.Generic"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];
  var Foreign_JSON = $PS["Foreign.JSON"];
  var Global_Unsafe = $PS["Global.Unsafe"];                
  var genericEncode = function (dictGeneric) {
      return function (dictGenericEncode) {
          return function (opts) {
              var $10 = Foreign_Generic_Class.encodeOpts(dictGenericEncode)(opts);
              var $11 = Data_Generic_Rep.from(dictGeneric);
              return function ($12) {
                  return $10($11($12));
              };
          };
      };
  };
  var genericEncodeJSON = function (dictGeneric) {
      return function (dictGenericEncode) {
          return function (opts) {
              var $13 = genericEncode(dictGeneric)(dictGenericEncode)(opts);
              return function ($14) {
                  return Global_Unsafe.unsafeStringify($13($14));
              };
          };
      };
  };
  var genericDecode = function (dictGeneric) {
      return function (dictGenericDecode) {
          return function (opts) {
              var $15 = Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.to(dictGeneric));
              var $16 = Foreign_Generic_Class.decodeOpts(dictGenericDecode)(opts);
              return function ($17) {
                  return $15($16($17));
              };
          };
      };
  };
  var genericDecodeJSON = function (dictGeneric) {
      return function (dictGenericDecode) {
          return function (opts) {
              return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(genericDecode(dictGeneric)(dictGenericDecode)(opts))(Foreign_JSON.parseJSON);
          };
      };
  };
  exports["genericDecode"] = genericDecode;
  exports["genericDecodeJSON"] = genericDecodeJSON;
  exports["genericEncodeJSON"] = genericEncodeJSON;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Api"] = $PS["Api"] || {};
  var exports = $PS["Api"];
  var Affjax = $PS["Affjax"];
  var Affjax_RequestBody = $PS["Affjax.RequestBody"];
  var Affjax_RequestHeader = $PS["Affjax.RequestHeader"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Formatter_Parser_Interval = $PS["Data.Formatter.Parser.Interval"];
  var Data_Formatter_Parser_Utils = $PS["Data.Formatter.Parser.Utils"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Int = $PS["Data.Int"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Foreign = $PS["Foreign"];
  var Foreign_Generic = $PS["Foreign.Generic"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var RespGetIrdbManufacturers = function (x) {
      return x;
  };
  var MeasDateTime = function (x) {
      return x;
  };
  var MeasEnvironment = function (x) {
      return x;
  };
  var RespGetIrdb = (function () {
      function RespGetIrdb(value0) {
          this.value0 = value0;
      };
      RespGetIrdb.create = function (value0) {
          return new RespGetIrdb(value0);
      };
      return RespGetIrdb;
  })();
  var DatumInfraRed = function (x) {
      return x;
  };
  var BaseURL = function (x) {
      return x;
  };
  var urlApiV1Ircsv = function (v) {
      return v + "/api/v1/ir-csv";
  };
  var newtypeRespGetIrdbManufacturers = new Data_Newtype.Newtype(function (n) {
      return n;
  }, RespGetIrdbManufacturers);
  var newtypeMeasEnvironment = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MeasEnvironment);
  var newtypeMeasDateTime = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MeasDateTime);
  var newtypeDatumInfraRed = new Data_Newtype.Newtype(function (n) {
      return n;
  }, DatumInfraRed);
  var newtypeBaseURL = new Data_Newtype.Newtype(function (n) {
      return n;
  }, BaseURL);
  var genericRespGetIrdbManufacturers = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });   
  var genericRespGetIrdb = new Data_Generic_Rep.Generic(function (x) {
      return x.value0;
  }, function (x) {
      return new RespGetIrdb(x);
  });
  var genericRespGetI2cDevices = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });   
  var genericMeasEnvironment = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });   
  var genericEnvMeasurements = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var genericDatumIrdb = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });   
  var genericDatumInfraRed = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var encoder = function (dictGeneric) {
      return function (dictGenericEncode) {
          return Foreign_Generic.genericEncodeJSON(dictGeneric)(dictGenericEncode)({
              sumEncoding: Foreign_Generic_Class.defaultOptions.sumEncoding,
              unwrapSingleConstructors: true,
              unwrapSingleArguments: Foreign_Generic_Class.defaultOptions.unwrapSingleArguments,
              fieldTransform: Foreign_Generic_Class.defaultOptions.fieldTransform
          });
      };
  };
  var postApiV1InfraRed = function (param) {
      var request = {
          url: Data_Newtype.unwrap(newtypeBaseURL)(param.baseurl) + "/api/v1/infra-red/",
          method: new Data_Either.Left(Data_HTTP_Method.POST.value),
          headers: [ new Affjax_RequestHeader.ContentType(Data_MediaType_Common.applicationJSON) ],
          content: new Data_Maybe.Just(Affjax_RequestBody.string(encoder(genericDatumInfraRed)(Foreign_Generic_Class.genericEncodeConstructor(new Data_Symbol.IsSymbol(function () {
              return "DatumInfraRed";
          }))(Foreign_Generic_Class.genericEncodeArgsArgument(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "code";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "button_number";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode))))))(param.datum))),
          responseFormat: Affjax_ResponseFormat.string,
          password: Affjax.defaultRequest.password,
          username: Affjax.defaultRequest.username,
          withCredentials: Affjax.defaultRequest.withCredentials
      };
      return Data_Functor.map(Effect_Aff.functorAff)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Affjax.printError))(Affjax.request(request));
  };
  var postApiV1TransIR = function (param) {
      var request = {
          url: Data_Newtype.unwrap(newtypeBaseURL)(param.baseurl) + "/api/v1/trans-ir/",
          method: new Data_Either.Left(Data_HTTP_Method.POST.value),
          headers: [ new Affjax_RequestHeader.ContentType(Data_MediaType_Common.applicationJSON) ],
          content: new Data_Maybe.Just(Affjax_RequestBody.string(encoder(genericDatumInfraRed)(Foreign_Generic_Class.genericEncodeConstructor(new Data_Symbol.IsSymbol(function () {
              return "DatumInfraRed";
          }))(Foreign_Generic_Class.genericEncodeArgsArgument(Foreign_Generic_Class.encodeWithOptionsRecord()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
              return "code";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
              return "button_number";
          }))(Foreign_Generic_Class.encodeWithOptionsOther(Foreign_Generic_Class.intEncode))))))(param.datum))),
          responseFormat: Affjax_ResponseFormat.string,
          password: Affjax.defaultRequest.password,
          username: Affjax.defaultRequest.username,
          withCredentials: Affjax.defaultRequest.withCredentials
      };
      return Data_Functor.map(Effect_Aff.functorAff)(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Affjax.printError))(Affjax.request(request));
  };  
  var decoder = function (dictGeneric) {
      return function (dictGenericDecode) {
          var renderError = (function () {
              var $150 = Data_String_Common.joinWith("");
              var $151 = Data_Array.fromFoldable(Data_List_Types.foldableNonEmptyList);
              var $152 = Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.renderForeignError);
              return function ($153) {
                  return $150($151($152($153)));
              };
          })();
          var decodeJSON = Foreign_Generic.genericDecodeJSON(dictGeneric)(dictGenericDecode)({
              sumEncoding: Foreign_Generic_Class.defaultOptions.sumEncoding,
              unwrapSingleConstructors: true,
              unwrapSingleArguments: Foreign_Generic_Class.defaultOptions.unwrapSingleArguments,
              fieldTransform: Foreign_Generic_Class.defaultOptions.fieldTransform
          });
          var $154 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(renderError);
          return function ($155) {
              return $154(Control_Monad_Except.runExcept(decodeJSON($155)));
          };
      };
  };
  var getApiV1I2cDevices = function (param) {
      var resp = function (v) {
          if (v instanceof Data_Either.Right) {
              return Control_Bind.bind(Data_Either.bindEither)(decoder(genericRespGetI2cDevices)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "RespGetI2cDevices";
              }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decodeWithOptionsRecord()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "data";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.arrayDecode(Foreign_Generic_Class.intDecode)))())))(Foreign_Generic_Class.genericCountArgsArgument))(v.value0.body))(function (newBody) {
                  return Data_Either.Right.create({
                      body: newBody,
                      headers: v.value0.headers,
                      status: v.value0.status,
                      statusText: v.value0.statusText
                  });
              });
          };
          if (v instanceof Data_Either.Left) {
              return Data_Either.Left.create(Affjax.printError(v.value0));
          };
          throw new Error("Failed pattern match at Api (line 213, column 10 - line 219, column 31): " + [ v.constructor.name ]);
      };
      var opts = (function (v) {
          if (v === "") {
              return "";
          };
          return "?" + v;
      })(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("&")(Data_Array.catMaybes([ Data_Functor.map(Data_Maybe.functorMaybe)((function () {
          var $156 = Data_Int.toStringAs(Data_Int.decimal);
          return function ($157) {
              return (function (v) {
                  return "busnum=" + v;
              })($156($157));
          };
      })())(param.busnumber) ])));
      var url = Data_Newtype.unwrap(newtypeBaseURL)(param.baseurl) + ("/api/v1/i2c-devices" + opts);
      return Data_Functor.map(Effect_Aff.functorAff)(resp)(Affjax.get(Affjax_ResponseFormat.string)(url));
  };
  var getApiV1InfraRed = function (param) {
      var url = Data_String_Common.joinWith("")([ Data_Newtype.unwrap(newtypeBaseURL)(param.baseurl), "/api/v1/infra-red/", Data_Int.toStringAs(Data_Int.decimal)(param.buttonNumber) ]);
      var resp = function (v) {
          if (v instanceof Data_Either.Right) {
              return Control_Bind.bind(Data_Either.bindEither)(decoder(genericDatumInfraRed)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "DatumInfraRed";
              }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decodeWithOptionsRecord()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "code";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
                  return "button_number";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.intDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))(v.value0.body))(function (newBody) {
                  return Data_Either.Right.create({
                      body: newBody,
                      headers: v.value0.headers,
                      status: v.value0.status,
                      statusText: v.value0.statusText
                  });
              });
          };
          if (v instanceof Data_Either.Left) {
              return Data_Either.Left.create(Affjax.printError(v.value0));
          };
          throw new Error("Failed pattern match at Api (line 270, column 10 - line 276, column 31): " + [ v.constructor.name ]);
      };
      return Data_Functor.map(Effect_Aff.functorAff)(resp)(Affjax.get(Affjax_ResponseFormat.string)(url));
  };
  var getApiV1IrdbManufacturers = function (param) {
      var url = Data_Newtype.unwrap(newtypeBaseURL)(param.baseurl) + "/api/v1/irdb-manufacturers";
      var resp = function (v) {
          if (v instanceof Data_Either.Right) {
              return Control_Bind.bind(Data_Either.bindEither)(decoder(genericRespGetIrdbManufacturers)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "RespGetIrdbManufacturers";
              }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decodeWithOptionsRecord()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "manufacturers";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.arrayDecode(Foreign_Generic_Class.stringDecode)))())))(Foreign_Generic_Class.genericCountArgsArgument))(v.value0.body))(function (newBody) {
                  return Data_Either.Right.create({
                      body: newBody,
                      headers: v.value0.headers,
                      status: v.value0.status,
                      statusText: v.value0.statusText
                  });
              });
          };
          if (v instanceof Data_Either.Left) {
              return Data_Either.Left.create(Affjax.printError(v.value0));
          };
          throw new Error("Failed pattern match at Api (line 447, column 10 - line 453, column 31): " + [ v.constructor.name ]);
      };
      return Data_Functor.map(Effect_Aff.functorAff)(resp)(Affjax.get(Affjax_ResponseFormat.string)(url));
  };  
  var decodeMeasDateTime = new Foreign_Generic_Class.Decode(function (value) {
      var error = Data_List_NonEmpty.singleton(new Foreign.TypeMismatch("DateTime", Foreign.tagOf(value)));
      var fromString = function (original) {
          return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Data_Function["const"](error))(MeasDateTime)(Data_Formatter_Parser_Utils.runP(Text_Parsing_Parser_String.stringLikeString)(Data_Formatter_Parser_Interval.parseDateTime(Data_Identity.monadIdentity))(original));
      };
      return Control_Monad_Except.mapExcept(function (v) {
          return Control_Bind.bindFlipped(Data_Either.bindEither)(fromString)(v);
      })(Foreign.readString(value));
  });
  var decodeMeasEnvironment = new Foreign_Generic_Class.Decode(Foreign_Generic.genericDecode(genericMeasEnvironment)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "MeasEnvironment";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decodeWithOptionsRecord()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
      return "sensor_id";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "rh";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
      return "measured_at";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(decodeMeasDateTime))())(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.intDecode))())(new Data_Symbol.IsSymbol(function () {
      return "hpa";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
      return "degc";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.numberDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
      sumEncoding: Foreign_Generic_Class.defaultOptions.sumEncoding,
      unwrapSingleConstructors: true,
      unwrapSingleArguments: Foreign_Generic_Class.defaultOptions.unwrapSingleArguments,
      fieldTransform: Foreign_Generic_Class.defaultOptions.fieldTransform
  }));
  var getApiV1Measurements = function (param) {
      var pickupData = function (v) {
          return v.env;
      };
      var resp = function (v) {
          if (v instanceof Data_Either.Right) {
              return Control_Bind.bind(Data_Either.bindEither)(decoder(genericEnvMeasurements)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "EnvMeasurements";
              }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decodeWithOptionsRecord()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "env";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.arrayDecode(decodeMeasEnvironment)))())))(Foreign_Generic_Class.genericCountArgsArgument))(v.value0.body))(function (newBody) {
                  return Data_Either.Right.create({
                      body: pickupData(newBody),
                      headers: v.value0.headers,
                      status: v.value0.status,
                      statusText: v.value0.statusText
                  });
              });
          };
          if (v instanceof Data_Either.Left) {
              return Data_Either.Left.create(Affjax.printError(v.value0));
          };
          throw new Error("Failed pattern match at Api (line 164, column 10 - line 170, column 31): " + [ v.constructor.name ]);
      };
      var opts = (function (v) {
          if (v === "") {
              return "";
          };
          return "?" + v;
      })(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("&")(Data_Array.catMaybes([ Data_Functor.map(Data_Maybe.functorMaybe)((function () {
          var $158 = Data_Int.toStringAs(Data_Int.decimal);
          return function ($159) {
              return (function (v) {
                  return "limits=" + v;
              })($158($159));
          };
      })())(param.limits) ])));
      var url = Data_Newtype.unwrap(newtypeBaseURL)(param.baseurl) + ("/api/v1/measurements" + opts);
      return Data_Functor.map(Effect_Aff.functorAff)(resp)(Affjax.get(Affjax_ResponseFormat.string)(url));
  };  
  var decodeDatumIrdb = new Foreign_Generic_Class.Decode(Foreign_Generic.genericDecode(genericDatumIrdb)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "DatumIrdb";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decodeWithOptionsRecord()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
      return "prod";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "manuf";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "key";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.intDecode))())(new Data_Symbol.IsSymbol(function () {
      return "code";
  }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
      sumEncoding: Foreign_Generic_Class.defaultOptions.sumEncoding,
      unwrapSingleConstructors: true,
      unwrapSingleArguments: Foreign_Generic_Class.defaultOptions.unwrapSingleArguments,
      fieldTransform: Foreign_Generic_Class.defaultOptions.fieldTransform
  }));
  var getApiV1Irdb = function (param) {
      var resp = function (v) {
          if (v instanceof Data_Either.Right) {
              return Control_Bind.bind(Data_Either.bindEither)(decoder(genericRespGetIrdb)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "RespGetIrdb";
              }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decodeWithOptionsRecord()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
                  return "pages";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.intDecode))())(new Data_Symbol.IsSymbol(function () {
                  return "page";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.intDecode))())(new Data_Symbol.IsSymbol(function () {
                  return "limits";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.intDecode))())(new Data_Symbol.IsSymbol(function () {
                  return "data";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.arrayDecode(decodeDatumIrdb)))())(new Data_Symbol.IsSymbol(function () {
                  return "counts";
              }))(Foreign_Generic_Class.decodeWithOptionsOther(Foreign_Generic_Class.intDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))(v.value0.body))(function (newBody) {
                  return Data_Either.Right.create({
                      body: newBody,
                      headers: v.value0.headers,
                      status: v.value0.status,
                      statusText: v.value0.statusText
                  });
              });
          };
          if (v instanceof Data_Either.Left) {
              return Data_Either.Left.create(Affjax.printError(v.value0));
          };
          throw new Error("Failed pattern match at Api (line 394, column 10 - line 400, column 31): " + [ v.constructor.name ]);
      };
      var opts = (function (v) {
          if (v === "") {
              return "";
          };
          return "?" + v;
      })(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("&")(Data_Array.catMaybes([ Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return "manufacturer=" + v;
      })(param.manufacturer), Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return "product=" + v;
      })(param.product), Data_Functor.map(Data_Maybe.functorMaybe)((function () {
          var $160 = Data_Int.toStringAs(Data_Int.decimal);
          return function ($161) {
              return (function (v) {
                  return "limits=" + v;
              })($160($161));
          };
      })())(param.limits), Data_Functor.map(Data_Maybe.functorMaybe)((function () {
          var $162 = Data_Int.toStringAs(Data_Int.decimal);
          return function ($163) {
              return (function (v) {
                  return "page=" + v;
              })($162($163));
          };
      })())(param.page) ])));
      var url = Data_Newtype.unwrap(newtypeBaseURL)(param.baseurl) + ("/api/v1/irdb" + opts);
      return Data_Functor.map(Effect_Aff.functorAff)(resp)(Affjax.get(Affjax_ResponseFormat.string)(url));
  };
  exports["getApiV1I2cDevices"] = getApiV1I2cDevices;
  exports["getApiV1InfraRed"] = getApiV1InfraRed;
  exports["getApiV1Irdb"] = getApiV1Irdb;
  exports["getApiV1IrdbManufacturers"] = getApiV1IrdbManufacturers;
  exports["getApiV1Measurements"] = getApiV1Measurements;
  exports["postApiV1InfraRed"] = postApiV1InfraRed;
  exports["postApiV1TransIR"] = postApiV1TransIR;
  exports["urlApiV1Ircsv"] = urlApiV1Ircsv;
  exports["newtypeMeasDateTime"] = newtypeMeasDateTime;
  exports["newtypeMeasEnvironment"] = newtypeMeasEnvironment;
  exports["newtypeDatumInfraRed"] = newtypeDatumInfraRed;
  exports["newtypeRespGetIrdbManufacturers"] = newtypeRespGetIrdbManufacturers;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Aff.Class"] = $PS["Effect.Aff.Class"] || {};
  var exports = $PS["Effect.Aff.Class"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Effect_Aff = $PS["Effect.Aff"];                
  var MonadAff = function (MonadEffect0, liftAff) {
      this.MonadEffect0 = MonadEffect0;
      this.liftAff = liftAff;
  };
  var monadAffAff = new MonadAff(function () {
      return Effect_Aff.monadEffectAff;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftAff = function (dict) {
      return dict.liftAff;
  };
  var monadAffReader = function (dictMonadAff) {
      return new MonadAff(function () {
          return Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0());
      }, (function () {
          var $25 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadAff.MonadEffect0()).Monad0());
          var $26 = liftAff(dictMonadAff);
          return function ($27) {
              return $25($26($27));
          };
      })());
  };
  exports["liftAff"] = liftAff;
  exports["MonadAff"] = MonadAff;
  exports["monadAffAff"] = monadAffAff;
  exports["monadAffReader"] = monadAffReader;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Applicative.Free"] = $PS["Control.Applicative.Free"] || {};
  var exports = $PS["Control.Applicative.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var Ap = (function () {
      function Ap(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Ap.create = function (value0) {
          return function (value1) {
              return new Ap(value0, value1);
          };
      };
      return Ap;
  })();
  var mkAp = function (fba) {
      return function (fb) {
          return new Ap(fba, fb);
      };
  };
  var liftFreeAp = Lift.create;
  var goLeft = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_valStack) {
              return function ($copy_nat) {
                  return function ($copy_func) {
                      return function ($copy_count) {
                          var $tco_var_dictApplicative = $copy_dictApplicative;
                          var $tco_var_fStack = $copy_fStack;
                          var $tco_var_valStack = $copy_valStack;
                          var $tco_var_nat = $copy_nat;
                          var $tco_var_func = $copy_func;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                              if (func instanceof Pure) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: Control_Applicative.pure(dictApplicative)(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Lift) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: nat(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Ap) {
                                  $tco_var_dictApplicative = dictApplicative;
                                  $tco_var_fStack = fStack;
                                  $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                                  $tco_var_nat = nat;
                                  $tco_var_func = func.value0;
                                  $copy_count = count + 1 | 0;
                                  return;
                              };
                              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [ func.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
                          };
                          return $tco_result;
                      };
                  };
              };
          };
      };
  };
  var goApply = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_vals) {
              return function ($copy_gVal) {
                  var $tco_var_dictApplicative = $copy_dictApplicative;
                  var $tco_var_fStack = $copy_fStack;
                  var $tco_var_vals = $copy_vals;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictApplicative, fStack, vals, gVal) {
                      if (fStack instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return new Data_Either.Left(gVal);
                      };
                      if (fStack instanceof Data_List_Types.Cons) {
                          var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
                          var $14 = fStack.value0.count === 1;
                          if ($14) {
                              if (fStack.value1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return new Data_Either.Left(gRes);
                              };
                              $tco_var_dictApplicative = dictApplicative;
                              $tco_var_fStack = fStack.value1;
                              $tco_var_vals = vals;
                              $copy_gVal = gRes;
                              return;
                          };
                          if (vals instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Data_Either.Left(gRes);
                          };
                          if (vals instanceof Data_List_Types.Cons) {
                              $tco_done = true;
                              return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                  func: gRes,
                                  count: fStack.value0.count - 1 | 0
                              }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [ vals.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [ fStack.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var functorFreeAp = new Data_Functor.Functor(function (f) {
      return function (x) {
          return mkAp(new Pure(f))(x);
      };
  });
  var foldFreeAp = function (dictApplicative) {
      return function (nat) {
          return function (z) {
              var go = function ($copy_v) {
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(v) {
                      if (v.value1.value0 instanceof Pure) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Lift) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Ap) {
                          var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
                          $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
                          return;
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [ v.value1.value0.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($copy_v);
                  };
                  return $tco_result;
              };
              return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
          };
      };
  };
  var retractFreeAp = function (dictApplicative) {
      return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
  var applyFreeAp = new Control_Apply.Apply(function () {
      return functorFreeAp;
  }, function (fba) {
      return function (fb) {
          return mkAp(fba)(fb);
      };
  });
  var applicativeFreeAp = new Control_Applicative.Applicative(function () {
      return applyFreeAp;
  }, Pure.create);
  var hoistFreeAp = function (f) {
      return foldFreeAp(applicativeFreeAp)(function ($37) {
          return liftFreeAp(f($37));
      });
  };
  exports["retractFreeAp"] = retractFreeAp;
  exports["hoistFreeAp"] = hoistFreeAp;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.CatQueue"] = $PS["Data.CatQueue"] || {};
  var exports = $PS["Data.CatQueue"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                                
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.CatList"] = $PS["Data.CatList"] || {};
  var exports = $PS["Data.CatList"];
  var Data_CatQueue = $PS["Data.CatQueue"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (v1) {
          if (v instanceof CatNil) {
              return v1;
          };
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $44 = Data_CatQueue["null"](v.value1);
              if ($44) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["empty"] = empty;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Free"] = $PS["Control.Monad.Free"] || {};
  var exports = $PS["Control.Monad.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_CatList = $PS["Data.CatList"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)((function () {
              var $120 = Control_Applicative.pure(freeApplicative);
              return function ($121) {
                  return $120(k($121));
              };
          })())(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($122) {
      return fromView(Return.create($122));
  });
  var liftF = function (f) {
      return fromView(new Bind(f, (function () {
          var $123 = Control_Applicative.pure(freeApplicative);
          return function ($124) {
              return $123($124);
          };
      })()));
  };
  var substFree = function (k) {
      var go = function (f) {
          var v = toView(f);
          if (v instanceof Return) {
              return Control_Applicative.pure(freeApplicative)(v.value0);
          };
          if (v instanceof Bind) {
              return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): " + [ v.constructor.name ]);
      };
      return go;
  };
  var hoistFree = function (k) {
      return substFree(function ($125) {
          return liftF(k($125));
      });
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
              };
              if (v instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($136) {
                      return Control_Monad_Rec_Class.Loop.create(v.value1($136));
                  })(k(v.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["liftF"] = liftF;
  exports["hoistFree"] = hoistFree;
  exports["foldFree"] = foldFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Exists"] = $PS["Data.Exists"] || {};
  var exports = $PS["Data.Exists"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Free.Trans"] = $PS["Control.Monad.Free.Trans"] || {};
  var exports = $PS["Control.Monad.Free.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];                      
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)((function () {
                              var $123 = Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f);
                              return function ($124) {
                                  return $123(v1.value1($124));
                              };
                          })());
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 59, column 1 - line 61, column 71): " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var bimapFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (nf) {
              return function (nm) {
                  return function (v) {
                      if (v instanceof Bind) {
                          return Data_Exists.runExists(function (v1) {
                              return bound((function () {
                                  var $125 = bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm);
                                  return function ($126) {
                                      return $125(v1.value0($126));
                                  };
                              })())((function () {
                                  var $127 = bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm);
                                  return function ($128) {
                                      return $127(v1.value1($128));
                                  };
                              })());
                          })(v.value0);
                      };
                      if (v instanceof FreeT) {
                          return new FreeT(function (v1) {
                              return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)((function () {
                                  var $129 = Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm));
                                  return function ($130) {
                                      return nf($129($130));
                                  };
                              })()))(nm(v.value0(Data_Unit.unit)));
                          });
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 123, column 1 - line 123, column 109): " + [ nf.constructor.name, nm.constructor.name, v.constructor.name ]);
                  };
              };
          };
      };
  };
  var hoistFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
              });
          });
      };
  };
  var liftFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return function (fa) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
              });
          };
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var v2 = v1.value0(Data_Unit.unit);
                      if (v2 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                              };
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                  })(v3.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 54, column 20 - line 56, column 67): " + [ v3.constructor.name ]);
                          });
                      };
                      if (v2 instanceof Bind) {
                          return Data_Exists.runExists(function (v3) {
                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                              })));
                          })(v2.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 52, column 5 - line 57, column 98): " + [ v2.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 49, column 3 - line 49, column 75): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var runFreeT = function (dictFunctor) {
      return function (dictMonadRec) {
          return function (interp) {
              var go = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 141, column 3 - line 141, column 63): " + [ v.constructor.name ]);
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
          };
      };
  };
  var monadRecFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad_Rec_Class.MonadRec(function () {
              return monadFreeT(dictFunctor)(dictMonad);
          }, function (f) {
              var go = function (s) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                      if (v instanceof Control_Monad_Rec_Class.Loop) {
                          return go(v.value0);
                      };
                      if (v instanceof Control_Monad_Rec_Class.Done) {
                          return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 82, column 15 - line 84, column 25): " + [ v.constructor.name ]);
                  });
              };
              return go;
          });
      };
  };
  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["hoistFreeT"] = hoistFreeT;
  exports["resume"] = resume;
  exports["runFreeT"] = runFreeT;
  exports["functorFreeT"] = functorFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];
  var Control_Category = $PS["Control.Category"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
      };
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
  exports["profunctorFn"] = profunctorFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Coroutine"] = $PS["Control.Coroutine"] || {};
  var exports = $PS["Control.Coroutine"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Emit = (function () {
      function Emit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Emit.create = function (value0) {
          return function (value1) {
              return new Emit(value0, value1);
          };
      };
      return Emit;
  })();
  var runProcess = function (dictMonadRec) {
      return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)((function () {
          var $176 = Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0());
          var $177 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
          return function ($178) {
              return $176($177($178));
          };
      })());
  };
  var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
          };
      };
  });
  var loop = function (dictFunctor) {
      return function (dictMonad) {
          return function (me) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                  return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
              })(Data_Unit.unit);
          };
      };
  };
  var fuseWithL = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (zap) {
                      return function (fs) {
                          return function (gs) {
                              var go = function (v) {
                                  return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (l) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (r) {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                                              return Control_Monad_Free_Trans.freeT(function (v1) {
                                                  return go(t);
                                              });
                                          })(zap(Data_Tuple.Tuple.create)(l)(r)));
                                      });
                                  }));
                              };
                              return Control_Monad_Free_Trans.freeT(function (v) {
                                  return go(new Data_Tuple.Tuple(fs, gs));
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var fuseWith = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (dictParallel) {
                      return function (zap) {
                          return function (fs) {
                              return function (gs) {
                                  var go = function (v) {
                                      return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (next) {
                                          if (next instanceof Data_Either.Left) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(next.value0));
                                          };
                                          if (next instanceof Data_Either.Right) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                  return Control_Monad_Free_Trans.freeT(function (v1) {
                                                      return go(t);
                                                  });
                                              })(next.value0)));
                                          };
                                          throw new Error("Failed pattern match at Control.Coroutine (line 79, column 5 - line 81, column 63): " + [ next.constructor.name ]);
                                      });
                                  };
                                  return Control_Monad_Free_Trans.freeT(function (v) {
                                      return go(new Data_Tuple.Tuple(fs, gs));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
  var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Emit(f(v.value0), g(v.value1));
          };
      };
  });
  var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
  var connect = function (dictMonadRec) {
      return function (dictParallel) {
          return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
              return function (v) {
                  return function (v1) {
                      return f(v.value1)(v1(v.value0));
                  };
              };
          });
      };
  };
  var emit = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
      };
  };
  var producer = function (dictMonad) {
      return function (recv) {
          return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (e) {
              if (e instanceof Data_Either.Left) {
                  return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad.Bind1()).Apply0()).Functor0()))(emit(dictMonad)(e.value0))(Data_Maybe.Nothing.value);
              };
              if (e instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(e.value0));
              };
              throw new Error("Failed pattern match at Control.Coroutine (line 125, column 3 - line 127, column 29): " + [ e.constructor.name ]);
          }));
      };
  };
  var pullFrom = function (dictMonadRec) {
      return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
          return function (v) {
              return function (v1) {
                  return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
              };
          };
      });
  };
  var $$await = function (dictMonad) {
      return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["runProcess"] = runProcess;
  exports["producer"] = producer;
  exports["await"] = $$await;
  exports["connect"] = connect;
  exports["pullFrom"] = pullFrom;
  exports["functorEmit"] = functorEmit;
  exports["functorAwait"] = functorAwait;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.EventSource"] = $PS["Halogen.Query.EventSource"] || {};
  var exports = $PS["Halogen.Query.EventSource"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Data_Functor = $PS["Data.Functor"];
  var EventSource = function (x) {
      return x;
  };
  var hoistFinalizer = function (nat) {
      return function (v) {
          return nat(v);
      };
  };
  var hoist = function (dictFunctor) {
      return function (nat) {
          return function (v) {
              return EventSource(Data_Functor.map(dictFunctor)(function (e) {
                  return {
                      producer: Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictFunctor)(nat)(e.producer),
                      finalizer: hoistFinalizer(nat)(e.finalizer)
                  };
              })(nat(v)));
          };
      };
  };
  var finalize = function (v) {
      return v;
  };
  exports["hoist"] = hoist;
  exports["finalize"] = finalize;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.HalogenM"] = $PS["Halogen.Query.HalogenM"] || {};
  var exports = $PS["Halogen.Query.HalogenM"];
  var Control_Applicative_Free = $PS["Control.Applicative.Free"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];                
  var SubscriptionId = function (x) {
      return x;
  };
  var ForkId = function (x) {
      return x;
  };
  var State = (function () {
      function State(value0) {
          this.value0 = value0;
      };
      State.create = function (value0) {
          return new State(value0);
      };
      return State;
  })();
  var Subscribe = (function () {
      function Subscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Subscribe.create = function (value0) {
          return function (value1) {
              return new Subscribe(value0, value1);
          };
      };
      return Subscribe;
  })();
  var Unsubscribe = (function () {
      function Unsubscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Unsubscribe.create = function (value0) {
          return function (value1) {
              return new Unsubscribe(value0, value1);
          };
      };
      return Unsubscribe;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var ChildQuery = (function () {
      function ChildQuery(value0) {
          this.value0 = value0;
      };
      ChildQuery.create = function (value0) {
          return new ChildQuery(value0);
      };
      return ChildQuery;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Par = (function () {
      function Par(value0) {
          this.value0 = value0;
      };
      Par.create = function (value0) {
          return new Par(value0);
      };
      return Par;
  })();
  var Fork = (function () {
      function Fork(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Fork.create = function (value0) {
          return function (value1) {
              return new Fork(value0, value1);
          };
      };
      return Fork;
  })();
  var Kill = (function () {
      function Kill(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Kill.create = function (value0) {
          return function (value1) {
              return new Kill(value0, value1);
          };
      };
      return Kill;
  })();
  var GetRef = (function () {
      function GetRef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GetRef.create = function (value0) {
          return function (value1) {
              return new GetRef(value0, value1);
          };
      };
      return GetRef;
  })();
  var HalogenAp = function (x) {
      return x;
  };
  var HalogenM = function (x) {
      return x;
  };
  var raise = function (o) {
      return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
  };
  var ordSubscriptionId = Data_Ord.ordInt;
  var ordForkId = Data_Ord.ordInt;
  var newtypeHalogenAp = new Data_Newtype.Newtype(function (n) {
      return n;
  }, HalogenAp);
  var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($138) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create($138)));
      };
  });
  var monadHalogenM = Control_Monad_Free.freeMonad;
  var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
      return monadHalogenM;
  }, function ($139) {
      return HalogenM(Control_Monad_Free.liftF(State.create($139)));
  });
  var monadEffectHalogenM = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadHalogenM;
      }, (function () {
          var $144 = Effect_Class.liftEffect(dictMonadEffect);
          return function ($145) {
              return HalogenM(Control_Monad_Free.liftF(Lift.create($144($145))));
          };
      })());
  };
  var monadAffHalogenM = function (dictMonadAff) {
      return new Effect_Aff_Class.MonadAff(function () {
          return monadEffectHalogenM(dictMonadAff.MonadEffect0());
      }, (function () {
          var $146 = Effect_Aff_Class.liftAff(dictMonadAff);
          return function ($147) {
              return HalogenM(Control_Monad_Free.liftF(Lift.create($146($147))));
          };
      })());
  };
  var kill = function (fid) {
      return HalogenM(Control_Monad_Free.liftF(new Kill(fid, Data_Unit.unit)));
  };
  var hoist = function (dictFunctor) {
      return function (nat) {
          return function (v) {
              var go = function (v1) {
                  if (v1 instanceof State) {
                      return new State(v1.value0);
                  };
                  if (v1 instanceof Subscribe) {
                      return new Subscribe((function () {
                          var $152 = Halogen_Query_EventSource.hoist(dictFunctor)(nat);
                          return function ($153) {
                              return $152(v1.value0($153));
                          };
                      })(), v1.value1);
                  };
                  if (v1 instanceof Unsubscribe) {
                      return new Unsubscribe(v1.value0, v1.value1);
                  };
                  if (v1 instanceof Lift) {
                      return new Lift(nat(v1.value0));
                  };
                  if (v1 instanceof ChildQuery) {
                      return new ChildQuery(v1.value0);
                  };
                  if (v1 instanceof Raise) {
                      return new Raise(v1.value0, v1.value1);
                  };
                  if (v1 instanceof Par) {
                      return new Par(Data_Newtype.over(newtypeHalogenAp)(newtypeHalogenAp)(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));
                  };
                  if (v1 instanceof Fork) {
                      return new Fork(hoist(dictFunctor)(nat)(v1.value0), v1.value1);
                  };
                  if (v1 instanceof Kill) {
                      return new Kill(v1.value0, v1.value1);
                  };
                  if (v1 instanceof GetRef) {
                      return new GetRef(v1.value0, v1.value1);
                  };
                  throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 281, column 8 - line 291, column 29): " + [ v1.constructor.name ]);
              };
              return Control_Monad_Free.hoistFree(go)(v);
          };
      };
  };
  var getRef = function (p) {
      return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.identity(Control_Category.categoryFn))));
  };
  var functorHalogenM = Control_Monad_Free.freeFunctor;
  var fork = function (hmu) {
      return HalogenM(Control_Monad_Free.liftF(new Fork(hmu, Control_Category.identity(Control_Category.categoryFn))));
  };                           
  var bindHalogenM = Control_Monad_Free.freeBind;
  var applyHalogenM = Control_Monad_Free.freeApply;         
  var applicativeHalogenM = Control_Monad_Free.freeApplicative;
  exports["State"] = State;
  exports["Subscribe"] = Subscribe;
  exports["Unsubscribe"] = Unsubscribe;
  exports["Lift"] = Lift;
  exports["ChildQuery"] = ChildQuery;
  exports["Raise"] = Raise;
  exports["Par"] = Par;
  exports["Fork"] = Fork;
  exports["Kill"] = Kill;
  exports["GetRef"] = GetRef;
  exports["HalogenM"] = HalogenM;
  exports["raise"] = raise;
  exports["SubscriptionId"] = SubscriptionId;
  exports["ForkId"] = ForkId;
  exports["fork"] = fork;
  exports["kill"] = kill;
  exports["getRef"] = getRef;
  exports["hoist"] = hoist;
  exports["functorHalogenM"] = functorHalogenM;
  exports["applyHalogenM"] = applyHalogenM;
  exports["applicativeHalogenM"] = applicativeHalogenM;
  exports["bindHalogenM"] = bindHalogenM;
  exports["monadHalogenM"] = monadHalogenM;
  exports["monadEffectHalogenM"] = monadEffectHalogenM;
  exports["monadAffHalogenM"] = monadAffHalogenM;
  exports["monadTransHalogenM"] = monadTransHalogenM;
  exports["monadStateHalogenM"] = monadStateHalogenM;
  exports["ordSubscriptionId"] = ordSubscriptionId;
  exports["ordForkId"] = ordForkId;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];                          
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [ v.constructor.name ]);
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var functorMap = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Leaf) {
              return Leaf.value;
          };
          if (v1 instanceof Two) {
              return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
          };
          if (v1 instanceof Three) {
              return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
          };
          throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 99, column 110): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  }; 
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 549, column 15 - line 551, column 25): " + [ v.constructor.name ]);
              };
          };
      };
  };
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["delete"] = $$delete;
  exports["pop"] = pop;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["functorMap"] = functorMap;
  exports["foldableMap"] = foldableMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Semiring.Free"] = $PS["Data.Semiring.Free"] || {};
  var exports = $PS["Data.Semiring.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];                      
  var Free = function (x) {
      return x;
  };
  var semiringFree = new Data_Semiring.Semiring(function (v) {
      return function (v1) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(v)(v1);
      };
  }, function (v) {
      return function (v1) {
          return Control_Bind.bind(Data_List_Types.bindList)(v)(function (xs) {
              return Control_Bind.bind(Data_List_Types.bindList)(v1)(function (ys) {
                  return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(ys));
              });
          });
      };
  }, Data_List.singleton(Data_List_Types.Nil.value), Data_List_Types.Nil.value);
  var newtypeFree = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Free);
  var free = function (a) {
      return Data_List.singleton(Data_List.singleton(a));
  };
  exports["free"] = free;
  exports["newtypeFree"] = newtypeFree;
  exports["semiringFree"] = semiringFree;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Validation.Semiring"] = $PS["Data.Validation.Semiring"] || {};
  var exports = $PS["Data.Validation.Semiring"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Either = $PS["Data.Either"];
  var Data_Semiring = $PS["Data.Semiring"];                      
  var V = function (x) {
      return x;
  };
  var unV = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Data_Either.Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Data_Either.Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Validation.Semiring (line 48, column 1 - line 48, column 77): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var invalid = function ($71) {
      return V(Data_Either.Left.create($71));
  };
  var functorV = Data_Either.functorEither;    
  var applyV = function (dictSemiring) {
      return new Control_Apply.Apply(function () {
          return functorV;
      }, function (v) {
          return function (v1) {
              if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0));
              };
              if (v instanceof Data_Either.Left) {
                  return new Data_Either.Left(v.value0);
              };
              if (v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(v1.value0);
              };
              if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                  return new Data_Either.Right(v.value0(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Validation.Semiring (line 89, column 1 - line 93, column 54): " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  var applicativeV = function (dictSemiring) {
      return new Control_Applicative.Applicative(function () {
          return applyV(dictSemiring);
      }, function ($80) {
          return V(Data_Either.Right.create($80));
      });
  };
  var altV = function (dictSemiring) {
      return new Control_Alt.Alt(function () {
          return functorV;
      }, function (v) {
          return function (v1) {
              if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0));
              };
              if (v instanceof Data_Either.Left) {
                  return v1;
              };
              if (v instanceof Data_Either.Right) {
                  return new Data_Either.Right(v.value0);
              };
              throw new Error("Failed pattern match at Data.Validation.Semiring (line 104, column 1 - line 107, column 36): " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  exports["unV"] = unV;
  exports["invalid"] = invalid;
  exports["applicativeV"] = applicativeV;
  exports["altV"] = altV;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.Match.Error"] = $PS["Routing.Match.Error"] || {};
  var exports = $PS["Routing.Match.Error"];
  var UnexpectedPath = (function () {
      function UnexpectedPath(value0) {
          this.value0 = value0;
      };
      UnexpectedPath.create = function (value0) {
          return new UnexpectedPath(value0);
      };
      return UnexpectedPath;
  })();
  var ExpectedBoolean = (function () {
      function ExpectedBoolean() {

      };
      ExpectedBoolean.value = new ExpectedBoolean();
      return ExpectedBoolean;
  })();
  var ExpectedEnd = (function () {
      function ExpectedEnd() {

      };
      ExpectedEnd.value = new ExpectedEnd();
      return ExpectedEnd;
  })();
  var ExpectedNumber = (function () {
      function ExpectedNumber() {

      };
      ExpectedNumber.value = new ExpectedNumber();
      return ExpectedNumber;
  })();
  var ExpectedInt = (function () {
      function ExpectedInt() {

      };
      ExpectedInt.value = new ExpectedInt();
      return ExpectedInt;
  })();
  var ExpectedString = (function () {
      function ExpectedString() {

      };
      ExpectedString.value = new ExpectedString();
      return ExpectedString;
  })();
  var ExpectedQuery = (function () {
      function ExpectedQuery() {

      };
      ExpectedQuery.value = new ExpectedQuery();
      return ExpectedQuery;
  })();
  var ExpectedPathPart = (function () {
      function ExpectedPathPart() {

      };
      ExpectedPathPart.value = new ExpectedPathPart();
      return ExpectedPathPart;
  })();
  var KeyNotFound = (function () {
      function KeyNotFound(value0) {
          this.value0 = value0;
      };
      KeyNotFound.create = function (value0) {
          return new KeyNotFound(value0);
      };
      return KeyNotFound;
  })();
  var Fail = (function () {
      function Fail(value0) {
          this.value0 = value0;
      };
      Fail.create = function (value0) {
          return new Fail(value0);
      };
      return Fail;
  })();
  var showMatchError = function (err) {
      if (err instanceof UnexpectedPath) {
          return "expected path part: " + err.value0;
      };
      if (err instanceof KeyNotFound) {
          return "key: " + (err.value0 + " has not found in query part");
      };
      if (err instanceof ExpectedQuery) {
          return "expected query - found path";
      };
      if (err instanceof ExpectedNumber) {
          return "expected number";
      };
      if (err instanceof ExpectedInt) {
          return "expected int";
      };
      if (err instanceof ExpectedBoolean) {
          return "expected boolean";
      };
      if (err instanceof ExpectedEnd) {
          return "expected end";
      };
      if (err instanceof ExpectedString) {
          return "expected string var";
      };
      if (err instanceof ExpectedPathPart) {
          return "expected path part, found query";
      };
      if (err instanceof Fail) {
          return "match error: " + err.value0;
      };
      throw new Error("Failed pattern match at Routing.Match.Error (line 29, column 3 - line 39, column 39): " + [ err.constructor.name ]);
  };
  exports["UnexpectedPath"] = UnexpectedPath;
  exports["ExpectedEnd"] = ExpectedEnd;
  exports["ExpectedQuery"] = ExpectedQuery;
  exports["ExpectedPathPart"] = ExpectedPathPart;
  exports["KeyNotFound"] = KeyNotFound;
  exports["showMatchError"] = showMatchError;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.Types"] = $PS["Routing.Types"] || {};
  var exports = $PS["Routing.Types"];                      
  var Path = (function () {
      function Path(value0) {
          this.value0 = value0;
      };
      Path.create = function (value0) {
          return new Path(value0);
      };
      return Path;
  })();
  var Query = (function () {
      function Query(value0) {
          this.value0 = value0;
      };
      Query.create = function (value0) {
          return new Query(value0);
      };
      return Query;
  })();
  exports["Path"] = Path;
  exports["Query"] = Query;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.Match"] = $PS["Routing.Match"] || {};
  var exports = $PS["Routing.Match"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Semiring_Free = $PS["Data.Semiring.Free"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Validation_Semiring = $PS["Data.Validation.Semiring"];
  var Routing_Match_Error = $PS["Routing.Match.Error"];
  var Routing_Types = $PS["Routing.Types"];                
  var Match = function (x) {
      return x;
  };
  var runMatch = function (v) {
      return function (route) {
          var foldErrors = function (errs) {
              return Data_Either.Left.create(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
                  return function (a) {
                      return a + ("\x0a" + b);
                  };
              })("")(Control_Bind.bind(Data_List_Types.bindList)(Data_Functor.map(Data_List_Types.functorList)(Data_List.reverse)(Data_Newtype.unwrap(Data_Semiring_Free.newtypeFree)(errs)))(function (es) {
                  return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
                      return function (a) {
                          return a + (";" + b);
                      };
                  })("")(Data_Functor.map(Data_List_Types.functorList)(Routing_Match_Error.showMatchError)(es)));
              })));
          };
          return Data_Validation_Semiring.unV(foldErrors)(function ($88) {
              return Data_Either.Right.create(Data_Tuple.snd($88));
          })(v(route));
      };
  };
  var params = function (route) {
      if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Query) {
          return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, route.value0.value0));
      };
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedQuery.value));
  };
  var param = function (key) {
      return function (route) {
          if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Query) {
              var v = Data_Map_Internal.lookup(Data_Ord.ordString)(key)(route.value0.value0);
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.KeyNotFound(key)));
              };
              if (v instanceof Data_Maybe.Just) {
                  return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(new Data_List_Types.Cons(Routing_Types.Query.create(Data_Map_Internal["delete"](Data_Ord.ordString)(key)(route.value0.value0)), route.value1), v.value0));
              };
              throw new Error("Failed pattern match at Routing.Match (line 121, column 7 - line 125, column 67): " + [ v.constructor.name ]);
          };
          return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedQuery.value));
      };
  };        
  var matchFunctor = new Data_Functor.Functor(function (fn) {
      return function (v) {
          return Match(function (r) {
              return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v1) {
                  return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v1.value0, fn(v1.value1)));
              })(v(r));
          });
      };
  });
  var matchApply = new Control_Apply.Apply(function () {
      return matchFunctor;
  }, function (v) {
      return function (v1) {
          var processFnRes = function (v2) {
              return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v3) {
                  return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v3.value0, v2.value1(v3.value1)));
              })(v1(v2.value0));
          };
          var processFnErr = function (r) {
              return function (err) {
                  return Data_Validation_Semiring.invalid(Data_Semiring.mul(Data_Semiring_Free.semiringFree)(err)(Data_Validation_Semiring.unV(Control_Category.identity(Control_Category.categoryFn))(Data_Function["const"](Data_Semiring.one(Data_Semiring_Free.semiringFree)))(v1(r))));
              };
          };
          return Match(function (r) {
              return Data_Validation_Semiring.unV(processFnErr(r))(processFnRes)(v(r));
          });
      };
  });
  var matchAlt = new Control_Alt.Alt(function () {
      return matchFunctor;
  }, function (v) {
      return function (v1) {
          return Match(function (r) {
              return Control_Alt.alt(Data_Validation_Semiring.altV(Data_Semiring_Free.semiringFree))(v(r))(v1(r));
          });
      };
  });
  var matchPlus = new Control_Plus.Plus(function () {
      return matchAlt;
  }, Match(Data_Function["const"](Data_Validation_Semiring.invalid(Data_Semiring.one(Data_Semiring_Free.semiringFree)))));
  var lit = function (input) {
      return function (route) {
          if (route instanceof Data_List_Types.Cons && (route.value0 instanceof Routing_Types.Path && route.value0.value0 === input)) {
              return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, Data_Unit.unit));
          };
          if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
              return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.UnexpectedPath(input)));
          };
          return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedPathPart.value));
      };
  };
  var root = lit("");
  var end = function (route) {
      if (route instanceof Data_List_Types.Nil) {
          return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_Unit.unit));
      };
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedEnd.value));
  };
  exports["root"] = root;
  exports["lit"] = lit;
  exports["param"] = param;
  exports["params"] = params;
  exports["end"] = end;
  exports["runMatch"] = runMatch;
  exports["matchFunctor"] = matchFunctor;
  exports["matchPlus"] = matchPlus;
  exports["matchApply"] = matchApply;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Route"] = $PS["Route"] || {};
  var exports = $PS["Route"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Routing_Match = $PS["Routing.Match"];                    
  var Home = (function () {
      function Home() {

      };
      Home.value = new Home();
      return Home;
  })();
  var Plotdata = (function () {
      function Plotdata(value0) {
          this.value0 = value0;
      };
      Plotdata.create = function (value0) {
          return new Plotdata(value0);
      };
      return Plotdata;
  })();
  var Infrared = (function () {
      function Infrared(value0) {
          this.value0 = value0;
      };
      Infrared.create = function (value0) {
          return new Infrared(value0);
      };
      return Infrared;
  })();
  var Settings = (function () {
      function Settings() {

      };
      Settings.value = new Settings();
      return Settings;
  })();
  var About = (function () {
      function About() {

      };
      About.value = new About();
      return About;
  })();
  var routing = (function () {
      var toPlotdataParams = function (str) {
          return new Data_Maybe.Just({
              limits: Data_Int.fromString(str)
          });
      };
      var toIrParams = function (kvsets) {
          return new Data_Maybe.Just({
              tab: Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Int.fromString)(Data_Map_Internal.lookup(Data_Ord.ordString)("tab")(kvsets)),
              bitorder: Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Int.fromString)(Data_Map_Internal.lookup(Data_Ord.ordString)("bitorder")(kvsets)),
              manuf: Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Int.fromString)(Data_Map_Internal.lookup(Data_Ord.ordString)("manuf")(kvsets)),
              limits: Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Int.fromString)(Data_Map_Internal.lookup(Data_Ord.ordString)("limits")(kvsets)),
              page: Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Int.fromString)(Data_Map_Internal.lookup(Data_Ord.ordString)("page")(kvsets))
          });
      };
      return Data_Foldable.oneOf(Data_Foldable.foldableArray)(Routing_Match.matchPlus)([ Data_Functor.voidRight(Routing_Match.matchFunctor)(Home.value)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.root)(Routing_Match.end)), Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.voidRight(Routing_Match.matchFunctor)(function ($54) {
          return Plotdata.create(toPlotdataParams($54));
      })(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.root)(Routing_Match.lit("plotdata"))))(Routing_Match.param("limits")), Data_Functor.voidRight(Routing_Match.matchFunctor)(new Plotdata(Data_Maybe.Nothing.value))(Control_Apply.applySecond(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.root)(Routing_Match.lit("plotdata")))(Routing_Match.end)), Control_Apply.apply(Routing_Match.matchApply)(Data_Functor.voidRight(Routing_Match.matchFunctor)(function ($55) {
          return Infrared.create(toIrParams($55));
      })(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.root)(Routing_Match.lit("infra-red"))))(Routing_Match.params), Data_Functor.voidRight(Routing_Match.matchFunctor)(new Infrared(Data_Maybe.Nothing.value))(Control_Apply.applySecond(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.root)(Routing_Match.lit("infra-red")))(Routing_Match.end)), Data_Functor.voidRight(Routing_Match.matchFunctor)(Settings.value)(Control_Apply.applySecond(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.root)(Routing_Match.lit("settings")))(Routing_Match.end)), Data_Functor.voidRight(Routing_Match.matchFunctor)(About.value)(Control_Apply.applySecond(Routing_Match.matchApply)(Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.root)(Routing_Match.lit("about")))(Routing_Match.end)) ]);
  })();
  var routeToString = function (v) {
      if (v instanceof Home) {
          return "Home";
      };
      if (v instanceof Plotdata) {
          return "Plotdata";
      };
      if (v instanceof Infrared) {
          return "Infra-red";
      };
      if (v instanceof Settings) {
          return "Settings";
      };
      if (v instanceof About) {
          return "About";
      };
      throw new Error("Failed pattern match at Route (line 103, column 17 - line 108, column 19): " + [ v.constructor.name ]);
  };
  var routeToPathQuery = function (route) {
      return "/" + (function () {
          if (route instanceof Home) {
              return "";
          };
          if (route instanceof Plotdata && route.value0 instanceof Data_Maybe.Nothing) {
              return "plotdata";
          };
          if (route instanceof Plotdata && route.value0 instanceof Data_Maybe.Just) {
              return "plotdata" + (function (v) {
                  if (v === "") {
                      return "";
                  };
                  return "?" + v;
              })(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("&")(Data_Array.catMaybes([ Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $56 = Data_Int.toStringAs(Data_Int.decimal);
                  return function ($57) {
                      return (function (v) {
                          return "limits=" + v;
                      })($56($57));
                  };
              })())(route.value0.value0.limits) ])));
          };
          if (route instanceof Infrared && route.value0 instanceof Data_Maybe.Nothing) {
              return "infra-red";
          };
          if (route instanceof Infrared && route.value0 instanceof Data_Maybe.Just) {
              return "infra-red" + (function (v) {
                  if (v === "") {
                      return "";
                  };
                  return "?" + v;
              })(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("&")(Data_Array.catMaybes([ Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $58 = Data_Int.toStringAs(Data_Int.decimal);
                  return function ($59) {
                      return (function (v) {
                          return "tab=" + v;
                      })($58($59));
                  };
              })())(route.value0.value0.tab), Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $60 = Data_Int.toStringAs(Data_Int.decimal);
                  return function ($61) {
                      return (function (v) {
                          return "bitorder=" + v;
                      })($60($61));
                  };
              })())(route.value0.value0.bitorder), Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $62 = Data_Int.toStringAs(Data_Int.decimal);
                  return function ($63) {
                      return (function (v) {
                          return "manuf=" + v;
                      })($62($63));
                  };
              })())(route.value0.value0.manuf), Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $64 = Data_Int.toStringAs(Data_Int.decimal);
                  return function ($65) {
                      return (function (v) {
                          return "limits=" + v;
                      })($64($65));
                  };
              })())(route.value0.value0.limits), Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $66 = Data_Int.toStringAs(Data_Int.decimal);
                  return function ($67) {
                      return (function (v) {
                          return "page=" + v;
                      })($66($67));
                  };
              })())(route.value0.value0.page) ])));
          };
          if (route instanceof Settings) {
              return "settings";
          };
          if (route instanceof About) {
              return "about";
          };
          throw new Error("Failed pattern match at Route (line 113, column 10 - line 142, column 21): " + [ route.constructor.name ]);
      })();
  };        
  var eqRoute = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Home && y instanceof Home) {
              return true;
          };
          if (x instanceof Plotdata && y instanceof Plotdata) {
              return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "limits";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqInt)))))(x.value0)(y.value0);
          };
          if (x instanceof Infrared && y instanceof Infrared) {
              return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "tab";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqInt)))()(new Data_Symbol.IsSymbol(function () {
                  return "page";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqInt)))()(new Data_Symbol.IsSymbol(function () {
                  return "manuf";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqInt)))()(new Data_Symbol.IsSymbol(function () {
                  return "limits";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqInt)))()(new Data_Symbol.IsSymbol(function () {
                  return "bitorder";
              }))(Data_Maybe.eqMaybe(Data_Eq.eqInt)))))(x.value0)(y.value0);
          };
          if (x instanceof Settings && y instanceof Settings) {
              return true;
          };
          if (x instanceof About && y instanceof About) {
              return true;
          };
          return false;
      };
  });
  exports["Home"] = Home;
  exports["Plotdata"] = Plotdata;
  exports["Infrared"] = Infrared;
  exports["Settings"] = Settings;
  exports["About"] = About;
  exports["routeToPathQuery"] = routeToPathQuery;
  exports["routeToString"] = routeToString;
  exports["routing"] = routing;
  exports["eqRoute"] = eqRoute;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["AppM"] = $PS["AppM"] || {};
  var exports = $PS["AppM"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Route = $PS["Route"];
  var Navigate = function (Monad0, navigate) {
      this.Monad0 = Monad0;
      this.navigate = navigate;
  };
  var HasApiAccessible = function (Monad0, getApiBaseURL, getApiTimeout) {
      this.Monad0 = Monad0;
      this.getApiBaseURL = getApiBaseURL;
      this.getApiTimeout = getApiTimeout;
  };
  var runAppM = function (v) {
      return function (env) {
          return Control_Monad_Reader_Trans.runReaderT(v)(env);
      };
  };
  var navigate = function (dict) {
      return dict.navigate;
  };
  var navigateHalogenM = function (dictNavigate) {
      return new Navigate(function () {
          return Halogen_Query_HalogenM.monadHalogenM;
      }, (function () {
          var $6 = Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictNavigate.Monad0());
          var $7 = navigate(dictNavigate);
          return function ($8) {
              return $6($7($8));
          };
      })());
  };
  var monadEffectAppM = Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff);
  var monadAppM = Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff);
  var monadAffAppM = Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff);
  var getApiTimeout = function (dict) {
      return dict.getApiTimeout;
  };
  var getApiBaseURL = function (dict) {
      return dict.getApiBaseURL;
  };
  var hasApiAccessibleHalogenM = function (dictHasApiAccessible) {
      return new HasApiAccessible(function () {
          return Halogen_Query_HalogenM.monadHalogenM;
      }, Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictHasApiAccessible.Monad0())(getApiBaseURL(dictHasApiAccessible)), Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictHasApiAccessible.Monad0())(getApiTimeout(dictHasApiAccessible)));
  };
  var functorAppM = Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff);
  var hasApiAccessibleAppM = new HasApiAccessible(function () {
      return monadAppM;
  }, Data_Functor.mapFlipped(functorAppM)(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff)))(function (env) {
      return env.apiBaseURL;
  }), Data_Functor.mapFlipped(functorAppM)(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff)))(function (env) {
      return env.apiTimeout;
  }));
  var bindAppM = Control_Monad_Reader_Trans.bindReaderT(Effect_Aff.bindAff);   
  var applicativeAppM = Control_Monad_Reader_Trans.applicativeReaderT(Effect_Aff.applicativeAff);
  var navigateAppM = new Navigate(function () {
      return monadAppM;
  }, function (newRoute) {
      return Control_Bind.bind(bindAppM)(Data_Functor.mapFlipped(functorAppM)(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff)))(function (env) {
          return env.psInterface;
      }))(function (psInterface) {
          return Control_Bind.bind(bindAppM)(Effect_Class.liftEffect(monadEffectAppM)(psInterface.locationState))(function (locState) {
              var nextPathQuery = Route.routeToPathQuery(newRoute);
              var currentPathQuery = locState.path + locState.search;
              return Control_Applicative.when(applicativeAppM)(nextPathQuery !== currentPathQuery)(Effect_Class.liftEffect(monadEffectAppM)(psInterface.pushState(locState.state)(nextPathQuery)));
          });
      });
  });
  exports["getApiBaseURL"] = getApiBaseURL;
  exports["getApiTimeout"] = getApiTimeout;
  exports["navigate"] = navigate;
  exports["runAppM"] = runAppM;
  exports["monadAffAppM"] = monadAffAppM;
  exports["navigateAppM"] = navigateAppM;
  exports["navigateHalogenM"] = navigateHalogenM;
  exports["hasApiAccessibleAppM"] = hasApiAccessibleAppM;
  exports["hasApiAccessibleHalogenM"] = hasApiAccessibleHalogenM;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["CSS.String"] = $PS["CSS.String"] || {};
  var exports = $PS["CSS.String"];                               
  var IsString = function (fromString) {
      this.fromString = fromString;
  };                                                                                        
  var fromString = function (dict) {
      return dict.fromString;
  };
  exports["fromString"] = fromString;
  exports["IsString"] = IsString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Profunctor.Strong"] = $PS["Data.Profunctor.Strong"] || {};
  var exports = $PS["Data.Profunctor.Strong"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (v) {
          return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
      };
  }, Data_Functor.map(Data_Tuple.functorTuple));
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["second"] = second;
  exports["Strong"] = Strong;
  exports["strongFn"] = strongFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["CSS.Property"] = $PS["CSS.Property"] || {};
  var exports = $PS["CSS.Property"];
  var CSS_String = $PS["CSS.String"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];                  
  var Prefixed = (function () {
      function Prefixed(value0) {
          this.value0 = value0;
      };
      Prefixed.create = function (value0) {
          return new Prefixed(value0);
      };
      return Prefixed;
  })();
  var Plain = (function () {
      function Plain(value0) {
          this.value0 = value0;
      };
      Plain.create = function (value0) {
          return new Plain(value0);
      };
      return Plain;
  })();
  var Value = function (x) {
      return x;
  };
  var Key = function (x) {
      return x;
  };
  var Val = function (value) {
      this.value = value;
  };
  var value = function (dict) {
      return dict.value;
  };                                                                             
  var semigroupPrefixed = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Plain && v1 instanceof Plain) {
              return Plain.create(v.value0 + v1.value0);
          };
          if (v instanceof Plain && v1 instanceof Prefixed) {
              return Prefixed.create(Data_Functor.map(Data_Functor.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(function (v2) {
                  return v.value0 + v2;
              }))(v1.value0));
          };
          if (v instanceof Prefixed && v1 instanceof Plain) {
              return Prefixed.create(Data_Functor.map(Data_Functor.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(function (v2) {
                  return v1.value0 + v2;
              }))(v.value0));
          };
          if (v instanceof Prefixed && v1 instanceof Prefixed) {
              return Prefixed.create(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value0)(v1.value0));
          };
          throw new Error("Failed pattern match at CSS.Property (line 25, column 1 - line 29, column 59): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var semigroupValue = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return Value(Data_Semigroup.append(semigroupPrefixed)(v)(v1));
      };
  });                                    
  var isStringPrefixed = new CSS_String.IsString(Plain.create);
  var isStringValue = new CSS_String.IsString((function () {
      var $123 = CSS_String.fromString(isStringPrefixed);
      return function ($124) {
          return Value($123($124));
      };
  })());
  var valNumber = new Val((function () {
      var $134 = CSS_String.fromString(isStringValue);
      var $135 = Data_Show.show(Data_Show.showNumber);
      return function ($136) {
          return $134($135($136));
      };
  })());                                                        
  var valTuple = function (dictVal) {
      return function (dictVal1) {
          return new Val(function (v) {
              return Data_Semigroup.append(semigroupValue)(value(dictVal)(v.value0))(Data_Semigroup.append(semigroupValue)(CSS_String.fromString(isStringValue)(" "))(value(dictVal1)(v.value1)));
          });
      };
  };
  var valUnit = new Val(function (u) {
      return CSS_String.fromString(isStringValue)("");
  });
  var isStringKey = new CSS_String.IsString((function () {
      var $137 = CSS_String.fromString(isStringPrefixed);
      return function ($138) {
          return Key($137($138));
      };
  })());
  var cast = function (v) {
      return v;
  };
  exports["value"] = value;
  exports["Prefixed"] = Prefixed;
  exports["Plain"] = Plain;
  exports["cast"] = cast;
  exports["Val"] = Val;
  exports["isStringKey"] = isStringKey;
  exports["isStringValue"] = isStringValue;
  exports["semigroupValue"] = semigroupValue;
  exports["valUnit"] = valUnit;
  exports["valTuple"] = valTuple;
  exports["valNumber"] = valNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["CSS.Size"] = $PS["CSS.Size"] || {};
  var exports = $PS["CSS.Size"];
  var CSS_Property = $PS["CSS.Property"];
  var CSS_String = $PS["CSS.String"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var vh = function (i) {
      return Data_Semigroup.append(CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("vh"));
  };
  var valSize = new CSS_Property.Val(function (v) {
      return v;
  });
  var rem = function (i) {
      return Data_Semigroup.append(CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("rem"));
  };
  var px = function (i) {
      return Data_Semigroup.append(CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("px"));
  };
  var em = function (i) {
      return Data_Semigroup.append(CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("em"));
  };
  exports["px"] = px;
  exports["em"] = em;
  exports["rem"] = rem;
  exports["vh"] = vh;
  exports["valSize"] = valSize;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Writer.Class"] = $PS["Control.Monad.Writer.Class"] || {};
  var exports = $PS["Control.Monad.Writer.Class"];   
  var MonadTell = function (Monad0, tell) {
      this.Monad0 = Monad0;
      this.tell = tell;
  };
  var tell = function (dict) {
      return dict.tell;
  };
  exports["tell"] = tell;
  exports["MonadTell"] = MonadTell;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Writer.Trans"] = $PS["Control.Monad.Writer.Trans"] || {};
  var exports = $PS["Control.Monad.Writer.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Writer_Class = $PS["Control.Monad.Writer.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                      
  var WriterT = function (x) {
      return x;
  };
  var runWriterT = function (v) {
      return v;
  };
  var mapWriterT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorWriterT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
              return new Data_Tuple.Tuple(f(v.value0), v.value1);
          }));
      });
  };
  var applyWriterT = function (dictSemigroup) {
      return function (dictApply) {
          return new Control_Apply.Apply(function () {
              return functorWriterT(dictApply.Functor0());
          }, function (v) {
              return function (v1) {
                  var k = function (v3) {
                      return function (v4) {
                          return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                      };
                  };
                  return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
              };
          });
      };
  };
  var bindWriterT = function (dictSemigroup) {
      return function (dictBind) {
          return new Control_Bind.Bind(function () {
              return applyWriterT(dictSemigroup)(dictBind.Apply0());
          }, function (v) {
              return function (k) {
                  return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
                      var v2 = k(v1.value0);
                      return Data_Functor.map((dictBind.Apply0()).Functor0())(function (v3) {
                          return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
                      })(v2);
                  }));
              };
          });
      };
  };
  var applicativeWriterT = function (dictMonoid) {
      return function (dictApplicative) {
          return new Control_Applicative.Applicative(function () {
              return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
          }, function (a) {
              return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
          });
      };
  };
  var monadWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
          }, function () {
              return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
          });
      };
  };
  var monadTellWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Monad_Writer_Class.MonadTell(function () {
              return monadWriterT(dictMonoid)(dictMonad);
          }, (function () {
              var $124 = Control_Applicative.pure(dictMonad.Applicative0());
              var $125 = Data_Tuple.Tuple.create(Data_Unit.unit);
              return function ($126) {
                  return WriterT($124($125($126)));
              };
          })());
      };
  };
  exports["runWriterT"] = runWriterT;
  exports["functorWriterT"] = functorWriterT;
  exports["applyWriterT"] = applyWriterT;
  exports["bindWriterT"] = bindWriterT;
  exports["monadTellWriterT"] = monadTellWriterT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Writer"] = $PS["Control.Monad.Writer"] || {};
  var exports = $PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Trans = $PS["Control.Monad.Writer.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var runWriter = (function () {
      var $2 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($3) {
          return $2(Control_Monad_Writer_Trans.runWriterT($3));
      };
  })();
  var execWriter = function (m) {
      return Data_Tuple.snd(runWriter(m));
  };
  exports["execWriter"] = execWriter;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["CSS.Stylesheet"] = $PS["CSS.Stylesheet"] || {};
  var exports = $PS["CSS.Stylesheet"];
  var CSS_Property = $PS["CSS.Property"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Writer = $PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Class = $PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = $PS["Control.Monad.Writer.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var S = function (x) {
      return x;
  };
  var runS = function (v) {
      return Control_Monad_Writer.execWriter(v);
  };
  var rule = (function () {
      var $403 = Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadTellWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity));
      return function ($404) {
          return S($403(Data_Array.singleton($404)));
      };
  })();
  var key = function (dictVal) {
      return function (k) {
          return function (v) {
              return rule(new Property(CSS_Property.cast(k), CSS_Property.value(dictVal)(v)));
          };
      };
  }; 
  var functorStyleM = new Data_Functor.Functor(function (f) {
      return function (v) {
          return S(Data_Functor.map(Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(v));
      };
  });
  var applyStyleM = new Control_Apply.Apply(function () {
      return functorStyleM;
  }, function (v) {
      return function (v1) {
          return S(Control_Apply.apply(Control_Monad_Writer_Trans.applyWriterT(Data_Semigroup.semigroupArray)(Data_Identity.applyIdentity))(v)(v1));
      };
  });
  var bindStyleM = new Control_Bind.Bind(function () {
      return applyStyleM;
  }, function (v) {
      return function (f) {
          return S(Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(v)(function ($409) {
              return (function (v1) {
                  return v1;
              })(f($409));
          }));
      };
  });
  exports["Property"] = Property;
  exports["runS"] = runS;
  exports["key"] = key;
  exports["bindStyleM"] = bindStyleM;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Tuple.Nested"] = $PS["Data.Tuple.Nested"] || {};
  var exports = $PS["Data.Tuple.Nested"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var tuple4 = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, Data_Unit.unit))));
              };
          };
      };
  };
  exports["tuple4"] = tuple4;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["CSS.Geometry"] = $PS["CSS.Geometry"] || {};
  var exports = $PS["CSS.Geometry"];
  var CSS_Property = $PS["CSS.Property"];
  var CSS_Size = $PS["CSS.Size"];
  var CSS_String = $PS["CSS.String"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Data_Tuple_Nested = $PS["Data.Tuple.Nested"];                
  var width = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("width"));                 
  var padding = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return CSS_Stylesheet.key(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valUnit)))))(CSS_String.fromString(CSS_Property.isStringKey)("padding"))(Data_Tuple_Nested.tuple4(a)(b)(c)(d));
              };
          };
      };
  };                                                                                                                
  var minHeight = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("min-height"));
  var marginTop = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("margin-top"));    
  var marginLeft = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("margin-left"));
  var marginBottom = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("margin-bottom"));
  var margin = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return CSS_Stylesheet.key(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Property.valUnit)))))(CSS_String.fromString(CSS_Property.isStringKey)("margin"))(Data_Tuple_Nested.tuple4(a)(b)(c)(d));
              };
          };
      };
  };                                                                                                       
  var height = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("height"));
  exports["width"] = width;
  exports["height"] = height;
  exports["minHeight"] = minHeight;
  exports["padding"] = padding;
  exports["margin"] = margin;
  exports["marginTop"] = marginTop;
  exports["marginBottom"] = marginBottom;
  exports["marginLeft"] = marginLeft;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["CSS.Render"] = $PS["CSS.Render"] || {};
  var exports = $PS["CSS.Render"];
  var CSS_Property = $PS["CSS.Property"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var collect$prime = function (v) {
      return function (v1) {
          if (v instanceof CSS_Property.Plain && v1 instanceof CSS_Property.Plain) {
              return [ new Data_Either.Right(new Data_Tuple.Tuple(v.value0, v1.value0)) ];
          };
          if (v instanceof CSS_Property.Prefixed && v1 instanceof CSS_Property.Plain) {
              return Data_Functor.map(Data_Functor.functorArray)(function (v3) {
                  return Data_Either.Right.create(new Data_Tuple.Tuple(v3.value0 + v3.value1, v1.value0));
              })(v.value0);
          };
          if (v instanceof CSS_Property.Plain && v1 instanceof CSS_Property.Prefixed) {
              return Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                  return Data_Either.Right.create(new Data_Tuple.Tuple(v.value0, v2.value0 + v2.value1));
              })(v1.value0);
          };
          if (v instanceof CSS_Property.Prefixed && v1 instanceof CSS_Property.Prefixed) {
              return Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                  return Data_Maybe.maybe(new Data_Either.Left(v2.value0 + v2.value1))((function () {
                      var $182 = Data_Tuple.Tuple.create(v2.value0 + v2.value1);
                      return function ($183) {
                          return Data_Either.Right.create($182((function (v3) {
                              return v2.value0 + v3;
                          })($183)));
                      };
                  })())(Data_Tuple.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)(v2.value0)(v1.value0));
              })(v.value0);
          };
          throw new Error("Failed pattern match at CSS.Render (line 158, column 1 - line 158, column 80): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var collect = function (v) {
      return collect$prime(v.value0)(v.value1);
  };
  exports["collect"] = collect;
})(PS);
(function(exports) {
  "use strict";
  var Chart =require("chart.js"); 

  exports.destroyLineChartJs = function (chartJsInstance) {
    return function () {
      chartJsInstance.destroy();
    };
  };

  exports.lineChartJs = function (context) {
    return function (datasets) {
      return function (options) {
        return function () {
          return new Chart(context, {
            type: 'line',
            data: datasets,
            options: options
          });
        };
      };
    };
  };
})(PS["Foreign.ChartJs"] = PS["Foreign.ChartJs"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.ChartJs"] = $PS["Foreign.ChartJs"] || {};
  var exports = $PS["Foreign.ChartJs"];
  var $foreign = $PS["Foreign.ChartJs"]; 
  var drawLineChart = $foreign.lineChartJs;
  var destroyLineChart = $foreign.destroyLineChartJs;
  var defLineChartOptionAxes = {
      display: true,
      autoSkip: false,
      beginAtZero: false,
      maxTicksLimit: 1
  };
  var defLineChartOptions = {
      xAxisID: "x",
      yAxisID: "y",
      responsive: true,
      maintainAspectRatio: true,
      scales: {
          xAxes: [ defLineChartOptionAxes ],
          yAxes: [ defLineChartOptionAxes ]
      }
  };
  exports["defLineChartOptions"] = defLineChartOptions;
  exports["destroyLineChart"] = destroyLineChart;
  exports["drawLineChart"] = drawLineChart;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Coyoneda"] = $PS["Data.Coyoneda"] || {};
  var exports = $PS["Data.Coyoneda"];
  var Control_Category = $PS["Control.Category"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];                        
  var CoyonedaF = (function () {
      function CoyonedaF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoyonedaF.create = function (value0) {
          return function (value1) {
              return new CoyonedaF(value0, value1);
          };
      };
      return CoyonedaF;
  })();
  var Coyoneda = function (x) {
      return x;
  };
  var unCoyoneda = function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return f(v1.value0)(v1.value1);
          })(v);
      };
  };
  var coyoneda = function (k) {
      return function (fi) {
          return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
      };
  };
  var functorCoyoneda = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return coyoneda(function ($85) {
                  return f(v1.value0($85));
              })(v1.value1);
          })(v);
      };
  });
  var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));
  exports["unCoyoneda"] = unCoyoneda;
  exports["liftCoyoneda"] = liftCoyoneda;
  exports["functorCoyoneda"] = functorCoyoneda;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Data.OrdBox"] = $PS["Halogen.Data.OrdBox"] || {};
  var exports = $PS["Halogen.Data.OrdBox"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];                
  var OrdBox = (function () {
      function OrdBox(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OrdBox.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OrdBox(value0, value1, value2);
              };
          };
      };
      return OrdBox;
  })();
  var mkOrdBox = function (dictOrd) {
      return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
  };
  var eqOrdBox = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.value0(v.value2)(v1.value2);
      };
  });
  var ordOrdBox = new Data_Ord.Ord(function () {
      return eqOrdBox;
  }, function (v) {
      return function (v1) {
          return v.value1(v.value2)(v1.value2);
      };
  });
  exports["mkOrdBox"] = mkOrdBox;
  exports["ordOrdBox"] = ordOrdBox;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Data.Slot"] = $PS["Halogen.Data.Slot"] || {};
  var exports = $PS["Halogen.Data.Slot"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_Data_OrdBox = $PS["Halogen.Data.OrdBox"];
  var pop = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.pop(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var lookup = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.lookup(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (val) {
                          return function (v) {
                              return Data_Map_Internal.insert(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(val)(v);
                          };
                      };
                  };
              };
          };
      };
  };
  var foreachSlot = function (dictApplicative) {
      return function (v) {
          return function (k) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap)(function ($37) {
                  return k($37);
              })(v);
          };
      };
  };
  var empty = Data_Map_Internal.empty;
  exports["empty"] = empty;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["pop"] = pop;
  exports["foreachSlot"] = foreachSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.HalogenQ"] = $PS["Halogen.Query.HalogenQ"] || {};
  var exports = $PS["Halogen.Query.HalogenQ"];           
  var Initialize = (function () {
      function Initialize(value0) {
          this.value0 = value0;
      };
      Initialize.create = function (value0) {
          return new Initialize(value0);
      };
      return Initialize;
  })();
  var Finalize = (function () {
      function Finalize(value0) {
          this.value0 = value0;
      };
      Finalize.create = function (value0) {
          return new Finalize(value0);
      };
      return Finalize;
  })();
  var Receive = (function () {
      function Receive(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Receive.create = function (value0) {
          return function (value1) {
              return new Receive(value0, value1);
          };
      };
      return Receive;
  })();
  var Action = (function () {
      function Action(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Action.create = function (value0) {
          return function (value1) {
              return new Action(value0, value1);
          };
      };
      return Action;
  })();
  var Query = (function () {
      function Query(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Query.create = function (value0) {
          return function (value1) {
              return new Query(value0, value1);
          };
      };
      return Query;
  })();
  exports["Initialize"] = Initialize;
  exports["Finalize"] = Finalize;
  exports["Receive"] = Receive;
  exports["Action"] = Action;
  exports["Query"] = Query;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Machine"] = $PS["Halogen.VDom.Machine"] || {};
  var exports = $PS["Halogen.VDom.Machine"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var Step = (function () {
      function Step(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Step(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Step;
  })();
  var unStep = Unsafe_Coerce.unsafeCoerce;
  var step = function (v, a) {
      return v.value2(v.value1, a);
  };
  var mkStep = Unsafe_Coerce.unsafeCoerce;
  var halt = function (v) {
      return v.value3(v.value1);
  };
  var extract = unStep(function (v) {
      return v.value0;
  });
  exports["Step"] = Step;
  exports["mkStep"] = mkStep;
  exports["unStep"] = unStep;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Types"] = $PS["Halogen.VDom.Types"] || {};
  var exports = $PS["Halogen.VDom.Types"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Elem(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Keyed(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($58) {
          return f($58);
      };
  };           
  var graft = Unsafe_Coerce.unsafeCoerce;
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return unGraft(function (v) {
              return graft(new Graft(function ($60) {
                  return f(v.value0($60));
              }, function ($61) {
                  return g(v.value1($61));
              }, v.value2));
          });
      };
  });
  var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              if (v instanceof Text) {
                  return new Text(v.value0);
              };
              if (v instanceof Grafted) {
                  return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
              };
              return new Grafted(graft(new Graft(f, g, v)));
          };
      };
  });
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["runGraft"] = runGraft;
  exports["bifunctorVDom"] = bifunctorVDom;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
      obj[key] = val;
  };

  exports.forE = function (a, f) {
    var b = [];
    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i]));
    }
    return b;
  };

  exports.forEachE = function (a, f) {
    for (var i = 0; i < a.length; i++) {
      f(a[i]);
    }
  };

  exports.forInE = function (o, f) {
    var ks = Object.keys(o);
    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k]);
    }
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i  = 0;
    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i]));
        } else {
          f2(i, a1[i]);
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i]));
      } else {
        break;
      }
      i++;
    }
    return a3;
  };

  exports.strMapWithIxE = function (as, fk, f) {
    var o = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a);
    }
    return o;
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return doc.createTextNode(s);
  };

  exports.setTextContent = function (s, n) {
    n.textContent = s;
  };

  exports.createElement = function (ns, name, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name);
    } else {
      return doc.createElement(name)
    }
  };

  exports.insertChildIx = function (i, a, b) {
    var n = b.childNodes.item(i) || null;
    if (n !== a) {
      b.insertBefore(a, n);
    }
  };

  exports.removeChild = function (a, b) {
    if (b && a.parentNode === b) {
      b.removeChild(a);
    }
  };

  exports.parentNode = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };

  exports.removeAttribute = function (ns, attr, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };

  exports.addEventListener = function (ev, listener, el) {
    el.addEventListener(ev, listener, false);
  };

  exports.removeEventListener = function (ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Util"] = $PS["Halogen.VDom.Util"] || {};
  var exports = $PS["Halogen.VDom.Util"];
  var $foreign = $PS["Halogen.VDom.Util"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Foreign_Object_ST["new"];
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["forE"] = $foreign.forE;
  exports["forEachE"] = $foreign.forEachE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["parentNode"] = $foreign.parentNode;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["jsUndefined"] = $foreign.jsUndefined;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.DOM"] = $PS["Halogen.VDom.DOM"] || {};
  var exports = $PS["Halogen.VDom.DOM"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var haltWidget = function (v) {
      return Halogen_VDom_Machine.halt(v.widget);
  };
  var patchWidget = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Widget) {
          var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);
          var res$prime = Halogen_VDom_Machine.unStep(function (v) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {
                  build: state.build,
                  widget: res
              }, patchWidget, haltWidget));
          })(res);
          return res$prime;
      };
      haltWidget(state);
      return state.build(vdom);
  };
  var haltText = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      return Halogen_VDom_Util.removeChild(v.node, parent);
  };
  var patchText = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Text) {
          if (state.value === vdom.value0) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
          };
          if (Data_Boolean.otherwise) {
              var nextState = {
                  build: state.build,
                  node: state.node,
                  value: vdom.value0
              };
              Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
          };
      };
      haltText(state);
      return state.build(vdom);
  };
  var haltKeyed = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forInE(v.children, function (v1, s) {
          return Halogen_VDom_Machine.halt(s);
      });
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var haltElem = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var eqElemSpec = function (ns1, v, ns2, v1) {
      var $56 = v === v1;
      if ($56) {
          if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {
              return true;
          };
          if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var patchElem = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          var v1 = Data_Array.length(state.children);
          if (v1 === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
          };
          var onThis = function (ix, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (ix, s, v2) {
              var res = Halogen_VDom_Machine.step(s, v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (ix, v2) {
              var res = state.build(v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
      };
      haltElem(state);
      return state.build(vdom);
  };
  var patchKeyed = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          if (state.length === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children,
                  length: 0
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
          };
          var onThis = function (v2, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (v2, ix$prime, s, v3) {
              var res = Halogen_VDom_Machine.step(s, v3.value1);
              Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (v2, ix, v3) {
              var res = state.build(v3.value1);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2,
              length: v
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
      };
      haltKeyed(state);
      return state.build(vdom);
  };
  var buildWidget = function (v, build, w) {
      var res = v.buildWidget(v)(w);
      var res$prime = Halogen_VDom_Machine.unStep(function (v1) {
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
              build: build,
              widget: res
          }, patchWidget, haltWidget));
      })(res);
      return res$prime;
  };
  var buildText = function (v, build, s) {
      var node = Halogen_VDom_Util.createTextNode(s, v.document);
      var state = {
          build: build,
          node: node,
          value: s
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));
  };
  var buildKeyed = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (k, ix, v1) {
          var res = build(v1.value1);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children,
          length: Data_Array.length(ch1)
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
  };
  var buildElem = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (ix, child) {
          var res = build(child);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.forE(ch1, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
  };
  var buildVDom = function (spec) {
      var build = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return build(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [ v.constructor.name ]);
      };
      return build;
  };
  exports["buildVDom"] = buildVDom;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Thunk"] = $PS["Halogen.VDom.Thunk"] || {};
  var exports = $PS["Halogen.VDom.Thunk"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];        
  var Thunk = (function () {
      function Thunk(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Thunk.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Thunk(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Thunk;
  })();                                          
  var unsafeEqThunk = function (v, v1) {
      return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && Halogen_VDom_Util.refEq(v.value3, v1.value3));
  };
  var thunk = function (tid, eqFn, f, a) {
      return new Thunk(tid, eqFn, f, a);
  };
  var runThunk = function (v) {
      return v.value2(v.value3);
  };
  var mapThunk = function (k) {
      return function (v) {
          return new Thunk(v.value0, v.value1, function ($46) {
              return k(v.value2($46));
          }, v.value3);
      };
  };
  var hoist = mapThunk;
  var buildThunk = function (toVDom) {
      var haltThunk = function (state) {
          return Halogen_VDom_Machine.halt(state.vdom);
      };
      var patchThunk = function (state, t2) {
          var $43 = unsafeEqThunk(state.thunk, t2);
          if ($43) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
          };
          var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
              vdom: vdom,
              thunk: t2
          }, patchThunk, haltThunk));
      };
      var renderThunk = function (spec) {
          return function (t) {
              var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
                  thunk: t,
                  vdom: vdom
              }, patchThunk, haltThunk));
          };
      };
      return renderThunk;
  };
  exports["buildThunk"] = buildThunk;
  exports["hoist"] = hoist;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Component"] = $PS["Halogen.Component"] || {};
  var exports = $PS["Halogen.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var ComponentSlot = (function () {
      function ComponentSlot(value0) {
          this.value0 = value0;
      };
      ComponentSlot.create = function (value0) {
          return new ComponentSlot(value0);
      };
      return ComponentSlot;
  })();
  var ThunkSlot = (function () {
      function ThunkSlot(value0) {
          this.value0 = value0;
      };
      ThunkSlot.create = function (value0) {
          return new ThunkSlot(value0);
      };
      return ThunkSlot;
  })();
  var unComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var unComponent = Unsafe_Coerce.unsafeCoerce;
  var mkEval = function (args) {
      return function (v) {
          if (v instanceof Halogen_Query_HalogenQ.Initialize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.initialize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Finalize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.finalize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Receive) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.receive(v.value0)))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Action) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(args.handleAction(v.value0))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Query) {
              return Data_Coyoneda.unCoyoneda(function (g) {
                  var $28 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));
                  return function ($29) {
                      return $28(args.handleQuery($29));
                  };
              })(v.value0);
          };
          throw new Error("Failed pattern match at Halogen.Component (line 172, column 15 - line 182, column 70): " + [ v.constructor.name ]);
      };
  };
  var mkComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var mkComponent = Unsafe_Coerce.unsafeCoerce;
  var hoistSlot = function (dictBifunctor) {
      return function (dictFunctor) {
          return function (nat) {
              return function (v) {
                  if (v instanceof ComponentSlot) {
                      return unComponentSlot(function (slot) {
                          return ComponentSlot.create(mkComponentSlot({
                              get: slot.get,
                              pop: slot.pop,
                              set: slot.set,
                              component: hoist(dictBifunctor)(dictFunctor)(nat)(slot.component),
                              input: slot.input,
                              output: slot.output
                          }));
                      })(v.value0);
                  };
                  if (v instanceof ThunkSlot) {
                      return ThunkSlot.create(Halogen_VDom_Thunk.hoist(Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat)))(v.value0));
                  };
                  throw new Error("Failed pattern match at Halogen.Component (line 271, column 17 - line 276, column 53): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var hoist = function (dictBifunctor) {
      return function (dictFunctor) {
          return function (nat) {
              return unComponent(function (c) {
                  return mkComponent({
                      initialState: c.initialState,
                      render: (function () {
                          var $30 = Data_Bifunctor.lmap(dictBifunctor)(hoistSlot(dictBifunctor)(dictFunctor)(nat));
                          return function ($31) {
                              return $30(c.render($31));
                          };
                      })(),
                      "eval": (function () {
                          var $32 = Halogen_Query_HalogenM.hoist(dictFunctor)(nat);
                          return function ($33) {
                              return $32(c["eval"]($33));
                          };
                      })()
                  });
              });
          };
      };
  };
  var defaultEval = {
      handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
      receive: Data_Function["const"](Data_Maybe.Nothing.value),
      initialize: Data_Maybe.Nothing.value,
      finalize: Data_Maybe.Nothing.value
  };
  var componentSlot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (comp) {
                          return function (input) {
                              return function (output) {
                                  return mkComponentSlot({
                                      get: Halogen_Data_Slot.lookup()(dictIsSymbol)(dictOrd)(label)(p),
                                      pop: Halogen_Data_Slot.pop()(dictIsSymbol)(dictOrd)(label)(p),
                                      set: Halogen_Data_Slot.insert()(dictIsSymbol)(dictOrd)(label)(p),
                                      component: comp,
                                      input: new Halogen_Query_HalogenQ.Receive(input, Data_Unit.unit),
                                      output: output
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["mkComponent"] = mkComponent;
  exports["unComponent"] = unComponent;
  exports["hoist"] = hoist;
  exports["mkEval"] = mkEval;
  exports["defaultEval"] = defaultEval;
  exports["ComponentSlot"] = ComponentSlot;
  exports["ThunkSlot"] = ThunkSlot;
  exports["componentSlot"] = componentSlot;
  exports["unComponentSlot"] = unComponentSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["DOM.HTML.Indexed.ButtonType"] = $PS["DOM.HTML.Indexed.ButtonType"] || {};
  var exports = $PS["DOM.HTML.Indexed.ButtonType"];
  var ButtonButton = (function () {
      function ButtonButton() {

      };
      ButtonButton.value = new ButtonButton();
      return ButtonButton;
  })();
  var ButtonSubmit = (function () {
      function ButtonSubmit() {

      };
      ButtonSubmit.value = new ButtonSubmit();
      return ButtonSubmit;
  })();
  var ButtonReset = (function () {
      function ButtonReset() {

      };
      ButtonReset.value = new ButtonReset();
      return ButtonReset;
  })();
  var renderButtonType = function (v) {
      if (v instanceof ButtonButton) {
          return "button";
      };
      if (v instanceof ButtonSubmit) {
          return "submit";
      };
      if (v instanceof ButtonReset) {
          return "reset";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType (line 9, column 20 - line 12, column 25): " + [ v.constructor.name ]);
  };
  exports["ButtonButton"] = ButtonButton;
  exports["renderButtonType"] = renderButtonType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["DOM.HTML.Indexed.FormMethod"] = $PS["DOM.HTML.Indexed.FormMethod"] || {};
  var exports = $PS["DOM.HTML.Indexed.FormMethod"];
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var renderFormMethod = function (v) {
      if (v instanceof POST) {
          return "post";
      };
      if (v instanceof GET) {
          return "get";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.FormMethod (line 8, column 20 - line 10, column 15): " + [ v.constructor.name ]);
  };
  exports["POST"] = POST;
  exports["renderFormMethod"] = renderFormMethod;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["DOM.HTML.Indexed.InputType"] = $PS["DOM.HTML.Indexed.InputType"] || {};
  var exports = $PS["DOM.HTML.Indexed.InputType"];
  var InputButton = (function () {
      function InputButton() {

      };
      InputButton.value = new InputButton();
      return InputButton;
  })();
  var InputCheckbox = (function () {
      function InputCheckbox() {

      };
      InputCheckbox.value = new InputCheckbox();
      return InputCheckbox;
  })();
  var InputColor = (function () {
      function InputColor() {

      };
      InputColor.value = new InputColor();
      return InputColor;
  })();
  var InputDate = (function () {
      function InputDate() {

      };
      InputDate.value = new InputDate();
      return InputDate;
  })();
  var InputDatetimeLocal = (function () {
      function InputDatetimeLocal() {

      };
      InputDatetimeLocal.value = new InputDatetimeLocal();
      return InputDatetimeLocal;
  })();
  var InputEmail = (function () {
      function InputEmail() {

      };
      InputEmail.value = new InputEmail();
      return InputEmail;
  })();
  var InputFile = (function () {
      function InputFile() {

      };
      InputFile.value = new InputFile();
      return InputFile;
  })();
  var InputHidden = (function () {
      function InputHidden() {

      };
      InputHidden.value = new InputHidden();
      return InputHidden;
  })();
  var InputImage = (function () {
      function InputImage() {

      };
      InputImage.value = new InputImage();
      return InputImage;
  })();
  var InputMonth = (function () {
      function InputMonth() {

      };
      InputMonth.value = new InputMonth();
      return InputMonth;
  })();
  var InputNumber = (function () {
      function InputNumber() {

      };
      InputNumber.value = new InputNumber();
      return InputNumber;
  })();
  var InputPassword = (function () {
      function InputPassword() {

      };
      InputPassword.value = new InputPassword();
      return InputPassword;
  })();
  var InputRadio = (function () {
      function InputRadio() {

      };
      InputRadio.value = new InputRadio();
      return InputRadio;
  })();
  var InputRange = (function () {
      function InputRange() {

      };
      InputRange.value = new InputRange();
      return InputRange;
  })();
  var InputReset = (function () {
      function InputReset() {

      };
      InputReset.value = new InputReset();
      return InputReset;
  })();
  var InputSearch = (function () {
      function InputSearch() {

      };
      InputSearch.value = new InputSearch();
      return InputSearch;
  })();
  var InputSubmit = (function () {
      function InputSubmit() {

      };
      InputSubmit.value = new InputSubmit();
      return InputSubmit;
  })();
  var InputTel = (function () {
      function InputTel() {

      };
      InputTel.value = new InputTel();
      return InputTel;
  })();
  var InputText = (function () {
      function InputText() {

      };
      InputText.value = new InputText();
      return InputText;
  })();
  var InputTime = (function () {
      function InputTime() {

      };
      InputTime.value = new InputTime();
      return InputTime;
  })();
  var InputUrl = (function () {
      function InputUrl() {

      };
      InputUrl.value = new InputUrl();
      return InputUrl;
  })();
  var InputWeek = (function () {
      function InputWeek() {

      };
      InputWeek.value = new InputWeek();
      return InputWeek;
  })();
  var renderInputType = function (v) {
      if (v instanceof InputButton) {
          return "button";
      };
      if (v instanceof InputCheckbox) {
          return "checkbox";
      };
      if (v instanceof InputColor) {
          return "color";
      };
      if (v instanceof InputDate) {
          return "date";
      };
      if (v instanceof InputDatetimeLocal) {
          return "datetime-local";
      };
      if (v instanceof InputEmail) {
          return "email";
      };
      if (v instanceof InputFile) {
          return "file";
      };
      if (v instanceof InputHidden) {
          return "hidden";
      };
      if (v instanceof InputImage) {
          return "image";
      };
      if (v instanceof InputMonth) {
          return "month";
      };
      if (v instanceof InputNumber) {
          return "number";
      };
      if (v instanceof InputPassword) {
          return "password";
      };
      if (v instanceof InputRadio) {
          return "radio";
      };
      if (v instanceof InputRange) {
          return "range";
      };
      if (v instanceof InputReset) {
          return "reset";
      };
      if (v instanceof InputSearch) {
          return "search";
      };
      if (v instanceof InputSubmit) {
          return "submit";
      };
      if (v instanceof InputTel) {
          return "tel";
      };
      if (v instanceof InputText) {
          return "text";
      };
      if (v instanceof InputTime) {
          return "time";
      };
      if (v instanceof InputUrl) {
          return "url";
      };
      if (v instanceof InputWeek) {
          return "week";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 22): " + [ v.constructor.name ]);
  };
  exports["InputRange"] = InputRange;
  exports["InputSubmit"] = InputSubmit;
  exports["renderInputType"] = renderInputType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.Input"] = $PS["Halogen.Query.Input"] || {};
  var exports = $PS["Halogen.Query.Input"];
  var Data_Functor = $PS["Data.Functor"];
  var RefUpdate = (function () {
      function RefUpdate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RefUpdate.create = function (value0) {
          return function (value1) {
              return new RefUpdate(value0, value1);
          };
      };
      return RefUpdate;
  })();
  var Action = (function () {
      function Action(value0) {
          this.value0 = value0;
      };
      Action.create = function (value0) {
          return new Action(value0);
      };
      return Action;
  })();        
  var functorInput = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof RefUpdate) {
              return new RefUpdate(m.value0, m.value1);
          };
          if (m instanceof Action) {
              return new Action(f(m.value0));
          };
          throw new Error("Failed pattern match at Halogen.Query.Input (line 19, column 1 - line 19, column 46): " + [ m.constructor.name ]);
      };
  });
  exports["RefUpdate"] = RefUpdate;
  exports["Action"] = Action;
  exports["functorInput"] = functorInput;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };

  exports.removeEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.DOM.Prop"] = $PS["Halogen.VDom.DOM.Prop"] || {};
  var exports = $PS["Halogen.VDom.DOM.Prop"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Foreign = $PS["Foreign"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];                
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;
  var removeProperty = function (key, el) {
      var v = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
      if (v === "string") {
          return Halogen_VDom_Util.unsafeSetAny(key, "", el);
      };
      if (key === "rowSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      if (key === "colSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromInt = Unsafe_Coerce.unsafeCoerce;
  var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
  var functorProp = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof Handler) {
              return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
          };
          if (v instanceof Ref) {
              return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
          };
          return v;
      };
  });
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Data_Unit.unit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return emit(v.value0)();
              };
              return Data_Unit.unit;
          };
          var haltProp = function (state) {
              var v = Foreign_Object.lookup("ref")(state.props);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                  return mbEmit(v.value0.value0(new Removed(el)));
              };
              return Data_Unit.unit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var $54 = v11.value2 === v2.value2;
                      if ($54) {
                          return v2;
                      };
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if (v4) {
                          return v2;
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var $63 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if ($63) {
                              return v2;
                          };
                          setProperty(v2.value0, v2.value1, el);
                          return v2;
                      };
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                      return v2;
                  };
                  return v2;
              };
          };
          var applyProp = function (events) {
              return function (v, v1, v2) {
                  if (v2 instanceof Attribute) {
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v2 instanceof Property) {
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v2 instanceof Handler) {
                      var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                          Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                          return v2;
                      };
                      var ref = Effect_Ref["new"](v2.value1)();
                      var listener = Web_Event_EventTarget.eventListener(function (ev) {
                          return function __do() {
                              var f$prime = Effect_Ref.read(ref)();
                              return mbEmit(f$prime(ev));
                          };
                      })();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);
                      Halogen_VDom_Util.addEventListener(v2.value0, listener, el);
                      return v2;
                  };
                  if (v2 instanceof Ref) {
                      mbEmit(v2.value0(new Created(el)));
                      return v2;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [ v2.constructor.name ]);
              };
          };
          var patchProp = function (state, ps2) {
              var events = Halogen_VDom_Util.newMutMap();
              var onThis = removeProp(state.events);
              var onThese = diffProp(state.events, events);
              var onThat = applyProp(events);
              var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);
              var nextState = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: props
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
          };
          var renderProp = function (ps1) {
              var events = Halogen_VDom_Util.newMutMap();
              var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));
              var state = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: ps1$prime
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
          };
          return renderProp;
      };
  };
  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["Ref"] = Ref;
  exports["Created"] = Created;
  exports["Removed"] = Removed;
  exports["propFromString"] = propFromString;
  exports["propFromBoolean"] = propFromBoolean;
  exports["propFromInt"] = propFromInt;
  exports["buildProp"] = buildProp;
  exports["functorProp"] = functorProp;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML.Core"] = $PS["Halogen.HTML.Core"] || {};
  var exports = $PS["Halogen.HTML.Core"];
  var DOM_HTML_Indexed_ButtonType = $PS["DOM.HTML.Indexed.ButtonType"];
  var DOM_HTML_Indexed_FormMethod = $PS["DOM.HTML.Indexed.FormMethod"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var HTML = function (x) {
      return x;
  };
  var ClassName = function (x) {
      return x;
  };
  var IsProp = function (toPropValue) {
      this.toPropValue = toPropValue;
  };
  var widget = function ($30) {
      return HTML(Halogen_VDom_Types.Widget.create($30));
  };
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var text = function ($31) {
      return HTML(Halogen_VDom_Types.Text.create($31));
  };                                                      
  var ref = function (f) {
      return Halogen_VDom_DOM_Prop.Ref.create(function ($32) {
          return f((function (v) {
              if (v instanceof Halogen_VDom_DOM_Prop.Created) {
                  return new Data_Maybe.Just(v.value0);
              };
              if (v instanceof Halogen_VDom_DOM_Prop.Removed) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Halogen.HTML.Core (line 104, column 21 - line 106, column 23): " + [ v.constructor.name ]);
          })($32));
      });
  };
  var prop = function (dictIsProp) {
      return function (v) {
          var $33 = Halogen_VDom_DOM_Prop.Property.create(v);
          var $34 = toPropValue(dictIsProp);
          return function ($35) {
              return $33($34($35));
          };
      };
  };           
  var newtypeHTML = new Data_Newtype.Newtype(function (n) {
      return n;
  }, HTML);
  var newtypeClassName = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ClassName);
  var isPropString = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
  var isPropMediaType = new IsProp((function () {
      var $46 = Data_Newtype.unwrap(Data_MediaType.newtypeMediaType);
      return function ($47) {
          return Halogen_VDom_DOM_Prop.propFromString($46($47));
      };
  })());
  var isPropInt = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
  var isPropInputType = new IsProp(function ($49) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($49));
  });
  var isPropFormMethod = new IsProp(function ($51) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_FormMethod.renderFormMethod($51));
  });
  var isPropButtonType = new IsProp(function ($54) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($54));
  });
  var isPropBoolean = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
  var handler = Halogen_VDom_DOM_Prop.Handler.create;
  var element = function (ns) {
      return function (name) {
          return function (props) {
              return function (children) {
                  return new Halogen_VDom_Types.Elem(ns, name, props, children);
              };
          };
      };
  };
  var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_Input.functorInput)(g))))(f)(v);
          };
      };
  });                                                                            
  var attr = function (ns) {
      return function (v) {
          return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
      };
  };
  exports["widget"] = widget;
  exports["text"] = text;
  exports["element"] = element;
  exports["prop"] = prop;
  exports["attr"] = attr;
  exports["handler"] = handler;
  exports["ref"] = ref;
  exports["newtypeHTML"] = newtypeHTML;
  exports["bifunctorHTML"] = bifunctorHTML;
  exports["isPropString"] = isPropString;
  exports["isPropInt"] = isPropInt;
  exports["isPropBoolean"] = isPropBoolean;
  exports["isPropMediaType"] = isPropMediaType;
  exports["isPropButtonType"] = isPropButtonType;
  exports["isPropFormMethod"] = isPropFormMethod;
  exports["isPropInputType"] = isPropInputType;
  exports["newtypeClassName"] = newtypeClassName;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML.Elements"] = $PS["Halogen.HTML.Elements"] || {};
  var exports = $PS["Halogen.HTML.Elements"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
  var footer = element("footer");
  var form = element("form");
  var h2 = element("h2");
  var h2_ = h2([  ]);
  var h3 = element("h3");
  var h3_ = h3([  ]);        
  var hr = function (props) {
      return element("hr")(props)([  ]);
  };
  var hr_ = hr([  ]);    
  var i = element("i");
  var input = function (props) {
      return element("input")(props)([  ]);
  };                   
  var label = element("label");
  var label_ = label([  ]);  
  var li = element("li");
  var li_ = li([  ]);
  var main = element("main");
  var nav = element("nav");      
  var option = element("option");
  var option_ = option([  ]);
  var p = element("p");
  var p_ = p([  ]);
  var pre = element("pre");
  var pre_ = pre([  ]);        
  var select = element("select");
  var small = element("small");
  var span = element("span");
  var span_ = span([  ]);
  var strong = element("strong");
  var strong_ = strong([  ]);  
  var sup = element("sup");
  var sup_ = sup([  ]);
  var table = element("table");
  var tbody = element("tbody");
  var tbody_ = tbody([  ]);
  var td = element("td");
  var td_ = td([  ]);
  var textarea = function (es) {
      return element("textarea")(es)([  ]);
  };                       
  var th = element("th");
  var th_ = th([  ]);
  var thead = element("thead");
  var thead_ = thead([  ]);
  var tr = element("tr");
  var tr_ = tr([  ]);
  var ul = element("ul");
  var ul_ = ul([  ]);
  var dt = element("dt");
  var dt_ = dt([  ]);
  var dl = element("dl");
  var dl_ = dl([  ]);
  var div = element("div");
  var div_ = div([  ]);
  var dd = element("dd");
  var caption = element("caption");
  var caption_ = caption([  ]);
  var canvas = function (props) {
      return element("canvas")(props)([  ]);
  };
  var button = element("button");
  var br = function (props) {
      return element("br")(props)([  ]);
  };
  var br_ = br([  ]);      
  var article = element("article");
  var a = element("a");
  exports["a"] = a;
  exports["article"] = article;
  exports["br_"] = br_;
  exports["button"] = button;
  exports["canvas"] = canvas;
  exports["caption_"] = caption_;
  exports["dd"] = dd;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["dl_"] = dl_;
  exports["dt_"] = dt_;
  exports["footer"] = footer;
  exports["form"] = form;
  exports["h2"] = h2;
  exports["h2_"] = h2_;
  exports["h3_"] = h3_;
  exports["hr_"] = hr_;
  exports["i"] = i;
  exports["input"] = input;
  exports["label"] = label;
  exports["label_"] = label_;
  exports["li"] = li;
  exports["li_"] = li_;
  exports["main"] = main;
  exports["nav"] = nav;
  exports["option"] = option;
  exports["option_"] = option_;
  exports["p"] = p;
  exports["p_"] = p_;
  exports["pre"] = pre;
  exports["pre_"] = pre_;
  exports["select"] = select;
  exports["small"] = small;
  exports["span"] = span;
  exports["span_"] = span_;
  exports["strong"] = strong;
  exports["strong_"] = strong_;
  exports["sup_"] = sup_;
  exports["table"] = table;
  exports["tbody_"] = tbody_;
  exports["td"] = td;
  exports["td_"] = td_;
  exports["textarea"] = textarea;
  exports["th"] = th;
  exports["th_"] = th_;
  exports["thead_"] = thead_;
  exports["tr_"] = tr_;
  exports["ul"] = ul;
  exports["ul_"] = ul_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML.Properties"] = $PS["Halogen.HTML.Properties"] || {};
  var exports = $PS["Halogen.HTML.Properties"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var ref = (function () {
      var go = function (p) {
          return function (mel) {
              return new Data_Maybe.Just(new Halogen_Query_Input.RefUpdate(p, mel));
          };
      };
      return function ($11) {
          return Halogen_HTML_Core.ref(go($11));
      };
  })();
  var prop = function (dictIsProp) {
      return Halogen_HTML_Core.prop(dictIsProp);
  };                                                         
  var rows = prop(Halogen_HTML_Core.isPropInt)("rows");
  var selected = prop(Halogen_HTML_Core.isPropBoolean)("selected");
  var type_ = function (dictIsProp) {
      return prop(dictIsProp)("type");
  };
  var value = prop(Halogen_HTML_Core.isPropString)("value");  
  var placeholder = prop(Halogen_HTML_Core.isPropString)("placeholder");
  var method = prop(Halogen_HTML_Core.isPropFormMethod)("method");
  var id_ = prop(Halogen_HTML_Core.isPropString)("id");
  var href = prop(Halogen_HTML_Core.isPropString)("href");
  var enctype = prop(Halogen_HTML_Core.isPropMediaType)("enctype");
  var classes = (function () {
      var $14 = prop(Halogen_HTML_Core.isPropString)("className");
      var $15 = Data_String_Common.joinWith(" ");
      var $16 = Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName));
      return function ($17) {
          return $14($15($16($17)));
      };
  })();
  var class_ = (function () {
      var $18 = prop(Halogen_HTML_Core.isPropString)("className");
      var $19 = Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName);
      return function ($20) {
          return $18($19($20));
      };
  })();
  var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
  var action = prop(Halogen_HTML_Core.isPropString)("action");
  exports["attr"] = attr;
  exports["ref"] = ref;
  exports["class_"] = class_;
  exports["classes"] = classes;
  exports["rows"] = rows;
  exports["href"] = href;
  exports["id_"] = id_;
  exports["method"] = method;
  exports["action"] = action;
  exports["enctype"] = enctype;
  exports["type_"] = type_;
  exports["value"] = value;
  exports["selected"] = selected;
  exports["placeholder"] = placeholder;
})(PS);
(function(exports) {
  "use strict";

  exports.showToastJs = function () {
    $('.toast').toast({ autohide: false }).toast('show');
  };

  exports.enablePopoverJs = function () {
    $('[data-toggle="popover"]').popover('enable');
  };
  exports.disposePopoverJs = function () {
    $('[data-toggle="popover"]').popover('dispose');
  };
})(PS["Page.Commons"] = PS["Page.Commons"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Graphics.Canvas"] = $PS["Graphics.Canvas"] || {};
  var exports = $PS["Graphics.Canvas"];
  var $foreign = $PS["Graphics.Canvas"];
  var Data_Maybe = $PS["Data.Maybe"];
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["getContext2D"] = $foreign.getContext2D;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML.CSS"] = $PS["Halogen.HTML.CSS"] || {};
  var exports = $PS["Halogen.HTML.CSS"];
  var CSS_Render = $PS["CSS.Render"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var style = (function () {
      var toString = (function () {
          var $4 = Data_String_Common.joinWith("; ");
          var $5 = Foreign_Object.foldMap(Data_Monoid.monoidArray)(function (key) {
              return function (val) {
                  return [ key + (": " + val) ];
              };
          });
          return function ($6) {
              return $4($5($6));
          };
      })();
      var rights = Data_Array.concatMap(Data_Foldable.foldMap(Data_Either.foldableEither)(Data_Monoid.monoidArray)(Data_Array.singleton));
      var property = function (v) {
          if (v instanceof CSS_Stylesheet.Property) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
          };
          return Data_Maybe.Nothing.value;
      };
      var rules = function (rs) {
          var properties = Control_Bind.bind(Control_Bind.bindArray)(Data_Array.mapMaybe(property)(rs))(function ($7) {
              return rights(CSS_Render.collect($7));
          });
          return Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(properties);
      };
      var $8 = Halogen_HTML_Properties.attr("style");
      return function ($9) {
          return $8(toString(rules(CSS_Stylesheet.runS($9))));
      };
  })();
  exports["style"] = style;
})(PS);
(function(exports) {
  "use strict";

  exports._currentTarget = function (e) {
    return e.currentTarget;
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {};
  var exports = $PS["Web.Event.Event"];
  var $foreign = $PS["Web.Event.Event"];
  var Data_Nullable = $PS["Data.Nullable"];
  var currentTarget = function ($8) {
      return Data_Nullable.toMaybe($foreign["_currentTarget"]($8));
  };
  exports["currentTarget"] = currentTarget;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.Event.EventTypes"] = $PS["Web.HTML.Event.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.EventTypes"];
  var input = "input";
  var domcontentloaded = "DOMContentLoaded";
  var change = "change";
  exports["change"] = change;
  exports["domcontentloaded"] = domcontentloaded;
  exports["input"] = input;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.UIEvent.KeyboardEvent.EventTypes"] = $PS["Web.UIEvent.KeyboardEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.KeyboardEvent.EventTypes"];
  var keyup = "keyup";
  exports["keyup"] = keyup;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.UIEvent.MouseEvent.EventTypes"] = $PS["Web.UIEvent.MouseEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var click = "click";
  exports["click"] = click;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML.Events"] = $PS["Halogen.HTML.Events"] || {};
  var exports = $PS["Halogen.HTML.Events"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_UIEvent_KeyboardEvent_EventTypes = $PS["Web.UIEvent.KeyboardEvent.EventTypes"];
  var Web_UIEvent_MouseEvent_EventTypes = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var mouseHandler = Unsafe_Coerce.unsafeCoerce;
  var keyHandler = Unsafe_Coerce.unsafeCoerce;
  var handler = function (et) {
      var $1 = Halogen_HTML_Core.handler(et);
      var $2 = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_Input.Action.create));
      return function ($3) {
          return $1($2($3));
      };
  };                                                       
  var onClick = (function () {
      var $4 = handler(Web_UIEvent_MouseEvent_EventTypes.click);
      return function ($5) {
          return $4(mouseHandler($5));
      };
  })();
  var onKeyUp = (function () {
      var $14 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup);
      return function ($15) {
          return $14(keyHandler($15));
      };
  })();
  var addForeignPropHandler = function (key) {
      return function (prop) {
          return function (reader) {
              return function (f) {
                  var go = function (a) {
                      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
                  };
                  return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
                      return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
                  }));
              };
          };
      };
  };                                                                                                                    
  var onValueChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("value")(Foreign.readString);
  var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
  exports["onClick"] = onClick;
  exports["onKeyUp"] = onKeyUp;
  exports["onValueChange"] = onValueChange;
  exports["onValueInput"] = onValueInput;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Themes.Bootstrap4"] = $PS["Halogen.Themes.Bootstrap4"] || {};
  var exports = $PS["Halogen.Themes.Bootstrap4"];
  var textWhite = "text-white";      
  var textSuccess = "text-success";
  var textSecondary = "text-secondary";
  var textRight = "text-right";
  var textPrimary = "text-primary";
  var textMuted = "text-muted";
  var textMonospace = "text-monospace";
  var textDark = "text-dark";
  var textDanger = "text-danger";
  var textCenter = "text-center";
  var tableHover = "table-hover";  
  var table = "table";                      
  var srOnly = "sr-only";              
  var small = "small";  
  var row = "row"; 
  var py2 = "py-2";
  var pl4 = "pl-4";                  
  var pagination = "pagination";
  var pageLink = "page-link";
  var pageItem = "page-item";
  var p3 = "p-3";          
  var noGutters = "no-gutters";
  var navbarTogglerIcon = "navbar-toggler-icon";
  var navbarToggler = "navbar-toggler";
  var navbarNav = "navbar-nav";           
  var navbarExpandSm = "navbar-expand-sm";
  var navbarDark = "navbar-dark";
  var navbarCollapse = "navbar-collapse";
  var navbarBrand = "navbar-brand";
  var navbar = "navbar";
  var navTabs = "nav-tabs";
  var navPills = "nav-pills";
  var navLink = "nav-link";
  var navJustified = "nav-justified";
  var navItem = "nav-item";
  var nav = "nav"; 
  var mxAuto = "mx-auto";
  var mrAuto = "mr-auto";
  var ml2 = "ml-2";
  var ml0 = "ml-0";   
  var mbAuto = "mb-auto";
  var mb1 = "mb-1";
  var m4 = "m-4";
  var m3 = "m-3";
  var m1 = "m-1";                               
  var justifyContentCenter = "justify-content-center";
  var h2 = "h2";           
  var formInline = "form-inline";
  var formGroup = "form-group";             
  var formControl = "form-control";
  var fixedTop = "fixed-top";        
  var customRange = "custom-range";      
  var container = "container";  
  var collapse = "collapse";
  var colSm2 = "col-sm-2";  
  var colSm10 = "col-sm-10";
  var colSm = "col-sm";   
  var colMd2 = "col-md-2";            
  var colAuto = "col-auto";
  var col6 = "col-6";
  var close = "close";                      
  var cardHeader = "card-header";  
  var cardBody = "card-body";
  var card = "card";   
  var btnSecondary = "btn-secondary";
  var btnPrimary = "btn-primary";               
  var btnOutlineSuccess = "btn-outline-success";    
  var btnOutlinePrimary = "btn-outline-primary";
  var btnOutlineDanger = "btn-outline-danger";
  var btnLight = "btn-light";
  var btn = "btn";             
  var bgLight = "bg-light";
  var bgInfo = "bg-info";
  var bgDark = "bg-dark";        
  var alertInfo = "alert-info";
  var alertHeading = "alert-heading";
  var alertDanger = "alert-danger";
  var alert = "alert";
  var active = "active";
  exports["active"] = active;
  exports["alert"] = alert;
  exports["alertDanger"] = alertDanger;
  exports["alertHeading"] = alertHeading;
  exports["alertInfo"] = alertInfo;
  exports["bgDark"] = bgDark;
  exports["bgInfo"] = bgInfo;
  exports["bgLight"] = bgLight;
  exports["btn"] = btn;
  exports["btnLight"] = btnLight;
  exports["btnOutlineDanger"] = btnOutlineDanger;
  exports["btnOutlinePrimary"] = btnOutlinePrimary;
  exports["btnOutlineSuccess"] = btnOutlineSuccess;
  exports["btnPrimary"] = btnPrimary;
  exports["btnSecondary"] = btnSecondary;
  exports["card"] = card;
  exports["cardBody"] = cardBody;
  exports["cardHeader"] = cardHeader;
  exports["close"] = close;
  exports["col6"] = col6;
  exports["colAuto"] = colAuto;
  exports["colMd2"] = colMd2;
  exports["colSm"] = colSm;
  exports["colSm10"] = colSm10;
  exports["colSm2"] = colSm2;
  exports["collapse"] = collapse;
  exports["container"] = container;
  exports["customRange"] = customRange;
  exports["fixedTop"] = fixedTop;
  exports["formControl"] = formControl;
  exports["formGroup"] = formGroup;
  exports["formInline"] = formInline;
  exports["h2"] = h2;
  exports["justifyContentCenter"] = justifyContentCenter;
  exports["m1"] = m1;
  exports["m3"] = m3;
  exports["m4"] = m4;
  exports["mb1"] = mb1;
  exports["mbAuto"] = mbAuto;
  exports["ml0"] = ml0;
  exports["ml2"] = ml2;
  exports["mrAuto"] = mrAuto;
  exports["mxAuto"] = mxAuto;
  exports["nav"] = nav;
  exports["navItem"] = navItem;
  exports["navJustified"] = navJustified;
  exports["navLink"] = navLink;
  exports["navPills"] = navPills;
  exports["navTabs"] = navTabs;
  exports["navbar"] = navbar;
  exports["navbarBrand"] = navbarBrand;
  exports["navbarCollapse"] = navbarCollapse;
  exports["navbarDark"] = navbarDark;
  exports["navbarExpandSm"] = navbarExpandSm;
  exports["navbarNav"] = navbarNav;
  exports["navbarToggler"] = navbarToggler;
  exports["navbarTogglerIcon"] = navbarTogglerIcon;
  exports["noGutters"] = noGutters;
  exports["p3"] = p3;
  exports["pageItem"] = pageItem;
  exports["pageLink"] = pageLink;
  exports["pagination"] = pagination;
  exports["pl4"] = pl4;
  exports["py2"] = py2;
  exports["row"] = row;
  exports["small"] = small;
  exports["srOnly"] = srOnly;
  exports["table"] = table;
  exports["tableHover"] = tableHover;
  exports["textCenter"] = textCenter;
  exports["textDanger"] = textDanger;
  exports["textDark"] = textDark;
  exports["textMonospace"] = textMonospace;
  exports["textMuted"] = textMuted;
  exports["textPrimary"] = textPrimary;
  exports["textRight"] = textRight;
  exports["textSecondary"] = textSecondary;
  exports["textSuccess"] = textSuccess;
  exports["textWhite"] = textWhite;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Page.Commons"] = $PS["Page.Commons"] || {};
  var exports = $PS["Page.Commons"];
  var $foreign = $PS["Page.Commons"];
  var CSS_Geometry = $PS["CSS.Geometry"];
  var CSS_Size = $PS["CSS.Size"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var DOM_HTML_Indexed_ButtonType = $PS["DOM.HTML.Indexed.ButtonType"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Graphics_Canvas = $PS["Graphics.Canvas"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Themes_Bootstrap4 = $PS["Halogen.Themes.Bootstrap4"];
  var Route = $PS["Route"];                
  var toast = function (xs) {
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.attr("aria-live")("polite"), Halogen_HTML_Properties.attr("aria-atomic")("true") ])(xs);
  };
  var snackbarItem = function (text) {
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ "toast", Halogen_Themes_Bootstrap4.bgInfo, Halogen_Themes_Bootstrap4.mxAuto ]), Halogen_HTML_Properties.attr("role")("alert"), Halogen_HTML_Properties.attr("aria-live")("assertive"), Halogen_HTML_Properties.attr("aria-atomic")("true") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ "toast-body", Halogen_Themes_Bootstrap4.textCenter ]) ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.textWhite) ])([ Halogen_HTML_Core.text(text) ]) ]) ]);
  };
  var showToast = $foreign.showToastJs;
  var navbar = function (navigateAction) {
      return function (current) {
          var navItem = function (route) {
              var clss = (function () {
                  var $1 = Data_Eq.eq(Route.eqRoute)(route)(current);
                  if ($1) {
                      return [ Halogen_Themes_Bootstrap4.navItem, Halogen_Themes_Bootstrap4.active ];
                  };
                  return [ Halogen_Themes_Bootstrap4.navItem ];
              })();
              return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.classes(Data_Array.concat([ [ Halogen_Themes_Bootstrap4.navItem ], (function () {
                  var $2 = Data_Eq.eq(Route.eqRoute)(route)(current);
                  if ($2) {
                      return [ Halogen_Themes_Bootstrap4.active ];
                  };
                  return [  ];
              })() ])) ])([ Halogen_HTML_Elements.button((function () {
                  var $3 = Data_Eq.eq(Route.eqRoute)(route)(current);
                  if ($3) {
                      return [ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.navLink ]) ];
                  };
                  return [ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.navLink ]), Halogen_HTML_Events.onClick(function (v) {
                      return Data_Maybe.Just.create(navigateAction(route));
                  }) ];
              })())([ Halogen_HTML_Core.text(Route.routeToString(route)) ]) ]);
          };
          return Halogen_HTML_Elements.nav([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.navbar, Halogen_Themes_Bootstrap4.navbarExpandSm, Halogen_Themes_Bootstrap4.fixedTop, Halogen_Themes_Bootstrap4.navbarDark, Halogen_Themes_Bootstrap4.bgDark ]) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.navbarBrand) ])([ Halogen_HTML_Core.text("PiHVAC") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.navbarToggler), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropButtonType)(DOM_HTML_Indexed_ButtonType.ButtonButton.value), Halogen_HTML_Properties.attr("data-toggle")("collapse"), Halogen_HTML_Properties.attr("data-target")("#navbarNav"), Halogen_HTML_Properties.attr("aria-controls")("navbarNav"), Halogen_HTML_Properties.attr("aria-expanded")("false"), Halogen_HTML_Properties.attr("aria-label")("Toggle navigation") ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.navbarTogglerIcon) ])([  ]) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.collapse, Halogen_Themes_Bootstrap4.navbarCollapse ]), Halogen_HTML_Properties.id_("navbarNav") ])([ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.navbarNav) ])([ navItem(Route.Home.value), navItem(new Route.Plotdata(Data_Maybe.Nothing.value)), navItem(new Route.Infrared(Data_Maybe.Nothing.value)), navItem(Route.Settings.value), navItem(Route.About.value) ]) ]) ]);
      };
  };
  var icon = function (iconName) {
      return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_("icon") ])([ Halogen_HTML_Elements.i([ Halogen_HTML_Properties.class_(iconName) ])([  ]) ]);
  };
  var toastItem = function (head) {
      return function (subhead) {
          return function (text) {
              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ "toast", Halogen_Themes_Bootstrap4.bgInfo, Halogen_Themes_Bootstrap4.mxAuto ]), Halogen_HTML_Properties.attr("role")("alert"), Halogen_HTML_Properties.attr("aria-live")("assertive"), Halogen_HTML_Properties.attr("aria-atomic")("true") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_("toast-header") ])([ Halogen_HTML_Elements.strong([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.mrAuto) ])([ Halogen_HTML_Core.text(head) ]), Halogen_HTML_Elements.small([ Halogen_HTML_CSS.style(CSS_Geometry.marginLeft(CSS_Size.px(40.0))) ])([ Halogen_HTML_Core.text(subhead) ]), Halogen_HTML_Elements.button([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropButtonType)(DOM_HTML_Indexed_ButtonType.ButtonButton.value), Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.ml2, Halogen_Themes_Bootstrap4.mb1, Halogen_Themes_Bootstrap4.close ]), Halogen_HTML_Properties.attr("data-dismiss")("toast"), Halogen_HTML_Properties.attr("area-label")("Close") ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.attr("aria-hidden")("true") ])([ icon("fas fa-times-circle") ]) ]) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ "toast-body", Halogen_Themes_Bootstrap4.textWhite ]) ])([ Halogen_HTML_Core.text(text) ]) ]);
          };
      };
  };
  var getContext2dById = function (id_) {
      var maybeC2d = function (elem) {
          return Data_Functor.map(Effect.functorEffect)(Data_Maybe.Just.create)(Graphics_Canvas.getContext2D(elem));
      };
      return function __do() {
          var maybeElem = Graphics_Canvas.getCanvasElementById(id_)();
          return Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(Data_Maybe.Nothing.value))(function (x) {
              return Control_Bind.bindFlipped(Effect.bindEffect)(Control_Applicative.pure(Effect.applicativeEffect))(maybeC2d(x));
          })(maybeElem)();
      };
  };
  var footer = Halogen_HTML_Elements.footer([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.bgLight, Halogen_Themes_Bootstrap4.py2 ]) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.textCenter, Halogen_Themes_Bootstrap4.bgLight, Halogen_Themes_Bootstrap4.textDark ]) ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.small, Halogen_Themes_Bootstrap4.textMuted ]) ])([ Halogen_HTML_Core.text("PiHVAC \xa92019 Akihiro Yamamoto.") ]) ]) ]);
  var enablePopover = $foreign.enablePopoverJs;
  var disposePopover = $foreign.disposePopoverJs;
  exports["disposePopover"] = disposePopover;
  exports["enablePopover"] = enablePopover;
  exports["footer"] = footer;
  exports["getContext2dById"] = getContext2dById;
  exports["icon"] = icon;
  exports["navbar"] = navbar;
  exports["showToast"] = showToast;
  exports["snackbarItem"] = snackbarItem;
  exports["toast"] = toast;
  exports["toastItem"] = toastItem;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Component.LineChart"] = $PS["Component.LineChart"] || {};
  var exports = $PS["Component.LineChart"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Foreign_ChartJs = $PS["Foreign.ChartJs"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Page_Commons = $PS["Page.Commons"];
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var render = function (state) {
      return Halogen_HTML_Elements.canvas([ Halogen_HTML_Properties.id_(state.canvasId) ]);
  };
  var newChart = function (canvasId) {
      return function (datasets) {
          return function (options) {
              var f = function (v) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Maybe.Nothing.value);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return Data_Functor.map(Effect.functorEffect)(Data_Maybe.Just.create)(Foreign_ChartJs.drawLineChart(v.value0)(datasets)(options));
                  };
                  throw new Error("Failed pattern match at Component.LineChart (line 116, column 3 - line 116, column 59): " + [ v.constructor.name ]);
              };
              return Control_Bind.bindFlipped(Effect.bindEffect)(f)(Page_Commons.getContext2dById(canvasId));
          };
      };
  };
  var initialState = function (input) {
      return {
          canvasId: input.canvasId,
          datasets: input.datasets,
          options: input.options,
          maybeLineChart: Data_Maybe.Nothing.value
      };
  };
  var handleQuery = function (dictMonadAff) {
      return function (v) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))(Foreign_ChartJs.destroyLineChart)(state.maybeLineChart)))(function () {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(newChart(v.value0.canvasId)(v.value0.datasets)(v.value0.options)))(function (maybeChart) {
                      var newState = (function () {
                          var $12 = {};
                          for (var $13 in state) {
                              if ({}.hasOwnProperty.call(state, $13)) {
                                  $12[$13] = state[$13];
                              };
                          };
                          $12.canvasId = v.value0.canvasId;
                          $12.datasets = v.value0.datasets;
                          $12.options = v.value0.options;
                          $12.maybeLineChart = maybeChart;
                          return $12;
                      })();
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(newState))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
                      });
                  });
              });
          });
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (v) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(newChart(state.canvasId)(state.datasets)(state.options)))(function (maybeChart) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)((function () {
                      var $18 = {};
                      for (var $19 in state) {
                          if ({}.hasOwnProperty.call(state, $19)) {
                              $18[$19] = state[$19];
                          };
                      };
                      $18.maybeLineChart = maybeChart;
                      return $18;
                  })()))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                  });
              });
          });
      };
  };
  var component = function (dictMonadAff) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadAff),
              handleQuery: handleQuery(dictMonadAff),
              receive: Data_Function["const"](Data_Maybe.Nothing.value),
              initialize: new Data_Maybe.Just(Initialize.value),
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function(exports) {
  "use strict";
  var CanvasGauges =require("canvas-gauges");

  exports.createRadialGauge = function (element) {
    return function (options) {
      return function () {
        options.renderTo = element;
        var gauge = new CanvasGauges.RadialGauge(options);
        gauge.draw();
        return gauge;
      };
    };
  };

  exports.updateRadialGauge = function (gaugeJsInstance) {
    return function (options) {
      return function () {
        for (var optname in options) {
          gaugeJsInstance[optname] = options[optname];
        }
        gaugeJsInstance.update();
      };
    };
  };
})(PS["Foreign.CanvasGauges"] = PS["Foreign.CanvasGauges"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Foreign.CanvasGauges"] = $PS["Foreign.CanvasGauges"] || {};
  var exports = $PS["Foreign.CanvasGauges"];
  var $foreign = $PS["Foreign.CanvasGauges"];
  var redrawRadialGauge = $foreign.updateRadialGauge;
  var drawRadialGauge = $foreign.createRadialGauge;
  exports["drawRadialGauge"] = drawRadialGauge;
  exports["redrawRadialGauge"] = redrawRadialGauge;
})(PS);
(function(exports) {
  "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };

  // ----------------------------------------------------------------------------

  exports.click = function (elt) {
    return function () {
      return elt.click();
    };
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var $foreign = $PS["Web.HTML.HTMLElement"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  var fromElement = function (x) {
      return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  exports["fromElement"] = fromElement;
  exports["toNode"] = toNode;
  exports["click"] = $foreign.click;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query"] = $PS["Halogen.Query"] || {};
  var exports = $PS["Halogen.Query"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];                
  var tell = function (act) {
      return act(Data_Unit.unit);
  };
  var getHTMLElementRef = (function () {
      var $1 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
          return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v);
      });
      return function ($2) {
          return $1(Halogen_Query_HalogenM.getRef($2));
      };
  })();
  exports["tell"] = tell;
  exports["getHTMLElementRef"] = getHTMLElementRef;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Component.RadialGauge"] = $PS["Component.RadialGauge"] || {};
  var exports = $PS["Component.RadialGauge"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Foreign_CanvasGauges = $PS["Foreign.CanvasGauges"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var render = function (state) {
      return Halogen_HTML_Elements.canvas([ Halogen_HTML_Properties.ref(state.refLabel) ]);
  };
  var initialState = function (input) {
      return {
          refLabel: input.refLabel,
          gaugeInstance: Data_Maybe.Nothing.value,
          options: input.options
      };
  };
  var handleQuery = function (dictMonadAff) {
      return function (v) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                  if (v1.gaugeInstance instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  };
                  if (v1.gaugeInstance instanceof Data_Maybe.Just) {
                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Foreign_CanvasGauges.redrawRadialGauge(v1.gaugeInstance.value0)(v.value0.options));
                  };
                  throw new Error("Failed pattern match at Component.RadialGauge (line 101, column 5 - line 106, column 61): " + [ v1.gaugeInstance.constructor.name ]);
              })())(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                      var $13 = {};
                      for (var $14 in st) {
                          if ({}.hasOwnProperty.call(st, $14)) {
                              $13[$14] = st[$14];
                          };
                      };
                      $13.refLabel = v.value0.refLabel;
                      $13.options = v.value0.options;
                      return $13;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
                  });
              });
          });
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (v) {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(state.refLabel))(function (maybeElem) {
                  if (maybeElem instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                  };
                  if (maybeElem instanceof Data_Maybe.Just) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Foreign_CanvasGauges.drawRadialGauge(maybeElem.value0)(state.options)))(function (gauge) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                              var $21 = {};
                              for (var $22 in st) {
                                  if ({}.hasOwnProperty.call(st, $22)) {
                                      $21[$22] = st[$22];
                                  };
                              };
                              $21.gaugeInstance = new Data_Maybe.Just(gauge);
                              return $21;
                          }))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Component.RadialGauge (line 88, column 7 - line 95, column 22): " + [ maybeElem.constructor.name ]);
              });
          });
      };
  };
  var component = function (dictMonadAff) {
      return Halogen_Component.mkComponent({
          initialState: initialState,
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadAff),
              handleQuery: handleQuery(dictMonadAff),
              receive: Data_Function["const"](Data_Maybe.Nothing.value),
              initialize: new Data_Maybe.Just(Initialize.value),
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Variant"] = $PS["Data.Variant"] || {};
  var exports = $PS["Data.Variant"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var onMatch = function (dictRowToList) {
      return function (dictVariantMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return function (k) {
                      return function (v) {
                          if (Record_Unsafe.unsafeHas(v.type)(r)) {
                              return Record_Unsafe.unsafeGet(v.type)(r)(v.value);
                          };
                          return k(v);
                      };
                  };
              };
          };
      };
  };
  var inj = function (dictCons) {
      return function (dictIsSymbol) {
          return function (p) {
              return function (value) {
                  return {
                      type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
                      value: value
                  };
              };
          };
      };
  };
  var expand = function (dictUnion) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  var case_ = function (r) {
      return Partial_Unsafe.unsafeCrashWith("Data.Variant: pattern match failure [" + (r.type + "]"));
  };
  var match = function (dictRowToList) {
      return function (dictVariantMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return onMatch()()()(r)(case_);
              };
          };
      };
  };
  exports["inj"] = inj;
  exports["match"] = match;
  exports["expand"] = expand;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Types.Form"] = $PS["Formless.Types.Form"] || {};
  var exports = $PS["Formless.Types.Form"];
  var Data_Newtype = $PS["Data.Newtype"];
  var OutputField = function (x) {
      return x;
  };
  var InputFunction = function (x) {
      return x;
  };
  var InputField = function (x) {
      return x;
  };
  var FormProxy = (function () {
      function FormProxy() {

      };
      FormProxy.value = new FormProxy();
      return FormProxy;
  })();
  var FormField = function (x) {
      return x;
  };
  var newtypeOutputField = new Data_Newtype.Newtype(function (n) {
      return n;
  }, OutputField);
  var newtypeInputFunction = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InputFunction);
  var newtypeInputField = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InputField);
  var newtypeFormField = new Data_Newtype.Newtype(function (n) {
      return n;
  }, FormField);
  var eqInputField = function (dictEq) {
      return dictEq;
  };
  exports["FormProxy"] = FormProxy;
  exports["OutputField"] = OutputField;
  exports["FormField"] = FormField;
  exports["newtypeInputField"] = newtypeInputField;
  exports["eqInputField"] = eqInputField;
  exports["newtypeOutputField"] = newtypeOutputField;
  exports["newtypeInputFunction"] = newtypeInputFunction;
  exports["newtypeFormField"] = newtypeFormField;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Action"] = $PS["Formless.Action"] || {};
  var exports = $PS["Formless.Action"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant = $PS["Data.Variant"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];                
  var validateAll = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
      return "validateAll";
  }))(Data_Symbol.SProxy.value)(Data_Unit.unit);
  var submit = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
      return "submit";
  }))(Data_Symbol.SProxy.value)(Data_Unit.unit);
  var setValidate = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (i) {
                      return Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                          return "modifyValidate";
                      }))(Data_Symbol.SProxy.value)(new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Data_Newtype.wrap(dictNewtype)(Data_Variant.inj()(dictIsSymbol)(sym)(Data_Newtype.wrap(Formless_Types_Form.newtypeInputFunction)(Data_Function["const"](i))))));
                  };
              };
          };
      };
  };
  var resetAll = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
      return "resetAll";
  }))(Data_Symbol.SProxy.value)(Data_Unit.unit);
  var injAction = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
      return "userAction";
  }))(Data_Symbol.SProxy.value);
  exports["injAction"] = injAction;
  exports["setValidate"] = setValidate;
  exports["validateAll"] = validateAll;
  exports["resetAll"] = resetAll;
  exports["submit"] = submit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Class.Initial"] = $PS["Formless.Class.Initial"] || {};
  var exports = $PS["Formless.Class.Initial"];
  var Data_Monoid = $PS["Data.Monoid"];              
  var Initial = function (initial) {
      this.initial = initial;
  };                                                                        
  var initialString = new Initial(Data_Monoid.mempty(Data_Monoid.monoidString));
  var initial = function (dict) {
      return dict.initial;
  };
  exports["initial"] = initial;
  exports["initialString"] = initialString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Functor.Variant"] = $PS["Data.Functor.Variant"] || {};
  var exports = $PS["Data.Functor.Variant"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var onMatch = function (dictRowToList) {
      return function (dictVariantFMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return function (k) {
                      return function (v) {
                          if (Record_Unsafe.unsafeHas(v.type)(r)) {
                              return Record_Unsafe.unsafeGet(v.type)(r)(v.value);
                          };
                          return k(v);
                      };
                  };
              };
          };
      };
  };
  var case_ = function (r) {
      return Partial_Unsafe.unsafeCrashWith("Data.Functor.Variant: pattern match failure [" + (r.type + "]"));
  }; 
  var match = function (dictRowToList) {
      return function (dictVariantFMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return onMatch()()()(r)(case_);
              };
          };
      };
  };
  exports["match"] = match;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Data.FormFieldResult"] = $PS["Formless.Data.FormFieldResult"] || {};
  var exports = $PS["Formless.Data.FormFieldResult"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];                  
  var NotValidated = (function () {
      function NotValidated() {

      };
      NotValidated.value = new NotValidated();
      return NotValidated;
  })();
  var Validating = (function () {
      function Validating() {

      };
      Validating.value = new Validating();
      return Validating;
  })();
  var $$Error = (function () {
      function $$Error(value0) {
          this.value0 = value0;
      };
      $$Error.create = function (value0) {
          return new $$Error(value0);
      };
      return $$Error;
  })();
  var Success = (function () {
      function Success(value0) {
          this.value0 = value0;
      };
      Success.create = function (value0) {
          return new Success(value0);
      };
      return Success;
  })();
  var toMaybe = function (v) {
      if (v instanceof Success) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  }; 
  var fromEither = function (v) {
      if (v instanceof Data_Either.Left) {
          return new $$Error(v.value0);
      };
      if (v instanceof Data_Either.Right) {
          return new Success(v.value0);
      };
      throw new Error("Failed pattern match at Formless.Data.FormFieldResult (line 44, column 14 - line 46, column 23): " + [ v.constructor.name ]);
  };
  exports["NotValidated"] = NotValidated;
  exports["Validating"] = Validating;
  exports["Error"] = $$Error;
  exports["Success"] = Success;
  exports["fromEither"] = fromEither;
  exports["toMaybe"] = toMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Validation"] = $PS["Formless.Validation"] || {};
  var exports = $PS["Formless.Validation"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Function = $PS["Data.Function"];
  var Data_Newtype = $PS["Data.Newtype"];                                  
  var Validation = function (x) {
      return x;
  };
  var newtypeValidation = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Validation);
  var runValidation = function (dictMonad) {
      return Data_Newtype.unwrap(newtypeValidation);
  };
  var hoistFnE_ = function (dictMonad) {
      return function (f) {
          return Validation(Data_Function["const"]((function () {
              var $48 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($49) {
                  return $48(f($49));
              };
          })()));
      };
  };
  exports["runValidation"] = runValidation;
  exports["hoistFnE_"] = hoistFnE_;
  exports["newtypeValidation"] = newtypeValidation;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Internal.Transform"] = $PS["Formless.Internal.Transform"] || {};
  var exports = $PS["Formless.Internal.Transform"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Formless_Data_FormFieldResult = $PS["Formless.Data.FormFieldResult"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Formless_Validation = $PS["Formless.Validation"];
  var Record = $PS["Record"];
  var Record_Builder = $PS["Record.Builder"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var ValidateAll = function (validateAllBuilder) {
      this.validateAllBuilder = validateAllBuilder;
  };
  var SetFormFieldsTouched = function (setFormFieldsTouchedBuilder) {
      this.setFormFieldsTouchedBuilder = setFormFieldsTouchedBuilder;
  };
  var ReplaceFormFieldInputs = function (replaceFormFieldInputsBuilder) {
      this.replaceFormFieldInputsBuilder = replaceFormFieldInputsBuilder;
  };
  var ModifyAll = function (modifyAllBuilder) {
      this.modifyAllBuilder = modifyAllBuilder;
  };
  var InputFieldsToFormFields = function (inputFieldsToFormFieldsBuilder) {
      this.inputFieldsToFormFieldsBuilder = inputFieldsToFormFieldsBuilder;
  };
  var FormFieldsToInputFields = function (formFieldsToInputFieldsBuilder) {
      this.formFieldsToInputFieldsBuilder = formFieldsToInputFieldsBuilder;
  };
  var FormFieldToMaybeOutput = function (formFieldsToMaybeOutputBuilder) {
      this.formFieldsToMaybeOutputBuilder = formFieldsToMaybeOutputBuilder;
  };
  var CountErrors = function (countErrorsImpl) {
      this.countErrorsImpl = countErrorsImpl;
  };
  var AllTouched = function (allTouchedImpl) {
      this.allTouchedImpl = allTouchedImpl;
  };
  var validateAllBuilder = function (dict) {
      return dict.validateAllBuilder;
  };
  var unsafeRunValidationVariant = function (dictMonad) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (dictNewtype2) {
                  return function ($$var) {
                      return function (vs) {
                          return function (rec) {
                              var label = (function () {
                                  var v = Data_Newtype.unwrap(dictNewtype)($$var);
                                  return v.type;
                              })();
                              var rec2 = (function () {
                                  var v = Record_Unsafe.unsafeGet(label)(Data_Newtype.unwrap(dictNewtype1)(rec));
                                  return Control_Bind.bind(dictMonad.Bind1())(Formless_Validation.runValidation(dictMonad)(Record_Unsafe.unsafeGet(label)(Data_Newtype.unwrap(dictNewtype2)(vs)))(rec)(v.input))(function (res) {
                                      var rec$prime = Record_Unsafe.unsafeSet(label)(Formless_Types_Form.FormField({
                                          input: v.input,
                                          touched: v.touched,
                                          result: Formless_Data_FormFieldResult.fromEither(res)
                                      }))(Data_Newtype.unwrap(dictNewtype1)(rec));
                                      return Control_Applicative.pure(dictMonad.Applicative0())(Data_Newtype.wrap(dictNewtype1)(rec$prime));
                                  });
                              })();
                              return rec2;
                          };
                      };
                  };
              };
          };
      };
  };
  var unsafeModifyInputVariant = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (f) {
              return function ($$var) {
                  return function (rec) {
                      var rep = (function () {
                          var v = Data_Newtype.unwrap(dictNewtype)($$var);
                          return new Data_Tuple.Tuple(v.type, v.value);
                      })();
                      var val = (function () {
                          var v = Record_Unsafe.unsafeGet(Data_Tuple.fst(rep))(Data_Newtype.unwrap(dictNewtype1)(rec));
                          return Formless_Types_Form.FormField({
                              input: Data_Newtype.unwrap(Formless_Types_Form.newtypeInputFunction)(Data_Tuple.snd(rep))(v.input),
                              touched: true,
                              result: f(v.result)
                          });
                      })();
                      return Data_Newtype.wrap(dictNewtype1)(Record_Unsafe.unsafeSet(Data_Tuple.fst(rep))(val)(Data_Newtype.unwrap(dictNewtype1)(rec)));
                  };
              };
          };
      };
  };
  var setFormFieldsTouchedNil = new SetFormFieldsTouched(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var setFormFieldsTouchedBuilder = function (dict) {
      return dict.setFormFieldsTouchedBuilder;
  };
  var setFormFieldsTouchedCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictSetFormFieldsTouched) {
              return function (dictRow1Cons) {
                  return new SetFormFieldsTouched(function (v) {
                      return function (r) {
                          var rest = setFormFieldsTouchedBuilder(dictSetFormFieldsTouched)(Type_Data_RowList.RLProxy.value)(r);
                          var val = Data_Newtype.over(Formless_Types_Form.newtypeFormField)(Formless_Types_Form.newtypeFormField)(Formless_Types_Form.FormField)(function (v1) {
                              return {
                                  touched: true,
                                  input: v1.input,
                                  result: v1.result
                              };
                          })(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var replaceFormFieldInputsTouchedNil = new ReplaceFormFieldInputs(function (v) {
      return function (v1) {
          return function (v2) {
              return Control_Category.identity(Record_Builder.categoryBuilder);
          };
      };
  });
  var replaceFormFieldInputsBuilder = function (dict) {
      return dict.replaceFormFieldInputsBuilder;
  };
  var replaceFormFieldInputsTouchedCons = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (dictCons) {
                  return function (dictCons1) {
                      return function (dictRow1Cons) {
                          return function (dictReplaceFormFieldInputs) {
                              return new ReplaceFormFieldInputs(function (ir) {
                                  return function (v) {
                                      return function (fr) {
                                          var rest = replaceFormFieldInputsBuilder(dictReplaceFormFieldInputs)(ir)(Type_Data_RowList.RLProxy.value)(fr);
                                          var f = Data_Newtype.unwrap(dictNewtype1)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(fr));
                                          var i = Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(ir);
                                          var first = Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(Formless_Types_Form.FormField({
                                              input: Data_Newtype.unwrap(dictNewtype)(i),
                                              touched: false,
                                              result: Formless_Data_FormFieldResult.NotValidated.value
                                          }));
                                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                                      };
                                  };
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var nilCountErrors = new CountErrors(function (v) {
      return function (v1) {
          return 0;
      };
  });
  var nilAllTouched = new AllTouched(function (v) {
      return function (v1) {
          return true;
      };
  });
  var modifyAllNil = new ModifyAll(function (v) {
      return function (v1) {
          return function (v2) {
              return Control_Category.identity(Record_Builder.categoryBuilder);
          };
      };
  });
  var modifyAllBuilder = function (dict) {
      return dict.modifyAllBuilder;
  };
  var modifyAllCons = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (dictCons) {
                  return function (dictCons1) {
                      return function (dictRow1Cons) {
                          return function (dictModifyAll) {
                              return new ModifyAll(function (ifs) {
                                  return function (v) {
                                      return function (r) {
                                          var rest = modifyAllBuilder(dictModifyAll)(ifs)(Type_Data_RowList.RLProxy.value)(r);
                                          var f = Data_Newtype.unwrap(dictNewtype)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(ifs));
                                          var field = Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(r);
                                          var first = Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(Data_Newtype.over(dictNewtype1)(dictNewtype1)(Formless_Types_Form.FormField)(function (x) {
                                              return {
                                                  input: f(x.input),
                                                  result: x.result,
                                                  touched: x.touched
                                              };
                                          })(field));
                                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                                      };
                                  };
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var inputFieldsToInputNil = new FormFieldsToInputFields(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var inputFieldsToFormFieldsNil = new InputFieldsToFormFields(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var inputFieldsToFormFieldsBuilder = function (dict) {
      return dict.inputFieldsToFormFieldsBuilder;
  };
  var inputFieldsToFormFieldsCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictInputFieldsToFormFields) {
              return function (dictRow1Cons) {
                  return new InputFieldsToFormFields(function (v) {
                      return function (r) {
                          var transform = function (v1) {
                              return {
                                  input: v1,
                                  touched: false,
                                  result: Formless_Data_FormFieldResult.NotValidated.value
                              };
                          };
                          var rest = inputFieldsToFormFieldsBuilder(dictInputFieldsToFormFields)(Type_Data_RowList.RLProxy.value)(r);
                          var val = transform(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var fromScratch = Data_Functor.flap(Data_Functor.functorFn)(Record_Builder.build)({});
  var inputFieldsToFormFields = function (dictRowToList) {
      return function (dictInputFieldsToFormFields) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (r) {
                      var builder = inputFieldsToFormFieldsBuilder(dictInputFieldsToFormFields)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                      return Data_Newtype.wrap(dictNewtype1)(fromScratch(builder));
                  };
              };
          };
      };
  };
  var modifyAll = function (dictRowToList) {
      return function (dictModifyAll) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (ifs) {
                      return function (fs) {
                          var builder = modifyAllBuilder(dictModifyAll)(Data_Newtype.unwrap(dictNewtype)(ifs))(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype1)(fs));
                          return Data_Newtype.wrap(dictNewtype1)(fromScratch(builder));
                      };
                  };
              };
          };
      };
  };
  var replaceFormFieldInputs = function (dictRowToList) {
      return function (dictReplaceFormFieldInputs) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (is) {
                      return function (fs) {
                          var builder = replaceFormFieldInputsBuilder(dictReplaceFormFieldInputs)(Data_Newtype.unwrap(dictNewtype)(is))(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype1)(fs));
                          return Data_Newtype.wrap(dictNewtype1)(fromScratch(builder));
                      };
                  };
              };
          };
      };
  };
  var setFormFieldsTouched = function (dictRowToList) {
      return function (dictSetFormFieldsTouched) {
          return function (dictNewtype) {
              return function (r) {
                  var builder = setFormFieldsTouchedBuilder(dictSetFormFieldsTouched)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                  return Data_Newtype.wrap(dictNewtype)(fromScratch(builder));
              };
          };
      };
  };
  var validateAll = function (dictRowToList) {
      return function (dictMonad) {
          return function (dictValidateAll) {
              return function (dictNewtype) {
                  return function (dictNewtype1) {
                      return function (vs) {
                          return function (fs) {
                              var builder = validateAllBuilder(dictValidateAll)(Data_Newtype.unwrap(dictNewtype)(vs))(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype1)(fs));
                              return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Newtype.wrap(dictNewtype1))(Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(fromScratch)(builder));
                          };
                      };
                  };
              };
          };
      };
  };
  var formFieldsToMaybeOutputNil = new FormFieldToMaybeOutput(function (v) {
      return function (v1) {
          return new Data_Maybe.Just(Control_Category.identity(Record_Builder.categoryBuilder));
      };
  });
  var formFieldsToMaybeOutputBuilder = function (dict) {
      return dict.formFieldsToMaybeOutputBuilder;
  };
  var formFieldsToMaybeOutputCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictFormFieldToMaybeOutput) {
              return function (dictRow1Cons) {
                  return new FormFieldToMaybeOutput(function (v) {
                      return function (r) {
                          var rest = formFieldsToMaybeOutputBuilder(dictFormFieldToMaybeOutput)(Type_Data_RowList.RLProxy.value)(r);
                          var transform = function (v1) {
                              return function (builder$prime) {
                                  return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(v1))(builder$prime);
                              };
                          };
                          var val = Data_Functor.map(Data_Maybe.functorMaybe)(Formless_Types_Form.OutputField)(Formless_Data_FormFieldResult.toMaybe((Data_Newtype.unwrap(Formless_Types_Form.newtypeFormField)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(r))).result));
                          return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(transform)(val))(rest);
                      };
                  });
              };
          };
      };
  };
  var formFieldsToMaybeOutputFields = function (dictRowToList) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (dictFormFieldToMaybeOutput) {
                  return function (r) {
                      var builder = formFieldsToMaybeOutputBuilder(dictFormFieldToMaybeOutput)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap(dictNewtype1))(Data_Functor.map(Data_Maybe.functorMaybe)(fromScratch)(builder));
                  };
              };
          };
      };
  };
  var formFieldsToInputFieldsBuilder = function (dict) {
      return dict.formFieldsToInputFieldsBuilder;
  };
  var inputFieldsToInputCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictFormFieldsToInputFields) {
              return function (dictRow1Cons) {
                  return new FormFieldsToInputFields(function (v) {
                      return function (r) {
                          var transform = function (v1) {
                              return v1.input;
                          };
                          var rest = formFieldsToInputFieldsBuilder(dictFormFieldsToInputFields)(Type_Data_RowList.RLProxy.value)(r);
                          var val = transform(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var formFieldsToInputFields = function (dictRowToList) {
      return function (dictFormFieldsToInputFields) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (r) {
                      var builder = formFieldsToInputFieldsBuilder(dictFormFieldsToInputFields)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype1)(r));
                      return Data_Newtype.wrap(dictNewtype)(fromScratch(builder));
                  };
              };
          };
      };
  };
  var countErrorsImpl = function (dict) {
      return dict.countErrorsImpl;
  };
  var countErrors = function (dictRowToList) {
      return function (dictCountErrors) {
          return function (dictNewtype) {
              var $142 = countErrorsImpl(dictCountErrors)(Type_Data_RowList.RLProxy.value);
              var $143 = Data_Newtype.unwrap(dictNewtype);
              return function ($144) {
                  return $142($143($144));
              };
          };
      };
  };
  var consCountErrors = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCountErrors) {
              return new CountErrors(function (v) {
                  return function (r) {
                      var res = (function () {
                          var v1 = (Data_Newtype.unwrap(Formless_Types_Form.newtypeFormField)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(r))).result;
                          if (v1 instanceof Formless_Data_FormFieldResult["Error"]) {
                              return 1;
                          };
                          return 0;
                      })();
                      return res + countErrorsImpl(dictCountErrors)(Type_Data_RowList.RLProxy.value)(r) | 0;
                  };
              });
          };
      };
  };
  var applyToValidationNil = function (dictMonad) {
      return new ValidateAll(function (v) {
          return function (v1) {
              return function (v2) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Control_Category.identity(Record_Builder.categoryBuilder));
              };
          };
      });
  };
  var applyToValidationCons = function (dictIsSymbol) {
      return function (dictMonad) {
          return function (dictCons) {
              return function (dictNewtype) {
                  return function (dictCons1) {
                      return function (dictRow1Cons) {
                          return function (dictValidateAll) {
                              return new ValidateAll(function (vs) {
                                  return function (v) {
                                      return function (r) {
                                          var rest = validateAllBuilder(dictValidateAll)(vs)(Type_Data_RowList.RLProxy.value)(r);
                                          var fn = function (val$prime) {
                                              return function (rest$prime) {
                                                  return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(val$prime))(rest$prime);
                                              };
                                          };
                                          var val = (function () {
                                              var validator = Data_Newtype.unwrap(Formless_Validation.newtypeValidation)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(vs));
                                              var formField = Data_Newtype.unwrap(Formless_Types_Form.newtypeFormField)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(r));
                                              return Control_Bind.bind(dictMonad.Bind1())(validator(Data_Newtype.wrap(dictNewtype)(r))(formField.input))(function (res) {
                                                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Newtype.wrap(Formless_Types_Form.newtypeFormField)((function () {
                                                      var $138 = {};
                                                      for (var $139 in formField) {
                                                          if ({}.hasOwnProperty.call(formField, $139)) {
                                                              $138[$139] = formField[$139];
                                                          };
                                                      };
                                                      $138.result = Formless_Data_FormFieldResult.fromEither(res);
                                                      return $138;
                                                  })()));
                                              });
                                          })();
                                          return Control_Apply.apply((dictMonad.Bind1()).Apply0())(Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(fn)(val))(rest);
                                      };
                                  };
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var allTouchedImpl = function (dict) {
      return dict.allTouchedImpl;
  };
  var consAllTouched = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictAllTouched) {
              return new AllTouched(function (v) {
                  return function (r) {
                      var $141 = (Data_Newtype.unwrap(Formless_Types_Form.newtypeFormField)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(r))).touched;
                      if ($141) {
                          return allTouchedImpl(dictAllTouched)(Type_Data_RowList.RLProxy.value)(r);
                      };
                      return false;
                  };
              });
          };
      };
  };
  var allTouched = function (dictRowToList) {
      return function (dictAllTouched) {
          return function (dictNewtype) {
              var $145 = allTouchedImpl(dictAllTouched)(Type_Data_RowList.RLProxy.value);
              var $146 = Data_Newtype.unwrap(dictNewtype);
              return function ($147) {
                  return $145($146($147));
              };
          };
      };
  };
  exports["fromScratch"] = fromScratch;
  exports["allTouched"] = allTouched;
  exports["countErrors"] = countErrors;
  exports["setFormFieldsTouched"] = setFormFieldsTouched;
  exports["formFieldsToInputFields"] = formFieldsToInputFields;
  exports["inputFieldsToFormFields"] = inputFieldsToFormFields;
  exports["formFieldsToMaybeOutputFields"] = formFieldsToMaybeOutputFields;
  exports["replaceFormFieldInputs"] = replaceFormFieldInputs;
  exports["modifyAll"] = modifyAll;
  exports["validateAll"] = validateAll;
  exports["unsafeModifyInputVariant"] = unsafeModifyInputVariant;
  exports["unsafeRunValidationVariant"] = unsafeRunValidationVariant;
  exports["setFormFieldsTouchedNil"] = setFormFieldsTouchedNil;
  exports["setFormFieldsTouchedCons"] = setFormFieldsTouchedCons;
  exports["inputFieldsToInputNil"] = inputFieldsToInputNil;
  exports["inputFieldsToInputCons"] = inputFieldsToInputCons;
  exports["inputFieldsToFormFieldsNil"] = inputFieldsToFormFieldsNil;
  exports["inputFieldsToFormFieldsCons"] = inputFieldsToFormFieldsCons;
  exports["formFieldsToMaybeOutputNil"] = formFieldsToMaybeOutputNil;
  exports["formFieldsToMaybeOutputCons"] = formFieldsToMaybeOutputCons;
  exports["nilCountErrors"] = nilCountErrors;
  exports["consCountErrors"] = consCountErrors;
  exports["nilAllTouched"] = nilAllTouched;
  exports["consAllTouched"] = consAllTouched;
  exports["applyToValidationNil"] = applyToValidationNil;
  exports["applyToValidationCons"] = applyToValidationCons;
  exports["modifyAllNil"] = modifyAllNil;
  exports["modifyAllCons"] = modifyAllCons;
  exports["replaceFormFieldInputsTouchedNil"] = replaceFormFieldInputsTouchedNil;
  exports["replaceFormFieldInputsTouchedCons"] = replaceFormFieldInputsTouchedCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Types.Component"] = $PS["Formless.Types.Component"] || {};
  var exports = $PS["Formless.Types.Component"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];                                          
  var Invalid = (function () {
      function Invalid() {

      };
      Invalid.value = new Invalid();
      return Invalid;
  })();
  var Incomplete = (function () {
      function Incomplete() {

      };
      Incomplete.value = new Incomplete();
      return Incomplete;
  })();
  var Valid = (function () {
      function Valid() {

      };
      Valid.value = new Valid();
      return Valid;
  })();
  var SubmitReply = (function () {
      function SubmitReply(value0) {
          this.value0 = value0;
      };
      SubmitReply.create = function (value0) {
          return new SubmitReply(value0);
      };
      return SubmitReply;
  })();
  var SendQuery = (function () {
      function SendQuery(value0) {
          this.value0 = value0;
      };
      SendQuery.create = function (value0) {
          return new SendQuery(value0);
      };
      return SendQuery;
  })();
  var AsQuery = (function () {
      function AsQuery(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AsQuery.create = function (value0) {
          return function (value1) {
              return new AsQuery(value0, value1);
          };
      };
      return AsQuery;
  })();
  var Submitted = (function () {
      function Submitted(value0) {
          this.value0 = value0;
      };
      Submitted.create = function (value0) {
          return new Submitted(value0);
      };
      return Submitted;
  })();
  var Changed = (function () {
      function Changed(value0) {
          this.value0 = value0;
      };
      Changed.create = function (value0) {
          return new Changed(value0);
      };
      return Changed;
  })();
  var InternalState = function (x) {
      return x;
  };
  var newtypeInternalState = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InternalState);
  var _formless = Data_Symbol.SProxy.value;
  exports["SubmitReply"] = SubmitReply;
  exports["SendQuery"] = SendQuery;
  exports["AsQuery"] = AsQuery;
  exports["InternalState"] = InternalState;
  exports["Invalid"] = Invalid;
  exports["Incomplete"] = Incomplete;
  exports["Valid"] = Valid;
  exports["Submitted"] = Submitted;
  exports["Changed"] = Changed;
  exports["_formless"] = _formless;
  exports["newtypeInternalState"] = newtypeInternalState;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Internal.Component"] = $PS["Formless.Internal.Component"] || {};
  var exports = $PS["Formless.Internal.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Record_Builder = $PS["Record.Builder"];                
  var submit = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictAllTouched) {
              return function (dictSetFormFieldsTouched) {
                  return function (dictValidateAll) {
                      return function (dictFormFieldToMaybeOutput) {
                          return function (dictValidateAll1) {
                              return function (dictNewtype) {
                                  return function (dictNewtype1) {
                                      return function (dictNewtype2) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (validated) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                                  var $25 = {};
                                                  for (var $26 in v) {
                                                      if ({}.hasOwnProperty.call(v, $26)) {
                                                          $25[$26] = v[$26];
                                                      };
                                                  };
                                                  $25.submitting = false;
                                                  return $25;
                                              }))(function () {
                                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)((function () {
                                                      if (validated.validity instanceof Formless_Types_Component.Valid) {
                                                          return Formless_Internal_Transform.formFieldsToMaybeOutputFields()(dictNewtype)(dictNewtype1)(dictFormFieldToMaybeOutput)(validated.form);
                                                      };
                                                      return Data_Maybe.Nothing.value;
                                                  })());
                                              });
                                          });
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var preSubmit = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictAllTouched) {
              return function (dictSetFormFieldsTouched) {
                  return function (dictValidateAll) {
                      return function (dictFormFieldToMaybeOutput) {
                          return function (dictValidateAll1) {
                              return function (dictNewtype) {
                                  return function (dictNewtype1) {
                                      return function (dictNewtype2) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                              var $29 = {};
                                              for (var $30 in st) {
                                                  if ({}.hasOwnProperty.call(st, $30)) {
                                                      $29[$30] = st[$30];
                                                  };
                                              };
                                              $29.submitAttempts = st.submitAttempts + 1 | 0;
                                              $29.submitting = true;
                                              return $29;
                                          }))(function (init) {
                                              var internal = Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(init.internal);
                                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(!internal.allTouched)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                                  var $32 = {};
                                                  for (var $33 in v) {
                                                      if ({}.hasOwnProperty.call(v, $33)) {
                                                          $32[$33] = v[$33];
                                                      };
                                                  };
                                                  $32.form = Formless_Internal_Transform.setFormFieldsTouched()(dictSetFormFieldsTouched)(dictNewtype)(init.form);
                                                  $32.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v1) {
                                                      return {
                                                          allTouched: true,
                                                          debounceRef: v1.debounceRef,
                                                          initialInputs: v1.initialInputs,
                                                          validationRef: v1.validationRef,
                                                          validators: v1.validators
                                                      };
                                                  })(init.internal);
                                                  return $32;
                                              }));
                                          });
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var getPublicState = function (dictLacks) {
      return Record_Builder.build(Record_Builder["delete"](new Data_Symbol.IsSymbol(function () {
          return "internal";
      }))()()(Data_Symbol.SProxy.value));
  };
  exports["getPublicState"] = getPublicState;
  exports["preSubmit"] = preSubmit;
  exports["submit"] = submit;
})(PS);
(function(exports) {
  /* globals exports, setTimeout */
  "use strict";

  var AVar = function () {

    function MutableQueue () {
      this.head = null;
      this.last = null;
      this.size = 0;
    }

    function MutableCell (queue, value) {
      this.queue = queue;
      this.value = value;
      this.next  = null;
      this.prev  = null;
    }

    function AVar (value) {
      this.draining = false;
      this.error    = null;
      this.value    = value;
      this.takes    = new MutableQueue();
      this.reads    = new MutableQueue();
      this.puts     = new MutableQueue();
    }

    var EMPTY = {};

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function putLast (queue, value) {
      var cell = new MutableCell(queue, value);
      switch (queue.size) {
      case 0:
        queue.head = cell;
        break;
      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;
      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
      }
      queue.size++;
      return cell;
    }

    function takeLast (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;
      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
      }
      cell.prev = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function takeHead (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;
      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
      }
      cell.next = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function deleteCell (cell) {
      if (cell.queue === null) {
        return;
      }
      if (cell.queue.last === cell) {
        takeLast(cell.queue);
        return;
      }
      if (cell.queue.head === cell) {
        takeHead(cell.queue);
        return;
      }
      if (cell.prev) {
        cell.prev.next = cell.next;
      }
      if (cell.next) {
        cell.next.prev = cell.prev;
      }
      cell.queue.size--;
      cell.queue = null;
      cell.value = null;
      cell.next  = null;
      cell.prev  = null;
    }

    function drainVar (util, avar) {
      if (avar.draining) {
        return;
      }

      var ps = avar.puts;
      var ts = avar.takes;
      var rs = avar.reads;
      var p, r, t, value, rsize;

      avar.draining = true;

      while (1) { // eslint-disable-line no-constant-condition
        p = null;
        r = null;
        t = null;
        value = avar.value;
        rsize = rs.size;

        if (avar.error !== null) {
          value = util.left(avar.error);
          while (p = takeHead(ps)) { // eslint-disable-line no-cond-assign
            runEff(p.cb(value));
          }
          while (r = takeHead(rs)) { // eslint-disable-line no-cond-assign
            runEff(r(value));
          }
          while (t = takeHead(ts)) { // eslint-disable-line no-cond-assign
            runEff(t(value));
          }
          break;
        }

        // Process the next put. We do not immediately invoke the callback
        // because we want to preserve ordering. If there are takes/reads
        // we want to run those first.
        if (value === EMPTY && (p = takeHead(ps))) {
          avar.value = value = p.value;
        }

        if (value !== EMPTY) {
          // We go ahead and queue up the next take for the same reasons as
          // above. Invoking the read callbacks can affect the mutable queue.
          t = takeHead(ts);
          // We only want to process the reads queued up before running these
          // callbacks so we guard on rsize.
          while (rsize-- && (r = takeHead(rs))) {
            runEff(r(util.right(value)));
          }
          if (t !== null) {
            avar.value = EMPTY;
            runEff(t(util.right(value)));
          }
        }

        if (p !== null) {
          runEff(p.cb(util.right(void 0)));
        }

        // Callbacks could have queued up more items so we need to guard on the
        // actual mutable properties.
        if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
          break;
        }
      }
      avar.draining = false;
    }

    AVar.EMPTY      = EMPTY;
    AVar.putLast    = putLast;
    AVar.takeLast   = takeLast;
    AVar.takeHead   = takeHead;
    AVar.deleteCell = deleteCell;
    AVar.drainVar   = drainVar;

    return AVar;
  }();

  exports.empty = function () {
    return new AVar(AVar.EMPTY);
  };

  exports._killVar = function (util, error, avar) {
    return function () {
      if (avar.error === null) {
        avar.error = error;
        avar.value = AVar.EMPTY;
        AVar.drainVar(util, avar);
      }
    };
  };

  exports._putVar = function (util, value, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.puts, { cb: cb, value: value });
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };

  exports._takeVar = function (util, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.takes, cb);
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };
})(PS["Effect.AVar"] = PS["Effect.AVar"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.AVar"] = $PS["Effect.AVar"] || {};
  var exports = $PS["Effect.AVar"];
  var $foreign = $PS["Effect.AVar"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var Killed = (function () {
      function Killed(value0) {
          this.value0 = value0;
      };
      Killed.create = function (value0) {
          return new Killed(value0);
      };
      return Killed;
  })();
  var Filled = (function () {
      function Filled(value0) {
          this.value0 = value0;
      };
      Filled.create = function (value0) {
          return new Filled(value0);
      };
      return Filled;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var ffiUtil = {
      left: Data_Either.Left.create,
      right: Data_Either.Right.create,
      nothing: Data_Maybe.Nothing.value,
      just: Data_Maybe.Just.create,
      killed: Killed.create,
      filled: Filled.create,
      empty: Empty.value
  };
  var kill = function (err) {
      return function (avar) {
          return $foreign["_killVar"](ffiUtil, err, avar);
      };
  };
  var put = function (value) {
      return function (avar) {
          return function (cb) {
              return $foreign["_putVar"](ffiUtil, value, avar, cb);
          };
      };
  };
  var take = function (avar) {
      return function (cb) {
          return $foreign["_takeVar"](ffiUtil, avar, cb);
      };
  };
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Aff.AVar"] = $PS["Effect.Aff.AVar"] || {};
  var exports = $PS["Effect.Aff.AVar"];
  var Effect_AVar = $PS["Effect.AVar"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var take = function (avar) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var c = Effect_AVar.take(avar)(k)();
              return Effect_Aff.effectCanceler(c);
          };
      });
  };
  var put = function (value) {
      return function (avar) {
          return Effect_Aff.makeAff(function (k) {
              return function __do() {
                  var c = Effect_AVar.put(value)(avar)(k)();
                  return Effect_Aff.effectCanceler(c);
              };
          });
      };
  };   
  var kill = function (error) {
      var $11 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
      var $12 = Effect_AVar.kill(error);
      return function ($13) {
          return $11($12($13));
      };
  };
  var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
  exports["empty"] = empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Internal.Debounce"] = $PS["Formless.Internal.Debounce"] || {};
  var exports = $PS["Formless.Internal.Debounce"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];                
  var debounceForm = function (dictMonadAff) {
      return function (ms) {
          return function (pre) {
              return function (post) {
                  return function (last) {
                      var readRef = function (dictMonadAff1) {
                          var $10 = Effect_Class.liftEffect(dictMonadAff1.MonadEffect0());
                          var $11 = Data_Functor.map(Effect.functorEffect)(Control_Bind.join(Data_Maybe.bindMaybe));
                          var $12 = Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect.applicativeEffect)(Effect_Ref.read);
                          return function ($13) {
                              return $10($11($12($13)));
                          };
                      };
                      var mkFiber = function (v) {
                          return Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(ms))(function () {
                              return Effect_Aff_AVar.put(Data_Unit.unit)(v);
                          })));
                      };
                      var killFiber$prime = function (dictMonadAff1) {
                          var $14 = Effect_Aff_Class.liftAff(dictMonadAff1);
                          var $15 = Effect_Aff.killFiber(Effect_Exception.error("time's up!"));
                          return function ($16) {
                              return $14($15($16));
                          };
                      };
                      var atomic = function (dictMonadAff1) {
                          return function (process) {
                              return function (maybeLast) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                                      var ref = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(state.internal)).validationRef;
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(readRef(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff1))(ref))(function (mbRef) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(mbRef)(Halogen_Query_HalogenM.kill))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff1.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(ref)(Effect_Ref.write(Data_Maybe.Nothing.value))))(function () {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.fork(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(process)(function (form) {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                                          var $5 = {};
                                                          for (var $6 in v) {
                                                              if ({}.hasOwnProperty.call(v, $6)) {
                                                                  $5[$6] = v[$6];
                                                              };
                                                          };
                                                          $5.form = form;
                                                          return $5;
                                                      }))(function () {
                                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff1.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(ref)(Effect_Ref.write(Data_Maybe.Nothing.value))))(function () {
                                                              return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeLast)(Control_Category.identity(Control_Category.categoryFn));
                                                          });
                                                      });
                                                  })))(function (forkId) {
                                                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff1.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(ref)(Effect_Ref.write(new Data_Maybe.Just(forkId))));
                                                  });
                                              });
                                          });
                                      });
                                  });
                              };
                          };
                      };
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                          var vdRef = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(state.internal)).validationRef;
                          var dbRef = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(state.internal)).debounceRef;
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(readRef(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(vdRef))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(Halogen_Query_HalogenM.kill)))(function () {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Functor.map(Effect.functorEffect)(Control_Bind.join(Data_Maybe.bindMaybe))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect.applicativeEffect)(Effect_Ref.read)(dbRef))))(function (debouncer) {
                                  if (debouncer instanceof Data_Maybe.Nothing) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.empty))(function ($$var) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(mkFiber($$var))(function (fiber) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.fork(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.take($$var))))(function () {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(Data_Maybe.Nothing.value))(dbRef)))(function () {
                                                      return atomic(dictMonadAff)(post)(new Data_Maybe.Just(last));
                                                  });
                                              })))(function () {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(dbRef)(Effect_Ref.write(new Data_Maybe.Just({
                                                      "var": $$var,
                                                      fiber: fiber
                                                  })))))(function () {
                                                      return atomic(dictMonadAff)(pre)(Data_Maybe.Nothing.value);
                                                  });
                                              });
                                          });
                                      });
                                  };
                                  if (debouncer instanceof Data_Maybe.Just) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(killFiber$prime(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(debouncer.value0.fiber)))(function () {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(mkFiber(debouncer["value0"]["var"]))(function (fiber) {
                                              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(dbRef)(Effect_Ref.write(new Data_Maybe.Just({
                                                  "var": debouncer["value0"]["var"],
                                                  fiber: fiber
                                              }))));
                                          });
                                      });
                                  };
                                  throw new Error("Failed pattern match at Formless.Internal.Debounce (line 40, column 3 - line 57, column 66): " + [ debouncer.constructor.name ]);
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  exports["debounceForm"] = debounceForm;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Type.Data.Row"] = $PS["Type.Data.Row"] || {};
  var exports = $PS["Type.Data.Row"];
  var RProxy = (function () {
      function RProxy() {

      };
      RProxy.value = new RProxy();
      return RProxy;
  })();
  exports["RProxy"] = RProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Transform.Row"] = $PS["Formless.Transform.Row"] || {};
  var exports = $PS["Formless.Transform.Row"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Data_Row = $PS["Type.Data.Row"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];
  var MakeInputFieldsFromRow = function (mkInputFieldsFromRowBuilder) {
      this.mkInputFieldsFromRowBuilder = mkInputFieldsFromRowBuilder;
  };
  var mkInputFieldsFromRowNil = new MakeInputFieldsFromRow(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var mkInputFieldsFromRowBuilder = function (dict) {
      return dict.mkInputFieldsFromRowBuilder;
  };
  var mkInputFieldsFromRowCons = function (dictIsSymbol) {
      return function (dictInitial) {
          return function (dictCons) {
              return function (dictMakeInputFieldsFromRow) {
                  return function (dictRow1Cons) {
                      return new MakeInputFieldsFromRow(function (v) {
                          return function (r) {
                              var val = Formless_Class_Initial.initial(dictInitial);
                              var rest = mkInputFieldsFromRowBuilder(dictMakeInputFieldsFromRow)(Type_Data_RowList.RLProxy.value)(r);
                              var first = Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                              return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                          };
                      });
                  };
              };
          };
      };
  };
  var mkInputFields = function (dictRowToList) {
      return function (dictNewtype) {
          return function (dictMakeInputFieldsFromRow) {
              return function (v) {
                  var builder = mkInputFieldsFromRowBuilder(dictMakeInputFieldsFromRow)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
                  return Data_Newtype.wrap(dictNewtype)(Formless_Internal_Transform.fromScratch(builder));
              };
          };
      };
  };
  exports["mkInputFields"] = mkInputFields;
  exports["mkInputFieldsFromRowNil"] = mkInputFieldsFromRowNil;
  exports["mkInputFieldsFromRowCons"] = mkInputFieldsFromRowCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Component"] = $PS["Formless.Component"] || {};
  var exports = $PS["Formless.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Functor_Variant = $PS["Data.Functor.Variant"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant = $PS["Data.Variant"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Data_FormFieldResult = $PS["Formless.Data.FormFieldResult"];
  var Formless_Internal_Component = $PS["Formless.Internal.Component"];
  var Formless_Internal_Debounce = $PS["Formless.Internal.Debounce"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Transform_Row = $PS["Formless.Transform.Row"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Record_Builder = $PS["Record.Builder"];
  var handleAction = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictRowToList1) {
              return function (dictEqRecord) {
                  return function (dictInputFieldsToFormFields) {
                      return function (dictFormFieldsToInputFields) {
                          return function (dictCountErrors) {
                              return function (dictAllTouched) {
                                  return function (dictSetFormFieldsTouched) {
                                      return function (dictReplaceFormFieldInputs) {
                                          return function (dictModifyAll) {
                                              return function (dictValidateAll) {
                                                  return function (dictFormFieldToMaybeOutput) {
                                                      return function (dictNewtype) {
                                                          return function (dictNewtype1) {
                                                              return function (dictNewtype2) {
                                                                  return function (dictNewtype3) {
                                                                      return function (dictNewtype4) {
                                                                          return function (dictNewtype5) {
                                                                              return function (dictNewtype6) {
                                                                                  return function (dictNewtype7) {
                                                                                      return function (dictLacks) {
                                                                                          return function (handleAction$prime) {
                                                                                              return function (handleEvent) {
                                                                                                  return function (action) {
                                                                                                      var sync = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                                                                                                          return "syncFormData";
                                                                                                      }))(Data_Symbol.SProxy.value)(Data_Unit.unit);
                                                                                                      return Data_Function.flip(Data_Variant.match()()())(action)({
                                                                                                          initialize: function (mbAction) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (dr) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (vr) {
                                                                                                                      var setFields = function (rec) {
                                                                                                                          return {
                                                                                                                              debounceRef: new Data_Maybe.Just(dr),
                                                                                                                              validationRef: new Data_Maybe.Just(vr),
                                                                                                                              allTouched: rec.allTouched,
                                                                                                                              initialInputs: rec.initialInputs,
                                                                                                                              validators: rec.validators
                                                                                                                          };
                                                                                                                      };
                                                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                          var $109 = {};
                                                                                                                          for (var $110 in st) {
                                                                                                                              if ({}.hasOwnProperty.call(st, $110)) {
                                                                                                                                  $109[$110] = st[$110];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $109.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(setFields)(st.internal);
                                                                                                                          return $109;
                                                                                                                      }))(function () {
                                                                                                                          return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(handleAction$prime)(mbAction);
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          syncFormData: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                  var errors = Formless_Internal_Transform.countErrors()(dictCountErrors)(dictNewtype2)(st.form);
                                                                                                                  var dirty = !Data_Eq.eq(Data_Eq.eqRec()(dictEqRecord))(Data_Newtype.unwrap(dictNewtype)(Formless_Internal_Transform.formFieldsToInputFields()(dictFormFieldsToInputFields)(dictNewtype)(dictNewtype2)(st.form)))(Data_Newtype.unwrap(dictNewtype)((Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).initialInputs));
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                                                                                                      var v1 = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).allTouched;
                                                                                                                      if (v1) {
                                                                                                                          return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                                                                                              var $114 = {};
                                                                                                                              for (var $115 in v2) {
                                                                                                                                  if ({}.hasOwnProperty.call(v2, $115)) {
                                                                                                                                      $114[$115] = v2[$115];
                                                                                                                                  };
                                                                                                                              };
                                                                                                                              $114.validity = (function () {
                                                                                                                                  var $113 = errors === 0;
                                                                                                                                  if ($113) {
                                                                                                                                      return Formless_Types_Component.Valid.value;
                                                                                                                                  };
                                                                                                                                  return Formless_Types_Component.Invalid.value;
                                                                                                                              })();
                                                                                                                              $114.errors = errors;
                                                                                                                              $114.dirty = dirty;
                                                                                                                              return $114;
                                                                                                                          });
                                                                                                                      };
                                                                                                                      var v2 = Formless_Internal_Transform.allTouched()(dictAllTouched)(dictNewtype2)(st.form);
                                                                                                                      if (v2) {
                                                                                                                          return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                                                                              var $119 = {};
                                                                                                                              for (var $120 in v3) {
                                                                                                                                  if ({}.hasOwnProperty.call(v3, $120)) {
                                                                                                                                      $119[$120] = v3[$120];
                                                                                                                                  };
                                                                                                                              };
                                                                                                                              $119.validity = (function () {
                                                                                                                                  var $118 = errors === 0;
                                                                                                                                  if ($118) {
                                                                                                                                      return Formless_Types_Component.Valid.value;
                                                                                                                                  };
                                                                                                                                  return Formless_Types_Component.Invalid.value;
                                                                                                                              })();
                                                                                                                              $119.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v4) {
                                                                                                                                  return {
                                                                                                                                      allTouched: true,
                                                                                                                                      debounceRef: v4.debounceRef,
                                                                                                                                      initialInputs: v4.initialInputs,
                                                                                                                                      validationRef: v4.validationRef,
                                                                                                                                      validators: v4.validators
                                                                                                                                  };
                                                                                                                              })(st.internal);
                                                                                                                              $119.errors = errors;
                                                                                                                              $119.dirty = dirty;
                                                                                                                              return $119;
                                                                                                                          });
                                                                                                                      };
                                                                                                                      return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                                                                          var $122 = {};
                                                                                                                          for (var $123 in v3) {
                                                                                                                              if ({}.hasOwnProperty.call(v3, $123)) {
                                                                                                                                  $122[$123] = v3[$123];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $122.validity = Formless_Types_Component.Incomplete.value;
                                                                                                                          $122.errors = errors;
                                                                                                                          $122.dirty = dirty;
                                                                                                                          return $122;
                                                                                                                      });
                                                                                                                  })())(function (newState) {
                                                                                                                      return handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()(newState)));
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          userAction: function (act) {
                                                                                                              return handleAction$prime(act);
                                                                                                          },
                                                                                                          modify: function (variant) {
                                                                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $125 = {};
                                                                                                                  for (var $126 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $126)) {
                                                                                                                          $125[$126] = st[$126];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $125.form = Formless_Internal_Transform.unsafeModifyInputVariant(dictNewtype6)(dictNewtype2)(Control_Category.identity(Control_Category.categoryFn))(variant)(st.form);
                                                                                                                  return $125;
                                                                                                              }))(function () {
                                                                                                                  return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                              });
                                                                                                          },
                                                                                                          validate: function (variant) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                  var validators = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).validators;
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(Formless_Internal_Transform.unsafeRunValidationVariant((dictMonadAff.MonadEffect0()).Monad0())(dictNewtype7)(dictNewtype2)(dictNewtype4)(variant)(validators)(st.form)))(function (form) {
                                                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                                                                                                          var $128 = {};
                                                                                                                          for (var $129 in v) {
                                                                                                                              if ({}.hasOwnProperty.call(v, $129)) {
                                                                                                                                  $128[$129] = v[$129];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $128.form = form;
                                                                                                                          return $128;
                                                                                                                      }))(function () {
                                                                                                                          return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          modifyValidate: function (v) {
                                                                                                              var validate = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                  var vs = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).validators;
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(Formless_Internal_Transform.unsafeRunValidationVariant((dictMonadAff.MonadEffect0()).Monad0())(dictNewtype7)(dictNewtype2)(dictNewtype4)(v.value1)(vs)(st.form)))(function (form) {
                                                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                                                                                          var $132 = {};
                                                                                                                          for (var $133 in v1) {
                                                                                                                              if ({}.hasOwnProperty.call(v1, $133)) {
                                                                                                                                  $132[$133] = v1[$133];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $132.form = form;
                                                                                                                          return $132;
                                                                                                                      }))(function () {
                                                                                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(form);
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                              var modifyWith = function (f) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
                                                                                                                      var $135 = {};
                                                                                                                      for (var $136 in s) {
                                                                                                                          if ({}.hasOwnProperty.call(s, $136)) {
                                                                                                                              $135[$136] = s[$136];
                                                                                                                          };
                                                                                                                      };
                                                                                                                      $135.form = Formless_Internal_Transform.unsafeModifyInputVariant(dictNewtype6)(dictNewtype2)(f)(v.value1)(s.form);
                                                                                                                      return $135;
                                                                                                                  }))(function (st) {
                                                                                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(st.form);
                                                                                                                  });
                                                                                                              };
                                                                                                              if (v.value0 instanceof Data_Maybe.Nothing) {
                                                                                                                  return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(modifyWith(Control_Category.identity(Control_Category.categoryFn)))(validate))(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync));
                                                                                                              };
                                                                                                              if (v.value0 instanceof Data_Maybe.Just) {
                                                                                                                  return Formless_Internal_Debounce.debounceForm(dictMonadAff)(v.value0.value0)(modifyWith(Control_Category.identity(Control_Category.categoryFn)))(Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(modifyWith(Data_Function["const"](Formless_Data_FormFieldResult.Validating.value)))(validate))(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync));
                                                                                                              };
                                                                                                              throw new Error("Failed pattern match at Formless.Component (line 263, column 7 - line 271, column 58): " + [ v.value0.constructor.name ]);
                                                                                                          },
                                                                                                          reset: function (variant) {
                                                                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $142 = {};
                                                                                                                  for (var $143 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $143)) {
                                                                                                                          $142[$143] = st[$143];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $142.form = Formless_Internal_Transform.unsafeModifyInputVariant(dictNewtype6)(dictNewtype2)(Control_Category.identity(Control_Category.categoryFn))(variant)(st.form);
                                                                                                                  $142.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v1) {
                                                                                                                      return {
                                                                                                                          allTouched: false,
                                                                                                                          debounceRef: v1.debounceRef,
                                                                                                                          initialInputs: v1.initialInputs,
                                                                                                                          validationRef: v1.validationRef,
                                                                                                                          validators: v1.validators
                                                                                                                      };
                                                                                                                  })(st.internal);
                                                                                                                  return $142;
                                                                                                              }))(function () {
                                                                                                                  return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                              });
                                                                                                          },
                                                                                                          setAll: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $146 = {};
                                                                                                                  for (var $147 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $147)) {
                                                                                                                          $146[$147] = st[$147];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $146.form = Formless_Internal_Transform.replaceFormFieldInputs()(dictReplaceFormFieldInputs)(dictNewtype)(dictNewtype2)(v.value0)(st.form);
                                                                                                                  return $146;
                                                                                                              }))(function ($$new) {
                                                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()($$new))))(function () {
                                                                                                                      if (v.value1) {
                                                                                                                          return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(Formless_Action.validateAll);
                                                                                                                      };
                                                                                                                      return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          modifyAll: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $153 = {};
                                                                                                                  for (var $154 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $154)) {
                                                                                                                          $153[$154] = st[$154];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $153.form = Formless_Internal_Transform.modifyAll()(dictModifyAll)(dictNewtype1)(dictNewtype2)(v.value0)(st.form);
                                                                                                                  return $153;
                                                                                                              }))(function ($$new) {
                                                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()($$new))))(function () {
                                                                                                                      if (v.value1) {
                                                                                                                          return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(Formless_Action.validateAll);
                                                                                                                      };
                                                                                                                      return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          validateAll: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(Formless_Internal_Transform.validateAll()((dictMonadAff.MonadEffect0()).Monad0())(dictValidateAll)(dictNewtype4)(dictNewtype2)((Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).validators)(st.form)))(function (form) {
                                                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                                                                                          var $159 = {};
                                                                                                                          for (var $160 in v1) {
                                                                                                                              if ({}.hasOwnProperty.call(v1, $160)) {
                                                                                                                                  $159[$160] = v1[$160];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $159.form = form;
                                                                                                                          return $159;
                                                                                                                      }))(function () {
                                                                                                                          return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          resetAll: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $162 = {};
                                                                                                                  for (var $163 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $163)) {
                                                                                                                          $162[$163] = st[$163];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $162.validity = Formless_Types_Component.Incomplete.value;
                                                                                                                  $162.dirty = false;
                                                                                                                  $162.errors = 0;
                                                                                                                  $162.submitAttempts = 0;
                                                                                                                  $162.submitting = false;
                                                                                                                  $162.form = Formless_Internal_Transform.replaceFormFieldInputs()(dictReplaceFormFieldInputs)(dictNewtype)(dictNewtype2)((Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).initialInputs)(st.form);
                                                                                                                  $162.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v2) {
                                                                                                                      return {
                                                                                                                          allTouched: false,
                                                                                                                          debounceRef: v2.debounceRef,
                                                                                                                          initialInputs: v2.initialInputs,
                                                                                                                          validationRef: v2.validationRef,
                                                                                                                          validators: v2.validators
                                                                                                                      };
                                                                                                                  })(st.internal);
                                                                                                                  return $162;
                                                                                                              }))(function ($$new) {
                                                                                                                  return handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()($$new)));
                                                                                                              });
                                                                                                          },
                                                                                                          submit: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.preSubmit(dictMonadAff)()(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(function () {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(Formless_Action.validateAll))(function () {
                                                                                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.submit(dictMonadAff)()(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function ($175) {
                                                                                                                          return handleEvent(Formless_Types_Component.Submitted.create($175));
                                                                                                                      }));
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          loadForm: function (formInputs) {
                                                                                                              var setFields = function (rec) {
                                                                                                                  return {
                                                                                                                      allTouched: false,
                                                                                                                      initialInputs: formInputs,
                                                                                                                      debounceRef: rec.debounceRef,
                                                                                                                      validationRef: rec.validationRef,
                                                                                                                      validators: rec.validators
                                                                                                                  };
                                                                                                              };
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                                                                                                      var $165 = {};
                                                                                                                      for (var $166 in v) {
                                                                                                                          if ({}.hasOwnProperty.call(v, $166)) {
                                                                                                                              $165[$166] = v[$166];
                                                                                                                          };
                                                                                                                      };
                                                                                                                      $165.validity = Formless_Types_Component.Incomplete.value;
                                                                                                                      $165.dirty = false;
                                                                                                                      $165.errors = 0;
                                                                                                                      $165.submitAttempts = 0;
                                                                                                                      $165.submitting = false;
                                                                                                                      $165.form = Formless_Internal_Transform.replaceFormFieldInputs()(dictReplaceFormFieldInputs)(dictNewtype)(dictNewtype2)(formInputs)(st.form);
                                                                                                                      $165.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(setFields)(st.internal);
                                                                                                                      return $165;
                                                                                                                  }))(function ($$new) {
                                                                                                                      return handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()($$new)));
                                                                                                                  });
                                                                                                              });
                                                                                                          }
                                                                                                      });
                                                                                                  };
                                                                                              };
                                                                                          };
                                                                                      };
                                                                                  };
                                                                              };
                                                                          };
                                                                      };
                                                                  };
                                                              };
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var handleQuery = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictRowToList1) {
              return function (dictEqRecord) {
                  return function (dictInputFieldsToFormFields) {
                      return function (dictFormFieldsToInputFields) {
                          return function (dictCountErrors) {
                              return function (dictAllTouched) {
                                  return function (dictSetFormFieldsTouched) {
                                      return function (dictReplaceFormFieldInputs) {
                                          return function (dictModifyAll) {
                                              return function (dictValidateAll) {
                                                  return function (dictFormFieldToMaybeOutput) {
                                                      return function (dictNewtype) {
                                                          return function (dictNewtype1) {
                                                              return function (dictNewtype2) {
                                                                  return function (dictNewtype3) {
                                                                      return function (dictNewtype4) {
                                                                          return function (dictNewtype5) {
                                                                              return function (dictNewtype6) {
                                                                                  return function (dictNewtype7) {
                                                                                      return function (dictLacks) {
                                                                                          return function (handleQuery$prime) {
                                                                                              return function (handleEvent) {
                                                                                                  return Data_Functor_Variant.match()()()({
                                                                                                      query: function (v) {
                                                                                                          if (v instanceof Formless_Types_Component.SubmitReply) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.preSubmit(dictMonadAff)()(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(function () {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)))(handleEvent)(Formless_Action.validateAll))(function () {
                                                                                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.submit(dictMonadAff)()(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(function (mbForm) {
                                                                                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Just.create(v.value0(mbForm)));
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                          };
                                                                                                          if (v instanceof Formless_Types_Component.SendQuery) {
                                                                                                              return Halogen_Query_HalogenM.HalogenM(Control_Monad_Free.liftF(new Halogen_Query_HalogenM.ChildQuery(v.value0)));
                                                                                                          };
                                                                                                          if (v instanceof Formless_Types_Component.AsQuery) {
                                                                                                              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)))(handleEvent)(Data_Variant.expand()(v.value0)));
                                                                                                          };
                                                                                                          throw new Error("Failed pattern match at Formless.Component (line 368, column 12 - line 382, column 44): " + [ v.constructor.name ]);
                                                                                                      },
                                                                                                      userQuery: function (q) {
                                                                                                          return handleQuery$prime(q);
                                                                                                      }
                                                                                                  });
                                                                                              };
                                                                                          };
                                                                                      };
                                                                                  };
                                                                              };
                                                                          };
                                                                      };
                                                                  };
                                                              };
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var defaultSpec = {
      render: Data_Function["const"](Halogen_HTML_Core.text(Data_Monoid.mempty(Data_Monoid.monoidString))),
      handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
      handleEvent: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      receive: Data_Function["const"](Data_Maybe.Nothing.value),
      initialize: Data_Maybe.Nothing.value,
      finalize: Data_Maybe.Nothing.value
  };
  var component = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictRowToList1) {
              return function (dictEqRecord) {
                  return function (dictInputFieldsToFormFields) {
                      return function (dictFormFieldsToInputFields) {
                          return function (dictCountErrors) {
                              return function (dictAllTouched) {
                                  return function (dictSetFormFieldsTouched) {
                                      return function (dictReplaceFormFieldInputs) {
                                          return function (dictModifyAll) {
                                              return function (dictValidateAll) {
                                                  return function (dictFormFieldToMaybeOutput) {
                                                      return function (dictMakeInputFieldsFromRow) {
                                                          return function (dictNewtype) {
                                                              return function (dictNewtype1) {
                                                                  return function (dictNewtype2) {
                                                                      return function (dictNewtype3) {
                                                                          return function (dictNewtype4) {
                                                                              return function (dictNewtype5) {
                                                                                  return function (dictNewtype6) {
                                                                                      return function (dictNewtype7) {
                                                                                          return function (dictLacks) {
                                                                                              return function (dictLacks1) {
                                                                                                  return function (dictLacks2) {
                                                                                                      return function (dictLacks3) {
                                                                                                          return function (dictLacks4) {
                                                                                                              return function (dictLacks5) {
                                                                                                                  return function (dictLacks6) {
                                                                                                                      return function (dictLacks7) {
                                                                                                                          return function (dictLacks8) {
                                                                                                                              return function (mkInput) {
                                                                                                                                  return function (spec) {
                                                                                                                                      var initialState = function (input) {
                                                                                                                                          var initialInputs = (function () {
                                                                                                                                              if (input.initialInputs instanceof Data_Maybe.Nothing) {
                                                                                                                                                  return Formless_Transform_Row.mkInputFields()(dictNewtype)(dictMakeInputFieldsFromRow)(Formless_Types_Form.FormProxy.value);
                                                                                                                                              };
                                                                                                                                              if (input.initialInputs instanceof Data_Maybe.Just) {
                                                                                                                                                  return input.initialInputs.value0;
                                                                                                                                              };
                                                                                                                                              throw new Error("Failed pattern match at Formless.Component (line 138, column 21 - line 140, column 28): " + [ input.initialInputs.constructor.name ]);
                                                                                                                                          })();
                                                                                                                                          var internalState = {
                                                                                                                                              allTouched: false,
                                                                                                                                              initialInputs: initialInputs,
                                                                                                                                              validators: input.validators,
                                                                                                                                              debounceRef: Data_Maybe.Nothing.value,
                                                                                                                                              validationRef: Data_Maybe.Nothing.value
                                                                                                                                          };
                                                                                                                                          var initialForm = Formless_Internal_Transform.inputFieldsToFormFields()(dictInputFieldsToFormFields)(dictNewtype)(dictNewtype2)(initialInputs);
                                                                                                                                          var pipeline = Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder["delete"](new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "validators";
                                                                                                                                          }))()()(Data_Symbol.SProxy.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder["delete"](new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "initialInputs";
                                                                                                                                          }))()()(Data_Symbol.SProxy.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "validity";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(Formless_Types_Component.Incomplete.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "dirty";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(false))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "errors";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(0))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "submitAttempts";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(0))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "submitting";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(false))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "form";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(initialForm))(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "internal";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(internalState)))))))));
                                                                                                                                          return Record_Builder.build(pipeline)(input);
                                                                                                                                      };
                                                                                                                                      return Halogen_Component.mkComponent({
                                                                                                                                          initialState: function ($176) {
                                                                                                                                              return initialState(mkInput($176));
                                                                                                                                          },
                                                                                                                                          render: (function () {
                                                                                                                                              var $177 = Formless_Internal_Component.getPublicState();
                                                                                                                                              return function ($178) {
                                                                                                                                                  return spec.render($177($178));
                                                                                                                                              };
                                                                                                                                          })(),
                                                                                                                                          "eval": Halogen_Component.mkEval({
                                                                                                                                              handleQuery: function (q) {
                                                                                                                                                  return handleQuery(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(spec.handleQuery)(spec.handleEvent)(q);
                                                                                                                                              },
                                                                                                                                              handleAction: function (act) {
                                                                                                                                                  return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(spec.handleAction)(spec.handleEvent)(act);
                                                                                                                                              },
                                                                                                                                              initialize: new Data_Maybe.Just(Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                                                                                                                                                  return "initialize";
                                                                                                                                              }))(Data_Symbol.SProxy.value)(spec.initialize)),
                                                                                                                                              receive: Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Formless_Action.injAction))(spec.receive),
                                                                                                                                              finalize: Data_Functor.map(Data_Maybe.functorMaybe)(Formless_Action.injAction)(spec.finalize)
                                                                                                                                          })
                                                                                                                                      });
                                                                                                                                  };
                                                                                                                              };
                                                                                                                          };
                                                                                                                      };
                                                                                                                  };
                                                                                                              };
                                                                                                          };
                                                                                                      };
                                                                                                  };
                                                                                              };
                                                                                          };
                                                                                      };
                                                                                  };
                                                                              };
                                                                          };
                                                                      };
                                                                  };
                                                              };
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["defaultSpec"] = defaultSpec;
  exports["component"] = component;
  exports["handleAction"] = handleAction;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Lens.Internal.Forget"] = $PS["Data.Lens.Internal.Forget"] || {};
  var exports = $PS["Data.Lens.Internal.Forget"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Forget = function (x) {
      return x;
  };
  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
      return function (v) {
          return function (v1) {
              return function ($27) {
                  return v1(f($27));
              };
          };
      };
  });
  var strongForget = new Data_Profunctor_Strong.Strong(function () {
      return profunctorForget;
  }, function (v) {
      return function ($28) {
          return v(Data_Tuple.fst($28));
      };
  }, function (v) {
      return function ($29) {
          return v(Data_Tuple.snd($29));
      };
  });
  var newtypeForget = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Forget);
  exports["newtypeForget"] = newtypeForget;
  exports["strongForget"] = strongForget;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Lens.Getter"] = $PS["Data.Lens.Getter"] || {};
  var exports = $PS["Data.Lens.Getter"];
  var Control_Category = $PS["Control.Category"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Newtype = $PS["Data.Newtype"];                                    
  var view = function (l) {
      return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.identity(Control_Category.categoryFn)));
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Lens.Iso"] = $PS["Data.Lens.Iso"] || {};
  var exports = $PS["Data.Lens.Iso"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var iso = function (f) {
      return function (g) {
          return function (dictProfunctor) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
              };
          };
      };
  };
  exports["iso"] = iso;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Lens.Iso.Newtype"] = $PS["Data.Lens.Iso.Newtype"] || {};
  var exports = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var _Newtype = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (dictProfunctor) {
              return Data_Lens_Iso.iso(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype1))(dictProfunctor);
          };
      };
  };
  exports["_Newtype"] = _Newtype;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Lens.Lens"] = $PS["Data.Lens.Lens"] || {};
  var exports = $PS["Data.Lens.Lens"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (dictStrong) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(dictStrong);
          };
      };
  };
  exports["lens"] = lens;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Lens.Record"] = $PS["Data.Lens.Record"] || {};
  var exports = $PS["Data.Lens.Record"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Record = $PS["Record"];                
  var prop = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (dictStrong) {
                      return Data_Lens_Lens.lens(Record.get(dictIsSymbol)()(l))(Data_Function.flip(Record.set(dictIsSymbol)()()(l)))(dictStrong);
                  };
              };
          };
      };
  };
  exports["prop"] = prop;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Retrieve"] = $PS["Formless.Retrieve"] || {};
  var exports = $PS["Formless.Retrieve"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso_Newtype = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Record = $PS["Data.Lens.Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var _Field = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      var $94 = Data_Lens_Iso_Newtype["_Newtype"](dictNewtype)(dictNewtype)(dictStrong.Profunctor0());
                      var $95 = Data_Lens_Record.prop(dictIsSymbol)()()(sym)(dictStrong);
                      var $96 = Data_Lens_Iso_Newtype["_Newtype"](Formless_Types_Form.newtypeFormField)(Formless_Types_Form.newtypeFormField)(dictStrong.Profunctor0());
                      return function ($97) {
                          return $94($95($96($97)));
                      };
                  };
              };
          };
      };
  };
  var _FieldInput = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      var $98 = _Field(dictIsSymbol)(dictNewtype)()(sym)(dictStrong);
                      var $99 = Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
                          return "input";
                      }))()()(Data_Symbol.SProxy.value)(dictStrong);
                      return function ($100) {
                          return $98($99($100));
                      };
                  };
              };
          };
      };
  };
  var getInput = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return Data_Lens_Getter.view(_FieldInput(dictIsSymbol)(dictNewtype)()(sym)(Data_Lens_Internal_Forget.strongForget));
              };
          };
      };
  };
  var _FieldResult = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      var $101 = _Field(dictIsSymbol)(dictNewtype)()(sym)(dictStrong);
                      var $102 = Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
                          return "result";
                      }))()()(Data_Symbol.SProxy.value)(dictStrong);
                      return function ($103) {
                          return $101($102($103));
                      };
                  };
              };
          };
      };
  };
  var getResult = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return Data_Lens_Getter.view(_FieldResult(dictIsSymbol)(dictNewtype)()(sym)(Data_Lens_Internal_Forget.strongForget));
              };
          };
      };
  };
  exports["getInput"] = getInput;
  exports["getResult"] = getResult;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Heterogeneous.Mapping"] = $PS["Heterogeneous.Mapping"] || {};
  var exports = $PS["Heterogeneous.Mapping"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var ConstMapping = function (x) {
      return x;
  };
  var MappingWithIndex = function (mappingWithIndex) {
      this.mappingWithIndex = mappingWithIndex;
  };
  var Mapping = function (mapping) {
      this.mapping = mapping;
  };
  var MapRecordWithIndex = function (mapRecordWithIndexBuilder) {
      this.mapRecordWithIndexBuilder = mapRecordWithIndexBuilder;
  };
  var HMap = function (hmap) {
      this.hmap = hmap;
  };
  var mappingWithIndex = function (dict) {
      return dict.mappingWithIndex;
  }; 
  var mapping = function (dict) {
      return dict.mapping;
  };
  var mapRecordWithIndexNil = new MapRecordWithIndex(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var mapRecordWithIndexBuilder = function (dict) {
      return dict.mapRecordWithIndexBuilder;
  };
  var mapRecordWithIndexCons = function (dictIsSymbol) {
      return function (dictMappingWithIndex) {
          return function (dictMapRecordWithIndex) {
              return function (dictCons) {
                  return function (dictCons1) {
                      return new MapRecordWithIndex(function (v) {
                          return function (f) {
                              return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.modify()()(dictIsSymbol)(Data_Symbol.SProxy.value)(mappingWithIndex(dictMappingWithIndex)(f)(Data_Symbol.SProxy.value)))(mapRecordWithIndexBuilder(dictMapRecordWithIndex)(Type_Data_RowList.RLProxy.value)(f));
                          };
                      });
                  };
              };
          };
      };
  };
  var hmapRecord = function (dictRowToList) {
      return function (dictMapRecordWithIndex) {
          return new HMap((function () {
              var $77 = mapRecordWithIndexBuilder(dictMapRecordWithIndex)(Type_Data_RowList.RLProxy.value);
              return function ($78) {
                  return Record_Builder.build($77(ConstMapping($78)));
              };
          })());
      };
  };
  var hmap = function (dict) {
      return dict.hmap;
  };
  var constMapping = function (dictMapping) {
      return new MappingWithIndex(function (v) {
          return function (v1) {
              return mapping(dictMapping)(v);
          };
      });
  };
  exports["hmap"] = hmap;
  exports["Mapping"] = Mapping;
  exports["constMapping"] = constMapping;
  exports["hmapRecord"] = hmapRecord;
  exports["mapRecordWithIndexCons"] = mapRecordWithIndexCons;
  exports["mapRecordWithIndexNil"] = mapRecordWithIndexNil;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Formless.Transform.Record"] = $PS["Formless.Transform.Record"] || {};
  var exports = $PS["Formless.Transform.Record"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];                
  var WrapField = (function () {
      function WrapField() {

      };
      WrapField.value = new WrapField();
      return WrapField;
  })();
  var UnwrapField = (function () {
      function UnwrapField() {

      };
      UnwrapField.value = new UnwrapField();
      return UnwrapField;
  })();
  var wrapRecord = function (dictHMap) {
      return Heterogeneous_Mapping.hmap(dictHMap)(WrapField.value);
  };
  var wrapInputFields = function (dictNewtype) {
      return function (dictHMap) {
          var $17 = Data_Newtype.wrap(dictNewtype);
          var $18 = wrapRecord(dictHMap);
          return function ($19) {
              return $17($18($19));
          };
      };
  };
  var wrapField = function (dictNewtype) {
      return new Heterogeneous_Mapping.Mapping(function (v) {
          return Data_Newtype.wrap(dictNewtype);
      });
  };
  var unwrapRecord = function (dictHMap) {
      return Heterogeneous_Mapping.hmap(dictHMap)(UnwrapField.value);
  };
  var unwrapOutputFields = function (dictNewtype) {
      return function (dictHMap) {
          var $20 = unwrapRecord(dictHMap);
          var $21 = Data_Newtype.unwrap(dictNewtype);
          return function ($22) {
              return $20($21($22));
          };
      };
  };
  var unwrapField = function (dictNewtype) {
      return new Heterogeneous_Mapping.Mapping(function (v) {
          return Data_Newtype.unwrap(dictNewtype);
      });
  };
  exports["unwrapOutputFields"] = unwrapOutputFields;
  exports["wrapInputFields"] = wrapInputFields;
  exports["unwrapField"] = unwrapField;
  exports["wrapField"] = wrapField;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Array.NonEmpty"] = $PS["Data.Array.NonEmpty"] || {};
  var exports = $PS["Data.Array.NonEmpty"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];         
  var unsafeFromArray = Unsafe_Coerce.unsafeCoerce;
  var toArray = Unsafe_Coerce.unsafeCoerce;
  var fromArray = function (xs) {
      if (Data_Array.length(xs) > 0) {
          return new Data_Maybe.Just(unsafeFromArray(xs));
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Array.NonEmpty (line 134, column 1 - line 134, column 58): " + [ xs.constructor.name ]);
  };
  var adaptMaybe = function (f) {
      var $64 = Data_Maybe.fromJust();
      return function ($65) {
          return $64(f(toArray($65)));
      };
  };                                     
  var init = adaptMaybe(Data_Array.init);
  var last = adaptMaybe(Data_Array.last);    
  var adaptAny = function (f) {
      return function ($67) {
          return f(toArray($67));
      };
  };                                     
  var length = adaptAny(Data_Array.length);
  var unsafeAdapt = function (f) {
      var $68 = adaptAny(f);
      return function ($69) {
          return unsafeFromArray($68($69));
      };
  };
  var reverse = unsafeAdapt(Data_Array.reverse);
  exports["fromArray"] = fromArray;
  exports["last"] = last;
  exports["init"] = init;
  exports["reverse"] = reverse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Array.NonEmpty.Internal"] = $PS["Data.Array.NonEmpty.Internal"] || {};
  var exports = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];                                          
  var foldableNonEmptyArray = Data_Foldable.foldableArray;
  var eqNonEmptyArray = function (dictEq) {
      return Data_Eq.eqArray(dictEq);
  };
  exports["eqNonEmptyArray"] = eqNonEmptyArray;
  exports["foldableNonEmptyArray"] = foldableNonEmptyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep.Bounded"] = $PS["Data.Generic.Rep.Bounded"] || {};
  var exports = $PS["Data.Generic.Rep.Bounded"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];                
  var GenericTop = function (genericTop$prime) {
      this["genericTop'"] = genericTop$prime;
  };
  var GenericBottom = function (genericBottom$prime) {
      this["genericBottom'"] = genericBottom$prime;
  };
  var genericTopNoArguments = new GenericTop(Data_Generic_Rep.NoArguments.value);
  var genericTop$prime = function (dict) {
      return dict["genericTop'"];
  };
  var genericTopConstructor = function (dictGenericTop) {
      return new GenericTop(genericTop$prime(dictGenericTop));
  };
  var genericTopSum = function (dictGenericTop) {
      return new GenericTop(new Data_Generic_Rep.Inr(genericTop$prime(dictGenericTop)));
  };
  var genericTop = function (dictGeneric) {
      return function (dictGenericTop) {
          return Data_Generic_Rep.to(dictGeneric)(genericTop$prime(dictGenericTop));
      };
  };
  var genericBottomNoArguments = new GenericBottom(Data_Generic_Rep.NoArguments.value);
  var genericBottom$prime = function (dict) {
      return dict["genericBottom'"];
  };
  var genericBottomConstructor = function (dictGenericBottom) {
      return new GenericBottom(genericBottom$prime(dictGenericBottom));
  };
  var genericBottomSum = function (dictGenericBottom) {
      return new GenericBottom(new Data_Generic_Rep.Inl(genericBottom$prime(dictGenericBottom)));
  };
  var genericBottom = function (dictGeneric) {
      return function (dictGenericBottom) {
          return Data_Generic_Rep.to(dictGeneric)(genericBottom$prime(dictGenericBottom));
      };
  };
  exports["genericBottom'"] = genericBottom$prime;
  exports["genericBottom"] = genericBottom;
  exports["genericTop'"] = genericTop$prime;
  exports["genericTop"] = genericTop;
  exports["genericBottomNoArguments"] = genericBottomNoArguments;
  exports["genericBottomSum"] = genericBottomSum;
  exports["genericBottomConstructor"] = genericBottomConstructor;
  exports["genericTopNoArguments"] = genericTopNoArguments;
  exports["genericTopSum"] = genericTopSum;
  exports["genericTopConstructor"] = genericTopConstructor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep.Enum"] = $PS["Data.Generic.Rep.Enum"] || {};
  var exports = $PS["Data.Generic.Rep.Enum"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Bounded = $PS["Data.Generic.Rep.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var GenericEnum = function (genericPred$prime, genericSucc$prime) {
      this["genericPred'"] = genericPred$prime;
      this["genericSucc'"] = genericSucc$prime;
  };
  var GenericBoundedEnum = function (genericCardinality$prime, genericFromEnum$prime, genericToEnum$prime) {
      this["genericCardinality'"] = genericCardinality$prime;
      this["genericFromEnum'"] = genericFromEnum$prime;
      this["genericToEnum'"] = genericToEnum$prime;
  };
  var genericToEnum$prime = function (dict) {
      return dict["genericToEnum'"];
  };
  var genericToEnum = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          var $90 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric));
          var $91 = genericToEnum$prime(dictGenericBoundedEnum);
          return function ($92) {
              return $90($91($92));
          };
      };
  };
  var genericSucc$prime = function (dict) {
      return dict["genericSucc'"];
  };
  var genericSucc = function (dictGeneric) {
      return function (dictGenericEnum) {
          var $93 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric));
          var $94 = genericSucc$prime(dictGenericEnum);
          var $95 = Data_Generic_Rep.from(dictGeneric);
          return function ($96) {
              return $93($94($95($96)));
          };
      };
  };
  var genericPred$prime = function (dict) {
      return dict["genericPred'"];
  };
  var genericPred = function (dictGeneric) {
      return function (dictGenericEnum) {
          var $97 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric));
          var $98 = genericPred$prime(dictGenericEnum);
          var $99 = Data_Generic_Rep.from(dictGeneric);
          return function ($100) {
              return $97($98($99($100)));
          };
      };
  };
  var genericFromEnum$prime = function (dict) {
      return dict["genericFromEnum'"];
  };
  var genericFromEnum = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          var $101 = genericFromEnum$prime(dictGenericBoundedEnum);
          var $102 = Data_Generic_Rep.from(dictGeneric);
          return function ($103) {
              return $101($102($103));
          };
      };
  };
  var genericEnumSum = function (dictGenericEnum) {
      return function (dictGenericTop) {
          return function (dictGenericEnum1) {
              return function (dictGenericBottom) {
                  return new GenericEnum(function (v) {
                      if (v instanceof Data_Generic_Rep.Inl) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inl.create)(genericPred$prime(dictGenericEnum)(v.value0));
                      };
                      if (v instanceof Data_Generic_Rep.Inr) {
                          var v1 = genericPred$prime(dictGenericEnum1)(v.value0);
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return new Data_Maybe.Just(new Data_Generic_Rep.Inl(Data_Generic_Rep_Bounded["genericTop'"](dictGenericTop)));
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return new Data_Maybe.Just(new Data_Generic_Rep.Inr(v1.value0));
                          };
                          throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 30, column 14 - line 32, column 31): " + [ v1.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 28, column 18 - line 32, column 31): " + [ v.constructor.name ]);
                  }, function (v) {
                      if (v instanceof Data_Generic_Rep.Inl) {
                          var v1 = genericSucc$prime(dictGenericEnum)(v.value0);
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return new Data_Maybe.Just(new Data_Generic_Rep.Inr(Data_Generic_Rep_Bounded["genericBottom'"](dictGenericBottom)));
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return new Data_Maybe.Just(new Data_Generic_Rep.Inl(v1.value0));
                          };
                          throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 34, column 14 - line 36, column 31): " + [ v1.constructor.name ]);
                      };
                      if (v instanceof Data_Generic_Rep.Inr) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inr.create)(genericSucc$prime(dictGenericEnum1)(v.value0));
                      };
                      throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 33, column 18 - line 37, column 36): " + [ v.constructor.name ]);
                  });
              };
          };
      };
  };
  var genericEnumNoArguments = new GenericEnum(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (v) {
      return Data_Maybe.Nothing.value;
  });
  var genericEnumConstructor = function (dictGenericEnum) {
      return new GenericEnum(function (v) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Constructor)(genericPred$prime(dictGenericEnum)(v));
      }, function (v) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Constructor)(genericSucc$prime(dictGenericEnum)(v));
      });
  };
  var genericCardinality$prime = function (dict) {
      return dict["genericCardinality'"];
  };
  var genericCardinality = function (dictGeneric) {
      return function (dictGenericBoundedEnum) {
          return Data_Newtype.unwrap(Data_Enum.newtypeCardinality)(genericCardinality$prime(dictGenericBoundedEnum));
      };
  };
  var genericBoundedEnumSum = function (dictGenericBoundedEnum) {
      return function (dictGenericBoundedEnum1) {
          return new GenericBoundedEnum(Data_Enum.Cardinality(Data_Newtype.unwrap(Data_Enum.newtypeCardinality)(genericCardinality$prime(dictGenericBoundedEnum)) + Data_Newtype.unwrap(Data_Enum.newtypeCardinality)(genericCardinality$prime(dictGenericBoundedEnum1)) | 0), function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericFromEnum$prime(dictGenericBoundedEnum)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericFromEnum$prime(dictGenericBoundedEnum1)(v.value0) + Data_Newtype.unwrap(Data_Enum.newtypeCardinality)(genericCardinality$prime(dictGenericBoundedEnum)) | 0;
              };
              throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 87, column 22 - line 89, column 80): " + [ v.constructor.name ]);
          }, function (n) {
              var to = function (v) {
                  if (n >= 0 && n < v) {
                      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inl.create)(genericToEnum$prime(dictGenericBoundedEnum)(n));
                  };
                  if (Data_Boolean.otherwise) {
                      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inr.create)(genericToEnum$prime(dictGenericBoundedEnum1)(n - v | 0));
                  };
                  throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 83, column 5 - line 83, column 43): " + [ v.constructor.name ]);
              };
              return to(genericCardinality$prime(dictGenericBoundedEnum));
          });
      };
  };
  var genericBoundedEnumNoArguments = new GenericBoundedEnum(1, function (v) {
      return 0;
  }, function (i) {
      var $87 = i === 0;
      if ($87) {
          return new Data_Maybe.Just(Data_Generic_Rep.NoArguments.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var genericBoundedEnumConstructor = function (dictGenericBoundedEnum) {
      return new GenericBoundedEnum(Data_Newtype.unwrap(Data_Enum.newtypeCardinality)(genericCardinality$prime(dictGenericBoundedEnum)), function (v) {
          return genericFromEnum$prime(dictGenericBoundedEnum)(v);
      }, function (i) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Constructor)(genericToEnum$prime(dictGenericBoundedEnum)(i));
      });
  };
  exports["genericPred"] = genericPred;
  exports["genericSucc"] = genericSucc;
  exports["genericCardinality"] = genericCardinality;
  exports["genericToEnum"] = genericToEnum;
  exports["genericFromEnum"] = genericFromEnum;
  exports["genericEnumNoArguments"] = genericEnumNoArguments;
  exports["genericEnumConstructor"] = genericEnumConstructor;
  exports["genericEnumSum"] = genericEnumSum;
  exports["genericBoundedEnumNoArguments"] = genericBoundedEnumNoArguments;
  exports["genericBoundedEnumConstructor"] = genericBoundedEnumConstructor;
  exports["genericBoundedEnumSum"] = genericBoundedEnumSum;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep.Show"] = $PS["Data.Generic.Rep.Show"] || {};
  var exports = $PS["Data.Generic.Rep.Show"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];                
  var GenericShowArgs = function (genericShowArgs) {
      this.genericShowArgs = genericShowArgs;
  };
  var GenericShow = function (genericShow$prime) {
      this["genericShow'"] = genericShow$prime;
  };
  var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
      return [  ];
  });
  var genericShowArgsArgument = function (dictShow) {
      return new GenericShowArgs(function (v) {
          return [ Data_Show.show(dictShow)(v) ];
      });
  };
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return new GenericShow(function (v) {
              var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var v1 = genericShowArgs(dictGenericShowArgs)(v);
              if (v1.length === 0) {
                  return ctor;
              };
              return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
          });
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  }; 
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return new GenericShow(function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericShow$prime(dictGenericShow)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericShow$prime(dictGenericShow1)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Generic.Rep.Show (line 26, column 1 - line 28, column 40): " + [ v.constructor.name ]);
          });
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["genericShow"] = genericShow;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowConstructor"] = genericShowConstructor;
  exports["genericShowArgsArgument"] = genericShowArgsArgument;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["InfraredRemote.Types"] = $PS["InfraredRemote.Types"] || {};
  var exports = $PS["InfraredRemote.Types"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var MsbFirst = function (x) {
      return x;
  };
  var LsbFirst = function (x) {
      return x;
  };
  var Negate = (function () {
      function Negate() {

      };
      Negate.value = new Negate();
      return Negate;
  })();
  var Assert = (function () {
      function Assert() {

      };
      Assert.value = new Assert();
      return Assert;
  })();
  var FormatUnknown = (function () {
      function FormatUnknown(value0) {
          this.value0 = value0;
      };
      FormatUnknown.create = function (value0) {
          return new FormatUnknown(value0);
      };
      return FormatUnknown;
  })();
  var FormatAEHA = (function () {
      function FormatAEHA(value0) {
          this.value0 = value0;
      };
      FormatAEHA.create = function (value0) {
          return new FormatAEHA(value0);
      };
      return FormatAEHA;
  })();
  var FormatNEC = (function () {
      function FormatNEC(value0) {
          this.value0 = value0;
      };
      FormatNEC.create = function (value0) {
          return new FormatNEC(value0);
      };
      return FormatNEC;
  })();
  var FormatSIRC = (function () {
      function FormatSIRC(value0) {
          this.value0 = value0;
      };
      FormatSIRC.create = function (value0) {
          return new FormatSIRC(value0);
      };
      return FormatSIRC;
  })();
  var toMsbFirst = function (bits) {
      var f = function (acc) {
          return function (v) {
              if (v instanceof Assert) {
                  return (acc * 2 | 0) + 1 | 0;
              };
              if (v instanceof Negate) {
                  return (acc * 2 | 0) + 0 | 0;
              };
              throw new Error("Failed pattern match at InfraredRemote.Types (line 140, column 3 - line 140, column 25): " + [ acc.constructor.name, v.constructor.name ]);
          };
      };
      return Data_Foldable.foldl(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(f)(0)(bits);
  };
  var toLsbFirst = function (bits) {
      var f = function (acc) {
          return function (v) {
              if (v instanceof Assert) {
                  return (acc * 2 | 0) + 1 | 0;
              };
              if (v instanceof Negate) {
                  return (acc * 2 | 0) + 0 | 0;
              };
              throw new Error("Failed pattern match at InfraredRemote.Types (line 113, column 3 - line 113, column 25): " + [ acc.constructor.name, v.constructor.name ]);
          };
      };
      return Data_Foldable.foldl(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(f)(0)(Data_Array_NonEmpty.reverse(bits));
  }; 
  var showCelsius = Data_Show.showInt;
  var showBit = function (v) {
      if (v instanceof Negate) {
          return "0";
      };
      if (v instanceof Assert) {
          return "1";
      };
      throw new Error("Failed pattern match at InfraredRemote.Types (line 60, column 1 - line 60, column 25): " + [ v.constructor.name ]);
  };
  var showBit$prime = new Data_Show.Show(showBit);
  var newtypeMsbFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MsbFirst);
  var newtypeLsbFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, LsbFirst);
  var fromBoolean = function (v) {
      if (!v) {
          return Negate.value;
      };
      if (v) {
          return Assert.value;
      };
      throw new Error("Failed pattern match at InfraredRemote.Types (line 65, column 1 - line 65, column 30): " + [ v.constructor.name ]);
  };
  var fromBinaryString = function (input) {
      var f = function (v) {
          if (v === "0") {
              return new Data_Maybe.Just(Negate.value);
          };
          if (v === "1") {
              return new Data_Maybe.Just(Assert.value);
          };
          return Data_Maybe.Nothing.value;
      };
      var xs = Data_Functor.map(Data_Functor.functorArray)(f)(Data_String_CodeUnits.toCharArray(input));
      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Maybe.isJust)(xs)))(function () {
          return Data_Array_NonEmpty.fromArray(Data_Array.catMaybes(xs));
      });
  };                            
  var eqBit = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Negate && y instanceof Negate) {
              return true;
          };
          if (x instanceof Assert && y instanceof Assert) {
              return true;
          };
          return false;
      };
  });
  var eqInfraredCodeFrame = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof FormatUnknown && y instanceof FormatUnknown) {
              return Data_Eq.eq(Data_Eq.eqArray(eqBit))(x.value0)(y.value0);
          };
          if (x instanceof FormatAEHA && y instanceof FormatAEHA) {
              return Data_Eq.eq(Data_Eq.eqArray(Data_Array_NonEmpty_Internal.eqNonEmptyArray(eqBit)))(x.value0.octets)(y.value0.octets) && Data_Eq.eq(eqBit)(x.value0.stop)(y.value0.stop);
          };
          if (x instanceof FormatNEC && y instanceof FormatNEC) {
              return Data_Eq.eq(Data_Array_NonEmpty_Internal.eqNonEmptyArray(eqBit))(x.value0.custom0)(y.value0.custom0) && Data_Eq.eq(Data_Array_NonEmpty_Internal.eqNonEmptyArray(eqBit))(x.value0.custom1)(y.value0.custom1) && Data_Eq.eq(Data_Array_NonEmpty_Internal.eqNonEmptyArray(eqBit))(x.value0.data0)(y.value0.data0) && Data_Eq.eq(Data_Array_NonEmpty_Internal.eqNonEmptyArray(eqBit))(x.value0.data1)(y.value0.data1) && Data_Eq.eq(eqBit)(x.value0.stop)(y.value0.stop);
          };
          if (x instanceof FormatSIRC && y instanceof FormatSIRC) {
              return Data_Eq.eq(Data_Array_NonEmpty_Internal.eqNonEmptyArray(eqBit))(x.value0.address)(y.value0.address) && Data_Eq.eq(Data_Array_NonEmpty_Internal.eqNonEmptyArray(eqBit))(x.value0.command)(y.value0.command);
          };
          return false;
      };
  });
  exports["Negate"] = Negate;
  exports["Assert"] = Assert;
  exports["FormatUnknown"] = FormatUnknown;
  exports["FormatAEHA"] = FormatAEHA;
  exports["FormatNEC"] = FormatNEC;
  exports["FormatSIRC"] = FormatSIRC;
  exports["fromBinaryString"] = fromBinaryString;
  exports["fromBoolean"] = fromBoolean;
  exports["toLsbFirst"] = toLsbFirst;
  exports["toMsbFirst"] = toMsbFirst;
  exports["eqBit"] = eqBit;
  exports["showBit'"] = showBit$prime;
  exports["newtypeLsbFirst"] = newtypeLsbFirst;
  exports["newtypeMsbFirst"] = newtypeMsbFirst;
  exports["eqInfraredCodeFrame"] = eqInfraredCodeFrame;
  exports["showCelsius"] = showCelsius;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["InfraredRemote.HitachiHvac"] = $PS["InfraredRemote.HitachiHvac"] || {};
  var exports = $PS["InfraredRemote.HitachiHvac"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Bounded = $PS["Data.Generic.Rep.Bounded"];
  var Data_Generic_Rep_Enum = $PS["Data.Generic.Rep.Enum"];
  var Data_Generic_Rep_Show = $PS["Data.Generic.Rep.Show"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var InfraredRemote_Types = $PS["InfraredRemote.Types"];
  var MCool = (function () {
      function MCool() {

      };
      MCool.value = new MCool();
      return MCool;
  })();
  var MDryCool = (function () {
      function MDryCool() {

      };
      MDryCool.value = new MDryCool();
      return MDryCool;
  })();
  var MDehumidify = (function () {
      function MDehumidify() {

      };
      MDehumidify.value = new MDehumidify();
      return MDehumidify;
  })();
  var MHeat = (function () {
      function MHeat() {

      };
      MHeat.value = new MHeat();
      return MHeat;
  })();
  var MAutomatic = (function () {
      function MAutomatic() {

      };
      MAutomatic.value = new MAutomatic();
      return MAutomatic;
  })();
  var MAutoDehumidifying = (function () {
      function MAutoDehumidifying() {

      };
      MAutoDehumidifying.value = new MAutoDehumidifying();
      return MAutoDehumidifying;
  })();
  var MQuickLaundry = (function () {
      function MQuickLaundry() {

      };
      MQuickLaundry.value = new MQuickLaundry();
      return MQuickLaundry;
  })();
  var MCondensationControl = (function () {
      function MCondensationControl() {

      };
      MCondensationControl.value = new MCondensationControl();
      return MCondensationControl;
  })();
  var FSilent = (function () {
      function FSilent() {

      };
      FSilent.value = new FSilent();
      return FSilent;
  })();
  var FLow = (function () {
      function FLow() {

      };
      FLow.value = new FLow();
      return FLow;
  })();
  var FMed = (function () {
      function FMed() {

      };
      FMed.value = new FMed();
      return FMed;
  })();
  var FHigh = (function () {
      function FHigh() {

      };
      FHigh.value = new FHigh();
      return FHigh;
  })();
  var FAuto = (function () {
      function FAuto() {

      };
      FAuto.value = new FAuto();
      return FAuto;
  })();
  var showSwitch = new Data_Show.Show(function (v) {
      if (v) {
          return "ON";
      };
      if (!v) {
          return "OFF";
      };
      throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 108, column 1 - line 110, column 30): " + [ v.constructor.name ]);
  });             
  var genericMode = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof MCool) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof MDryCool) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof MDehumidify) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof MHeat) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
      };
      if (x instanceof MAutomatic) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
      };
      if (x instanceof MAutoDehumidifying) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
      };
      if (x instanceof MQuickLaundry) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
      };
      if (x instanceof MCondensationControl) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))))));
      };
      throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 42, column 1 - line 42, column 46): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return MCool.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return MDryCool.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return MDehumidify.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return MHeat.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
          return MAutomatic.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
          return MAutoDehumidifying.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
          return MQuickLaundry.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))) {
          return MCondensationControl.value;
      };
      throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 42, column 1 - line 42, column 46): " + [ x.constructor.name ]);
  });
  var showMode = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericMode)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MCool";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MDryCool";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MDehumidify";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MHeat";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MAutomatic";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MAutoDehumidifying";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MQuickLaundry";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MCondensationControl";
  })))))))))));
  var genericFan = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof FSilent) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof FLow) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof FMed) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof FHigh) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
      };
      if (x instanceof FAuto) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value))));
      };
      throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 75, column 1 - line 75, column 45): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return FSilent.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return FLow.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return FMed.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return FHigh.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr))) {
          return FAuto.value;
      };
      throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 75, column 1 - line 75, column 45): " + [ x.constructor.name ]);
  });
  var showFan = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericFan)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FSilent";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FLow";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FMed";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FHigh";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FAuto";
  }))))))));                       
  var eqMode = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof MCool && y instanceof MCool) {
              return true;
          };
          if (x instanceof MDryCool && y instanceof MDryCool) {
              return true;
          };
          if (x instanceof MDehumidify && y instanceof MDehumidify) {
              return true;
          };
          if (x instanceof MHeat && y instanceof MHeat) {
              return true;
          };
          if (x instanceof MAutomatic && y instanceof MAutomatic) {
              return true;
          };
          if (x instanceof MAutoDehumidifying && y instanceof MAutoDehumidifying) {
              return true;
          };
          if (x instanceof MQuickLaundry && y instanceof MQuickLaundry) {
              return true;
          };
          if (x instanceof MCondensationControl && y instanceof MCondensationControl) {
              return true;
          };
          return false;
      };
  });
  var ordMode = new Data_Ord.Ord(function () {
      return eqMode;
  }, function (x) {
      return function (y) {
          if (x instanceof MCool && y instanceof MCool) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MCool) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MCool) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MDryCool && y instanceof MDryCool) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MDryCool) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MDryCool) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MDehumidify && y instanceof MDehumidify) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MDehumidify) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MDehumidify) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MHeat && y instanceof MHeat) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MHeat) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MHeat) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MAutomatic && y instanceof MAutomatic) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MAutomatic) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MAutomatic) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MAutoDehumidifying && y instanceof MAutoDehumidifying) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MAutoDehumidifying) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MAutoDehumidifying) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MQuickLaundry && y instanceof MQuickLaundry) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MQuickLaundry) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MQuickLaundry) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MCondensationControl && y instanceof MCondensationControl) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 44, column 1 - line 44, column 40): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqFan = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof FSilent && y instanceof FSilent) {
              return true;
          };
          if (x instanceof FLow && y instanceof FLow) {
              return true;
          };
          if (x instanceof FMed && y instanceof FMed) {
              return true;
          };
          if (x instanceof FHigh && y instanceof FHigh) {
              return true;
          };
          if (x instanceof FAuto && y instanceof FAuto) {
              return true;
          };
          return false;
      };
  });         
  var ordFan = new Data_Ord.Ord(function () {
      return eqFan;
  }, function (x) {
      return function (y) {
          if (x instanceof FSilent && y instanceof FSilent) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FSilent) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FSilent) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FLow && y instanceof FLow) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FLow) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FLow) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FMed && y instanceof FMed) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FMed) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FMed) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FHigh && y instanceof FHigh) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof FHigh) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof FHigh) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof FAuto && y instanceof FAuto) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 77, column 1 - line 77, column 39): " + [ x.constructor.name, y.constructor.name ]);
      };
  });                                    
  var enumMode = new Data_Enum.Enum(function () {
      return ordMode;
  }, Data_Generic_Rep_Enum.genericPred(genericMode)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))), Data_Generic_Rep_Enum.genericSucc(genericMode)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))));
  var enumFan = new Data_Enum.Enum(function () {
      return ordFan;
  }, Data_Generic_Rep_Enum.genericPred(genericFan)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))), Data_Generic_Rep_Enum.genericSucc(genericFan)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))));
  var boundedMode = new Data_Bounded.Bounded(function () {
      return ordMode;
  }, Data_Generic_Rep_Bounded.genericBottom(genericMode)(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Bounded.genericTop(genericMode)(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))))))))));
  var boundedFan = new Data_Bounded.Bounded(function () {
      return ordFan;
  }, Data_Generic_Rep_Bounded.genericBottom(genericFan)(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Bounded.genericTop(genericFan)(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments)))))));
  var boundedEnumSwitch = Data_Enum.boundedEnumBoolean;
  var boundedEnumMode = new Data_Enum.BoundedEnum(function () {
      return boundedMode;
  }, function () {
      return enumMode;
  }, Data_Generic_Rep_Enum.genericCardinality(genericMode)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))))))))), function (v) {
      if (v instanceof MCool) {
          return 3;
      };
      if (v instanceof MDryCool) {
          return 4;
      };
      if (v instanceof MDehumidify) {
          return 5;
      };
      if (v instanceof MHeat) {
          return 6;
      };
      if (v instanceof MAutomatic) {
          return 7;
      };
      if (v instanceof MAutoDehumidifying) {
          return 9;
      };
      if (v instanceof MQuickLaundry) {
          return 10;
      };
      if (v instanceof MCondensationControl) {
          return 12;
      };
      throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 51, column 1 - line 69, column 38): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 3) {
          return new Data_Maybe.Just(MCool.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(MDryCool.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(MDehumidify.value);
      };
      if (v === 6) {
          return new Data_Maybe.Just(MHeat.value);
      };
      if (v === 7) {
          return new Data_Maybe.Just(MAutomatic.value);
      };
      if (v === 9) {
          return new Data_Maybe.Just(MAutoDehumidifying.value);
      };
      if (v === 10) {
          return new Data_Maybe.Just(MQuickLaundry.value);
      };
      if (v === 12) {
          return new Data_Maybe.Just(MCondensationControl.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var boundedEnumFan = new Data_Enum.BoundedEnum(function () {
      return boundedFan;
  }, function () {
      return enumFan;
  }, Data_Generic_Rep_Enum.genericCardinality(genericFan)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments)))))), function (v) {
      if (v instanceof FSilent) {
          return 1;
      };
      if (v instanceof FLow) {
          return 2;
      };
      if (v instanceof FMed) {
          return 3;
      };
      if (v instanceof FHigh) {
          return 4;
      };
      if (v instanceof FAuto) {
          return 5;
      };
      throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 84, column 1 - line 96, column 26): " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(FSilent.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(FLow.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(FMed.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(FHigh.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(FAuto.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var decodeHitachiHvac = function (inputFrames) {
      var first9bytes = Data_Array.mapMaybe(InfraredRemote_Types.fromBinaryString)([ "10000000", "00001000", "00000000", "00000010", "11111101", "11111111", "00000000", "00110011", "11001100" ]);
      var isValidIdentifier = function (input) {
          return Data_Eq.eq(Data_Eq.eqArray(Data_Array_NonEmpty_Internal.eqNonEmptyArray(InfraredRemote_Types.eqBit)))(Data_Array.take(9)(input))(first9bytes);
      };
      var decode = function (bitstreams) {
          if (isValidIdentifier(bitstreams)) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $104 = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst);
                  return function ($105) {
                      return $104(InfraredRemote_Types.toLsbFirst($105));
                  };
              })())(Data_Array.index(bitstreams)(13)))(function (b13) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                      var $106 = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst);
                      return function ($107) {
                          return $106(InfraredRemote_Types.toLsbFirst($107));
                      };
                  })())(Data_Array.index(bitstreams)(25)))(function (b25) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                          var $108 = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst);
                          return function ($109) {
                              return $108(InfraredRemote_Types.toLsbFirst($109));
                          };
                      })())(Data_Array.index(bitstreams)(27)))(function (b27) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumMode)(b25 & 15))(function (v) {
                              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumFan)(b25 >> 4 & 15))(function (v1) {
                                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumSwitch)(b27 >> 4 & 1))(function (v2) {
                                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                          original: bitstreams,
                                          mode: v,
                                          temperature: b13 >> 2 & 31,
                                          fan: v1,
                                          "switch": v2
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at InfraredRemote.HitachiHvac (line 140, column 3 - line 140, column 49): " + [ bitstreams.constructor.name ]);
      };
      var v = Data_Array.head(inputFrames);
      if (v instanceof Data_Maybe.Just && v.value0 instanceof InfraredRemote_Types.FormatAEHA) {
          return decode(v.value0.value0.octets);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["decodeHitachiHvac"] = decodeHitachiHvac;
  exports["showMode"] = showMode;
  exports["showFan"] = showFan;
  exports["showSwitch"] = showSwitch;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["InfraredRemote.MitsubishiElectricHvac"] = $PS["InfraredRemote.MitsubishiElectricHvac"] || {};
  var exports = $PS["InfraredRemote.MitsubishiElectricHvac"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = $PS["Data.Generic.Rep.Show"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var InfraredRemote_Types = $PS["InfraredRemote.Types"];
  var MAuto = (function () {
      function MAuto() {

      };
      MAuto.value = new MAuto();
      return MAuto;
  })();
  var MDry = (function () {
      function MDry() {

      };
      MDry.value = new MDry();
      return MDry;
  })();
  var MCool = (function () {
      function MCool() {

      };
      MCool.value = new MCool();
      return MCool;
  })();
  var MHeat = (function () {
      function MHeat() {

      };
      MHeat.value = new MHeat();
      return MHeat;
  })();
  var Crc = function (x) {
      return x;
  };
  var showSwitch = new Data_Show.Show(function (v) {
      if (v) {
          return "ON";
      };
      if (!v) {
          return "OFF";
      };
      throw new Error("Failed pattern match at InfraredRemote.MitsubishiElectricHvac (line 58, column 1 - line 60, column 30): " + [ v.constructor.name ]);
  });                        
  var newtypeCrc = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Crc);
  var validCrc = function (crc) {
      return function (original) {
          var values = Data_Functor.map(Data_Functor.functorArray)((function () {
              var $140 = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst);
              return function ($141) {
                  return $140(InfraredRemote_Types.toLsbFirst($141));
              };
          })())(Data_Array.take(17)(original));
          var y = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(values) & 255;
          var x = Data_Newtype.unwrap(newtypeCrc)(crc);
          return x === y;
      };
  };       
  var genericMode = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof MAuto) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof MDry) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof MCool) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof MHeat) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
      };
      throw new Error("Failed pattern match at InfraredRemote.MitsubishiElectricHvac (line 45, column 1 - line 45, column 46): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return MAuto.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return MDry.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return MCool.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
          return MHeat.value;
      };
      throw new Error("Failed pattern match at InfraredRemote.MitsubishiElectricHvac (line 45, column 1 - line 45, column 46): " + [ x.constructor.name ]);
  });
  var showMode = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericMode)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MAuto";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MDry";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MCool";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MHeat";
  })))))));  
  var genericCrc = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var showCrc = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericCrc)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
      return "Crc";
  }))));                                          
  var boundedEnumSwitch = Data_Enum.boundedEnumBoolean;
  var decodeMitsubishiElectricHvac = (function () {
      var toMode1 = function (v) {
          if (v === 4) {
              return new Data_Maybe.Just(MAuto.value);
          };
          if (v === 2) {
              return new Data_Maybe.Just(MDry.value);
          };
          if (v === 3) {
              return new Data_Maybe.Just(MCool.value);
          };
          if (v === 1) {
              return new Data_Maybe.Just(MHeat.value);
          };
          return Data_Maybe.Nothing.value;
      };
      var first5bytes = Data_Array.mapMaybe(InfraredRemote_Types.fromBinaryString)([ "11000100", "11010011", "01100100", "10000000", "00000000" ]);
      var isValidIdentifier = function (input) {
          return Data_Eq.eq(Data_Eq.eqArray(Data_Array_NonEmpty_Internal.eqNonEmptyArray(InfraredRemote_Types.eqBit)))(Data_Array.take(5)(input))(first5bytes);
      };
      var decode = function (v) {
          if (v instanceof InfraredRemote_Types.FormatAEHA && v.value0.octets.length === 18) {
              var temp = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][7])) & 15;
              var $$switch = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][5])) >> 5 & 1;
              var mode1 = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][6])) >> 3 & 7;
              var crc = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][17]));
              return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(isValidIdentifier(v.value0.octets)))(function () {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(toMode1(mode1))(function (mode1_) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumSwitch)($$switch))(function (switch_) {
                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                              original: v.value0.octets,
                              temperature: 16 + temp | 0,
                              mode1: mode1_,
                              "switch": switch_,
                              crc: crc
                          });
                      });
                  });
              });
          };
          return Data_Maybe.Nothing.value;
      };
      return function (v) {
          if (v.length === 2) {
              return decode(v[1]);
          };
          return Data_Maybe.Nothing.value;
      };
  })();
  exports["decodeMitsubishiElectricHvac"] = decodeMitsubishiElectricHvac;
  exports["validCrc"] = validCrc;
  exports["showMode"] = showMode;
  exports["showSwitch"] = showSwitch;
  exports["showCrc"] = showCrc;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["InfraredRemote.PanasonicHvac"] = $PS["InfraredRemote.PanasonicHvac"] || {};
  var exports = $PS["InfraredRemote.PanasonicHvac"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = $PS["Data.Generic.Rep.Show"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var InfraredRemote_Types = $PS["InfraredRemote.Types"];
  var SAuto = (function () {
      function SAuto() {

      };
      SAuto.value = new SAuto();
      return SAuto;
  })();
  var SHorizontal = (function () {
      function SHorizontal() {

      };
      SHorizontal.value = new SHorizontal();
      return SHorizontal;
  })();
  var SNotch2 = (function () {
      function SNotch2() {

      };
      SNotch2.value = new SNotch2();
      return SNotch2;
  })();
  var SNotch3 = (function () {
      function SNotch3() {

      };
      SNotch3.value = new SNotch3();
      return SNotch3;
  })();
  var SNotch4 = (function () {
      function SNotch4() {

      };
      SNotch4.value = new SNotch4();
      return SNotch4;
  })();
  var SNotch5 = (function () {
      function SNotch5() {

      };
      SNotch5.value = new SNotch5();
      return SNotch5;
  })();
  var PNormal = (function () {
      function PNormal() {

      };
      PNormal.value = new PNormal();
      return PNormal;
  })();
  var PBoost = (function () {
      function PBoost() {

      };
      PBoost.value = new PBoost();
      return PBoost;
  })();
  var PQuiet = (function () {
      function PQuiet() {

      };
      PQuiet.value = new PQuiet();
      return PQuiet;
  })();
  var POther = (function () {
      function POther(value0) {
          this.value0 = value0;
      };
      POther.create = function (value0) {
          return new POther(value0);
      };
      return POther;
  })();
  var MAuto = (function () {
      function MAuto() {

      };
      MAuto.value = new MAuto();
      return MAuto;
  })();
  var MFan = (function () {
      function MFan() {

      };
      MFan.value = new MFan();
      return MFan;
  })();
  var MDry = (function () {
      function MDry() {

      };
      MDry.value = new MDry();
      return MDry;
  })();
  var MCool = (function () {
      function MCool() {

      };
      MCool.value = new MCool();
      return MCool;
  })();
  var MHeat = (function () {
      function MHeat() {

      };
      MHeat.value = new MHeat();
      return MHeat;
  })();
  var FAuto = (function () {
      function FAuto() {

      };
      FAuto.value = new FAuto();
      return FAuto;
  })();
  var FSlowest = (function () {
      function FSlowest() {

      };
      FSlowest.value = new FSlowest();
      return FSlowest;
  })();
  var FNotch2 = (function () {
      function FNotch2() {

      };
      FNotch2.value = new FNotch2();
      return FNotch2;
  })();
  var FNotch3 = (function () {
      function FNotch3() {

      };
      FNotch3.value = new FNotch3();
      return FNotch3;
  })();
  var FNotch4 = (function () {
      function FNotch4() {

      };
      FNotch4.value = new FNotch4();
      return FNotch4;
  })();
  var FNotch5 = (function () {
      function FNotch5() {

      };
      FNotch5.value = new FNotch5();
      return FNotch5;
  })();
  var Crc = function (x) {
      return x;
  };
  var showSwitch = new Data_Show.Show(function (v) {
      if (v) {
          return "ON";
      };
      if (!v) {
          return "OFF";
      };
      throw new Error("Failed pattern match at InfraredRemote.PanasonicHvac (line 57, column 1 - line 59, column 30): " + [ v.constructor.name ]);
  });               
  var newtypeCrc = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Crc);
  var validCrc = function (crc) {
      return function (original) {
          var values = Data_Functor.map(Data_Functor.functorArray)((function () {
              var $152 = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst);
              return function ($153) {
                  return $152(InfraredRemote_Types.toLsbFirst($153));
              };
          })())(Data_Array.take(18)(original));
          var y = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(values) & 255;
          var x = Data_Newtype.unwrap(newtypeCrc)(crc);
          return x === y;
      };
  };
  var genericSwing = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof SAuto) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof SHorizontal) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof SNotch2) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof SNotch3) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
      };
      if (x instanceof SNotch4) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
      };
      if (x instanceof SNotch5) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))));
      };
      throw new Error("Failed pattern match at InfraredRemote.PanasonicHvac (line 63, column 1 - line 63, column 49): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return SAuto.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return SHorizontal.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return SNotch2.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return SNotch3.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
          return SNotch4.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
          return SNotch5.value;
      };
      throw new Error("Failed pattern match at InfraredRemote.PanasonicHvac (line 63, column 1 - line 63, column 49): " + [ x.constructor.name ]);
  });
  var showSwing = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericSwing)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "SAuto";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "SHorizontal";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "SNotch2";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "SNotch3";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "SNotch4";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "SNotch5";
  })))))))));
  var genericProfile = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof PNormal) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof PBoost) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof PQuiet) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof POther) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)));
      };
      throw new Error("Failed pattern match at InfraredRemote.PanasonicHvac (line 77, column 1 - line 77, column 53): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return PNormal.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return PBoost.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return PQuiet.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
          return new POther(x.value0.value0.value0);
      };
      throw new Error("Failed pattern match at InfraredRemote.PanasonicHvac (line 77, column 1 - line 77, column 53): " + [ x.constructor.name ]);
  });
  var showProfile = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericProfile)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "PNormal";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "PBoost";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "PQuiet";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
      return "POther";
  })))))));
  var genericMode = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof MAuto) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof MFan) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof MDry) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof MCool) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
      };
      if (x instanceof MHeat) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value))));
      };
      throw new Error("Failed pattern match at InfraredRemote.PanasonicHvac (line 44, column 1 - line 44, column 46): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return MAuto.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return MFan.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return MDry.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return MCool.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr))) {
          return MHeat.value;
      };
      throw new Error("Failed pattern match at InfraredRemote.PanasonicHvac (line 44, column 1 - line 44, column 46): " + [ x.constructor.name ]);
  });
  var showMode = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericMode)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MAuto";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MFan";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MDry";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MCool";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "MHeat";
  }))))))));
  var genericFan = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof FAuto) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof FSlowest) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof FNotch2) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof FNotch3) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
      };
      if (x instanceof FNotch4) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
      };
      if (x instanceof FNotch5) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))));
      };
      throw new Error("Failed pattern match at InfraredRemote.PanasonicHvac (line 70, column 1 - line 70, column 45): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return FAuto.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return FSlowest.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return FNotch2.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return FNotch3.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
          return FNotch4.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
          return FNotch5.value;
      };
      throw new Error("Failed pattern match at InfraredRemote.PanasonicHvac (line 70, column 1 - line 70, column 45): " + [ x.constructor.name ]);
  });
  var showFan = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericFan)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FAuto";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FSlowest";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FNotch2";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FNotch3";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FNotch4";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FNotch5";
  })))))))));
  var genericCrc = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var showCrc = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericCrc)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
      return "Crc";
  }))));                                          
  var boundedEnumSwitch = Data_Enum.boundedEnumBoolean;
  var decodePanasonicHvac = (function () {
      var toSwingNotch = function (v) {
          if (v === 15) {
              return new Data_Maybe.Just(SAuto.value);
          };
          if (v === 1) {
              return new Data_Maybe.Just(SHorizontal.value);
          };
          if (v === 2) {
              return new Data_Maybe.Just(SNotch2.value);
          };
          if (v === 3) {
              return new Data_Maybe.Just(SNotch3.value);
          };
          if (v === 4) {
              return new Data_Maybe.Just(SNotch4.value);
          };
          if (v === 5) {
              return new Data_Maybe.Just(SNotch5.value);
          };
          return Data_Maybe.Nothing.value;
      };
      var toProfile = function (v) {
          if (v === 16) {
              return PNormal.value;
          };
          if (v === 17) {
              return PBoost.value;
          };
          if (v === 48) {
              return PQuiet.value;
          };
          return new POther(v);
      };
      var toMode = function (v) {
          if (v === 0) {
              return new Data_Maybe.Just(MAuto.value);
          };
          if (v === 2) {
              return new Data_Maybe.Just(MDry.value);
          };
          if (v === 3) {
              return new Data_Maybe.Just(MCool.value);
          };
          if (v === 4) {
              return new Data_Maybe.Just(MHeat.value);
          };
          if (v === 6) {
              return new Data_Maybe.Just(MFan.value);
          };
          return Data_Maybe.Nothing.value;
      };
      var toFanNotch = function (v) {
          if (v === 10) {
              return new Data_Maybe.Just(FAuto.value);
          };
          if (v === 3) {
              return new Data_Maybe.Just(FSlowest.value);
          };
          if (v === 4) {
              return new Data_Maybe.Just(FNotch2.value);
          };
          if (v === 5) {
              return new Data_Maybe.Just(FNotch3.value);
          };
          if (v === 6) {
              return new Data_Maybe.Just(FNotch4.value);
          };
          if (v === 7) {
              return new Data_Maybe.Just(FNotch5.value);
          };
          return Data_Maybe.Nothing.value;
      };
      var firstFrame = (function () {
          var octets = Data_Array.mapMaybe(InfraredRemote_Types.fromBinaryString)([ "01000000", "00000100", "00000111", "00100000", "00000000", "00000000", "00000000", "01100000" ]);
          return new InfraredRemote_Types.FormatAEHA({
              octets: octets,
              stop: InfraredRemote_Types.Assert.value
          });
      })();
      var decode = function (v) {
          if (v instanceof InfraredRemote_Types.FormatAEHA && v.value0.octets.length === 19) {
              var temp = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][6])) >> 1 & 15;
              var $$switch = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][5])) & 1;
              var swing = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][8])) & 15;
              var prof = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][13]));
              var mode = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][5])) >> 4 & 15;
              var fan = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][8])) >> 4 & 15;
              var crc = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v["value0"]["octets"][18]));
              return Control_Bind.bind(Data_Maybe.bindMaybe)(toMode(mode))(function (mode_) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumSwitch)($$switch))(function (switch_) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(toSwingNotch(swing))(function (swing_) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(toFanNotch(fan))(function (fan_) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                  original: v.value0.octets,
                                  temperature: 16 + temp | 0,
                                  mode: mode_,
                                  "switch": switch_,
                                  swing: swing_,
                                  fan: fan_,
                                  profile: toProfile(prof),
                                  crc: crc
                              });
                          });
                      });
                  });
              });
          };
          return Data_Maybe.Nothing.value;
      };
      return function (v) {
          if (v.length === 2 && Data_Eq.eq(InfraredRemote_Types.eqInfraredCodeFrame)(v[0])(firstFrame)) {
              return decode(v[1]);
          };
          return Data_Maybe.Nothing.value;
      };
  })();
  exports["decodePanasonicHvac"] = decodePanasonicHvac;
  exports["validCrc"] = validCrc;
  exports["showMode"] = showMode;
  exports["showSwitch"] = showSwitch;
  exports["showSwing"] = showSwing;
  exports["showFan"] = showFan;
  exports["showProfile"] = showProfile;
  exports["showCrc"] = showCrc;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Char"] = $PS["Data.Char"] || {};
  var exports = $PS["Data.Char"];
  var Data_Enum = $PS["Data.Enum"];                
  var toCharCode = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
  var fromCharCode = Data_Enum.toEnum(Data_Enum.boundedEnumChar);
  exports["toCharCode"] = toCharCode;
  exports["fromCharCode"] = fromCharCode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Char.Unicode"] = $PS["Data.Char.Unicode"] || {};
  var exports = $PS["Data.Char.Unicode"];
  var Data_Char = $PS["Data.Char"];
  var isDigit = function (c) {
      var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("0") | 0;
      return diff <= 9 && diff >= 0;
  };
  var isHexDigit = function (c) {
      return isDigit(c) || ((function () {
          var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("A") | 0;
          return diff <= 5 && diff >= 0;
      })() || (function () {
          var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("a") | 0;
          return diff <= 5 && diff >= 0;
      })());
  };
  exports["isDigit"] = isDigit;
  exports["isHexDigit"] = isHexDigit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Text.Parsing.Parser.Token"] = $PS["Text.Parsing.Parser.Token"] || {};
  var exports = $PS["Text.Parsing.Parser.Token"];
  var Data_Char_Unicode = $PS["Data.Char.Unicode"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var hexDigit = function (dictMonad) {
      return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isHexDigit))("hex digit");
  };
  var digit = function (dictMonad) {
      return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isDigit))("digit");
  };
  exports["digit"] = digit;
  exports["hexDigit"] = hexDigit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Utils"] = $PS["Utils"] || {};
  var exports = $PS["Utils"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_Either = $PS["Data.Either"];
  var Data_Formatter_DateTime = $PS["Data.Formatter.DateTime"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];                
  var unlines = Data_String_Common.joinWith("\x0a");
  var toArrayArray = function (n) {
      var chop = function (xs) {
          var b = Data_Array.drop(n)(xs);
          var a = Data_Array.take(n)(xs);
          var $1 = Data_Array["null"](b);
          if ($1) {
              return new Data_Tuple.Tuple(a, Data_Maybe.Nothing.value);
          };
          return new Data_Tuple.Tuple(a, new Data_Maybe.Just(b));
      };
      return Data_Unfoldable1.unfoldr1(Data_Unfoldable1.unfoldable1Array)(chop);
  };
  var toArrayNonEmptyArray = function (n) {
      var $5 = Data_Array.mapMaybe(Data_Array_NonEmpty.fromArray);
      var $6 = toArrayArray(n);
      return function ($7) {
          return $5($6($7));
      };
  };
  var removeAllSpaces = (function () {
      var $8 = Data_String_Common.joinWith("");
      var $9 = Data_String_Common.split(" ");
      return function ($10) {
          return $8($9($10));
      };
  })();
  var lines = Data_String_Common.split("\x0a");
  var chopDateTime = function (original) {
      var v = Data_String_Common.split(" ")(original);
      if (v.length === 2) {
          return new Data_Maybe.Just({
              date: v[0],
              time: v[1]
          });
      };
      return Data_Maybe.Nothing.value;
  };
  var asiaTokyoDateTime = function (utc) {
      var offset = Data_Time_Duration.fromDuration(Data_Time_Duration.durationHours)(9.0);
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_DateTime.adjust(Data_Time_Duration.durationMilliseconds)(offset)(utc))(function (local) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Formatter_DateTime.formatDateTime("YYYY-MM-DD HH:mm:ss")(local)))(function (dt) {
              return chopDateTime(dt);
          });
      });
  };
  exports["asiaTokyoDateTime"] = asiaTokyoDateTime;
  exports["lines"] = lines;
  exports["removeAllSpaces"] = removeAllSpaces;
  exports["toArrayArray"] = toArrayArray;
  exports["toArrayNonEmptyArray"] = toArrayNonEmptyArray;
  exports["unlines"] = unlines;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["InfraredRemote.Code"] = $PS["InfraredRemote.Code"] || {};
  var exports = $PS["InfraredRemote.Code"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];
  var Data_Unit = $PS["Data.Unit"];
  var InfraredRemote_HitachiHvac = $PS["InfraredRemote.HitachiHvac"];
  var InfraredRemote_MitsubishiElectricHvac = $PS["InfraredRemote.MitsubishiElectricHvac"];
  var InfraredRemote_PanasonicHvac = $PS["InfraredRemote.PanasonicHvac"];
  var InfraredRemote_Types = $PS["InfraredRemote.Types"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var Text_Parsing_Parser_Token = $PS["Text.Parsing.Parser.Token"];
  var Utils = $PS["Utils"];                
  var IrRemoteUnknown = (function () {
      function IrRemoteUnknown(value0) {
          this.value0 = value0;
      };
      IrRemoteUnknown.create = function (value0) {
          return new IrRemoteUnknown(value0);
      };
      return IrRemoteUnknown;
  })();
  var IrRemotePanasonicHvac = (function () {
      function IrRemotePanasonicHvac(value0) {
          this.value0 = value0;
      };
      IrRemotePanasonicHvac.create = function (value0) {
          return new IrRemotePanasonicHvac(value0);
      };
      return IrRemotePanasonicHvac;
  })();
  var IrRemoteMitsubishiElectricHvac = (function () {
      function IrRemoteMitsubishiElectricHvac(value0) {
          this.value0 = value0;
      };
      IrRemoteMitsubishiElectricHvac.create = function (value0) {
          return new IrRemoteMitsubishiElectricHvac(value0);
      };
      return IrRemoteMitsubishiElectricHvac;
  })();
  var IrRemoteHitachiHvac = (function () {
      function IrRemoteHitachiHvac(value0) {
          this.value0 = value0;
      };
      IrRemoteHitachiHvac.create = function (value0) {
          return new IrRemoteHitachiHvac(value0);
      };
      return IrRemoteHitachiHvac;
  })();
  var Count = function (x) {
      return x;
  };
  var LeaderAeha = (function () {
      function LeaderAeha(value0) {
          this.value0 = value0;
      };
      LeaderAeha.create = function (value0) {
          return new LeaderAeha(value0);
      };
      return LeaderAeha;
  })();
  var LeaderNec = (function () {
      function LeaderNec(value0) {
          this.value0 = value0;
      };
      LeaderNec.create = function (value0) {
          return new LeaderNec(value0);
      };
      return LeaderNec;
  })();
  var LeaderSirc = (function () {
      function LeaderSirc(value0) {
          this.value0 = value0;
      };
      LeaderSirc.create = function (value0) {
          return new LeaderSirc(value0);
      };
      return LeaderSirc;
  })();
  var LeaderUnknown = (function () {
      function LeaderUnknown(value0) {
          this.value0 = value0;
      };
      LeaderUnknown.create = function (value0) {
          return new LeaderUnknown(value0);
      };
      return LeaderUnknown;
  })();
  var toMilliseconds = function (v) {
      return Data_Int.toNumber(v) * 2.6e-2;
  };
  var toInfraredHexString = function (v) {
      var toHex = function (x) {
          if (x < 16) {
              return "0" + Data_Int.toStringAs(Data_Int.hexadecimal)(x);
          };
          if (Data_Boolean.otherwise) {
              return Data_Int.toStringAs(Data_Int.hexadecimal)(x);
          };
          throw new Error("Failed pattern match at InfraredRemote.Code (line 105, column 5 - line 105, column 27): " + [ x.constructor.name ]);
      };
      var countToHex = function (v1) {
          var lo = v1 & 255;
          var hi = v1 >> 8 & 255;
          return toHex(lo) + toHex(hi);
      };
      var f = function (x) {
          return countToHex(x.on) + countToHex(x.off);
      };
      return Data_String_Common.joinWith("")(Data_Functor.map(Data_Functor.functorArray)(f)(v));
  };
  var takeEnd = function (errmsg) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.get(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(function (array) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.put(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))([  ]))(function () {
              return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(errmsg))(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))))(Data_Array_NonEmpty.fromArray(array));
          });
      });
  };
  var takeBits = function (n) {
      return function (errmsg) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.get(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(function (state) {
              var nextState = Data_Array.drop(n)(state);
              var bitarray = Data_Array.take(n)(state);
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.put(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(nextState))(function () {
                  return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(errmsg))(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))))(Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Array.length(bitarray) === n))(function () {
                      return Data_Array_NonEmpty.fromArray(bitarray);
                  }));
              });
          });
      };
  };
  var takeBit = function (errmsg) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.get(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(function (state) {
          var v = Data_Array.uncons(state);
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(errmsg);
          };
          if (v instanceof Data_Maybe.Just) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.put(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(v.value0.tail))(function () {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(v.value0.head);
              });
          };
          throw new Error("Failed pattern match at InfraredRemote.Code (line 415, column 3 - line 421, column 18): " + [ v.constructor.name ]);
      });
  };                                                          
  var semiringCount = Data_Semiring.semiringInt;
  var ordCount = Data_Ord.ordInt;
  var fromMilliseconds = function (v) {
      return Count(Data_Int.floor(v / 2.6e-2));
  };
  var withTolerance = function (tolerance) {
      return function (typical) {
          var v = fromMilliseconds(tolerance.upper);
          var v1 = fromMilliseconds(tolerance.lower);
          var v2 = fromMilliseconds(typical);
          return Data_Functor.map(Data_Functor.functorArray)(Count)(Data_Array.range(v2 - v1 | 0)(v2 + v | 0));
      };
  };
  var formatPigpioIrrp = (function () {
      var toPulses = function (input) {
          var pulse = function (v) {
              if (v.length === 2) {
                  var b = Data_Int.toNumber(v[1]) / 1000.0;
                  var a = Data_Int.toNumber(v[0]) / 1000.0;
                  return new Data_Maybe.Just({
                      on: fromMilliseconds(a),
                      off: fromMilliseconds(b)
                  });
              };
              return Data_Maybe.Nothing.value;
          };
          var xs = Data_Functor.map(Data_Functor.functorArray)(pulse)(Utils.toArrayArray(2)(Data_Array.snoc(input)(35 * 1000 | 0)));
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Array.catMaybes(xs));
      };
      var sepalator = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.skipSpaces(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))(function () {
          return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Data_Functor["void"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(","))))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Unit.unit));
      });
      var jsonArray = (function () {
          var number = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_CodeUnits.fromCharArray)(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_Token.digit(Data_Identity.monadIdentity))))(function (v) {
              var v1 = Data_Int.fromStringAs(Data_Int.decimal)(v);
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Text_Parsing_Parser.fail(Data_Identity.monadIdentity)("value is must be numeric.");
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(v1.value0);
              };
              throw new Error("Failed pattern match at InfraredRemote.Code (line 176, column 9 - line 178, column 27): " + [ v1.constructor.name ]);
          });
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Functor["void"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("[")))(function () {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.skipSpaces(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))(number))(sepalator)))(function (vs) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Functor["void"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("]")))(function () {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(vs);
                  });
              });
          });
      })();
      var hashmap = (function () {
          var key = Text_Parsing_Parser_Combinators.between(Data_Identity.monadIdentity)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("\""))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("\""))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.noneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)([ "\"" ])));
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(key)(function (k) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.skipSpaces(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Functor["void"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(":")))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.skipSpaces(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))(function () {
                          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(jsonArray)(function (values) {
                              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(Data_String_CodeUnits.fromCharArray(k), values));
                          });
                      });
                  });
              });
          });
      })();
      var jsonObject = Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Functor["void"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("{")))(function () {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.skipSpaces(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))(hashmap))(sepalator)))(function (vs) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Functor["void"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("}")))(function () {
                  return Data_Maybe.maybe(Text_Parsing_Parser.fail(Data_Identity.monadIdentity)("Empty content."))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity)))(Data_Array.head(vs));
              });
          });
      });
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.skipSpaces(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))(jsonObject))(function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))(function () {
              var v1 = toPulses(v.value1);
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Text_Parsing_Parser.fail(Data_Identity.monadIdentity)("must be on-off pair.");
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(v1.value0);
              };
              throw new Error("Failed pattern match at InfraredRemote.Code (line 120, column 3 - line 122, column 34): " + [ v1.constructor.name ]);
          });
      });
  })();
  var formatOnOffPair = (function () {
      var hexd16bit = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Token.hexDigit(Data_Identity.monadIdentity))(function (a) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Token.hexDigit(Data_Identity.monadIdentity))(function (b) {
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_String_CodeUnits.fromCharArray([ a, b ]));
          });
      });
      var valueOf32Bit = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.withErrorMessage(Data_Identity.monadIdentity)(hexd16bit)("lower-pair hex digit"))(function (lower) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.withErrorMessage(Data_Identity.monadIdentity)(hexd16bit)("higher-pair hex digit"))(function (higher) {
              var str = higher + lower;
              var maybeNum = Data_Int.fromStringAs(Data_Int.hexadecimal)(str);
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Maybe.fromJust()(maybeNum));
          });
      });
      var pulse = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.withErrorMessage(Data_Identity.monadIdentity)(valueOf32Bit)("on-counts"))(function (ton) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.withErrorMessage(Data_Identity.monadIdentity)(valueOf32Bit)("off-counts"))(function (toff) {
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))({
                  on: ton,
                  off: toff
              });
          });
      });
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(pulse)(Text_Parsing_Parser_String.skipSpaces(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))))(function (xs) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))(function () {
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(xs);
          });
      });
  })();
  var infraredCodeTextParser = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(formatOnOffPair)(formatPigpioIrrp);
  var eqCount = Data_Eq.eqInt;
  var makeInfraredLeader = (function () {
      var typical = withTolerance({
          upper: 0.2,
          lower: 0.2
      });
      var sirc = function (pulse) {
          var on_ = typical(2.4);
          var off_ = typical(0.6);
          return Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
              return Data_Eq.eq(eqCount)(v)(pulse.on);
          })(on_) && Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
              return Data_Eq.eq(eqCount)(v)(pulse.off);
          })(off_);
      };
      var nec = function (pulse) {
          var on_ = typical(9.0);
          var off_ = typical(4.5);
          return Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
              return Data_Eq.eq(eqCount)(v)(pulse.on);
          })(on_) && Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
              return Data_Eq.eq(eqCount)(v)(pulse.off);
          })(off_);
      };
      var aeha = function (pulse) {
          var on_ = typical(3.4);
          var off_ = typical(1.7);
          return Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
              return Data_Eq.eq(eqCount)(v)(pulse.on);
          })(on_) && Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
              return Data_Eq.eq(eqCount)(v)(pulse.off);
          })(off_);
      };
      return function (v) {
          if (aeha(v)) {
              return new LeaderAeha(v);
          };
          if (nec(v)) {
              return new LeaderNec(v);
          };
          if (sirc(v)) {
              return new LeaderSirc(v);
          };
          if (Data_Boolean.otherwise) {
              return new LeaderUnknown(v);
          };
          throw new Error("Failed pattern match at InfraredRemote.Code (line 266, column 22 - line 270, column 35): " + [ v.constructor.name ]);
      };
  })();          
  var demodulate = function (leader) {
      return function (ps) {
          var sircModulation = function (p) {
              var threshold = withTolerance({
                  upper: 0.1,
                  lower: 0.1
              })(1.2);
              return InfraredRemote_Types.fromBoolean(Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
                  return Data_Eq.eq(eqCount)(v)(p.on);
              })(threshold));
          };
          var pulseDistanceModulation = function (v) {
              if (Data_Ord.lessThanOrEq(ordCount)(Data_Semiring.mul(semiringCount)(2)(v.on))(v.off)) {
                  return InfraredRemote_Types.Assert.value;
              };
              if (Data_Boolean.otherwise) {
                  return InfraredRemote_Types.Negate.value;
              };
              throw new Error("Failed pattern match at InfraredRemote.Code (line 315, column 29 - line 317, column 44): " + [ v.constructor.name ]);
          };
          if (leader instanceof LeaderSirc) {
              return Data_Functor.map(Data_Functor.functorArray)(sircModulation)(ps);
          };
          return Data_Functor.map(Data_Functor.functorArray)(pulseDistanceModulation)(ps);
      };
  };
  var decodeUnknown = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.get(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))))(function (array) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.put(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))([  ]))(function () {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(new InfraredRemote_Types.FormatUnknown(array));
      });
  });
  var decodeSirc = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(takeBits(7)("fail to read: command code (SIRC)"))(function (comm) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(takeEnd("fail to read: address (SIRC)"))(function (addr) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(new InfraredRemote_Types.FormatSIRC({
              command: comm,
              address: addr
          }));
      });
  });
  var decodePhase4 = function (x) {
      var pana = (function () {
          var $148 = Data_Functor.map(Data_Maybe.functorMaybe)(IrRemotePanasonicHvac.create);
          return function ($149) {
              return $148(InfraredRemote_PanasonicHvac.decodePanasonicHvac($149));
          };
      })();
      var melco = (function () {
          var $150 = Data_Functor.map(Data_Maybe.functorMaybe)(IrRemoteMitsubishiElectricHvac.create);
          return function ($151) {
              return $150(InfraredRemote_MitsubishiElectricHvac.decodeMitsubishiElectricHvac($151));
          };
      })();
      var hitachi = (function () {
          var $152 = Data_Functor.map(Data_Maybe.functorMaybe)(IrRemoteHitachiHvac.create);
          return function ($153) {
              return $152(InfraredRemote_HitachiHvac.decodeHitachiHvac($153));
          };
      })();
      return Data_Maybe.fromMaybe(new IrRemoteUnknown(x))(Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(pana(x))(melco(x)))(hitachi(x)));
  };
  var decodePhase2 = function (tokens) {
      var v = Data_Array.uncons(tokens);
      if (v instanceof Data_Maybe.Just) {
          var leader = makeInfraredLeader(v.value0.head);
          return Data_Either.Right.create(new Data_Tuple.Tuple(leader, demodulate(leader)(v.value0.tail)));
      };
      if (v instanceof Data_Maybe.Nothing) {
          return new Data_Either.Left("Unexpected end of input");
      };
      throw new Error("Failed pattern match at InfraredRemote.Code (line 359, column 3 - line 366, column 37): " + [ v.constructor.name ]);
  };
  var decodePhase1 = function (v) {
      var threshold = fromMilliseconds(8.0);
      var frames = function (pulses) {
          var sep = Data_Array.span(function (count) {
              return Data_Ord.lessThan(ordCount)(count.off)(threshold);
          })(pulses);
          return {
              init: Data_Semigroup.append(Data_Semigroup.semigroupArray)(sep.init)(Data_Array.take(1)(sep.rest)),
              rest: Data_Array.drop(1)(sep.rest)
          };
      };
      var chop = function (xs) {
          var v1 = frames(xs);
          if (v1.rest.length === 0) {
              return new Data_Tuple.Tuple(v1.init, Data_Maybe.Nothing.value);
          };
          return new Data_Tuple.Tuple(v1.init, new Data_Maybe.Just(v1.rest));
      };
      return Data_Unfoldable1.unfoldr1(Data_Unfoldable1.unfoldable1Array)(chop)(v);
  };
  var decodeNec = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(takeBits(8)("fail to read: custom code0 (NEC)"))(function (custom0) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(takeBits(8)("fail to read: custom code1 (NEC)"))(function (custom1) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(takeBits(8)("fail to read: data0 (NEC)"))(function (data0) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(takeBits(8)("fail to read: data1 (NEC)"))(function (data1) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(takeBit("fail to read: stop bit (NEC)"))(function (stopbt) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(new InfraredRemote_Types.FormatNEC({
                          custom0: custom0,
                          custom1: custom1,
                          data0: data0,
                          data1: data1,
                          stop: stopbt
                      }));
                  });
              });
          });
      });
  });
  var decodeAeha = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(takeEnd("fail to read: data (AEHA)"))(function (data_N) {
      var last = Data_Array_NonEmpty.last(data_N);
      var init = Data_Array_NonEmpty.init(data_N);
      var octets = Utils.toArrayNonEmptyArray(8)(init);
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(new InfraredRemote_Types.FormatAEHA({
          octets: octets,
          stop: last
      }));
  });
  var decodePhase3 = function (v) {
      var decoder = (function () {
          if (v.value0 instanceof LeaderAeha) {
              return decodeAeha;
          };
          if (v.value0 instanceof LeaderNec) {
              return decodeNec;
          };
          if (v.value0 instanceof LeaderSirc) {
              return decodeSirc;
          };
          if (v.value0 instanceof LeaderUnknown) {
              return decodeUnknown;
          };
          throw new Error("Failed pattern match at InfraredRemote.Code (line 375, column 13 - line 379, column 37): " + [ v.value0.constructor.name ]);
      })();
      return Control_Monad_State.evalState(Control_Monad_Except_Trans.runExceptT(decoder))(v.value1);
  };
  var toIrCodeFrames = (function () {
      var $154 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(decodePhase3)(decodePhase2));
      return function ($155) {
          return $154(decodePhase1($155));
      };
  })();
  var toIrRemoteControlCode = (function () {
      var $156 = Data_Bifunctor.rmap(Data_Either.bifunctorEither)(decodePhase4);
      return function ($157) {
          return $156(toIrCodeFrames($157));
      };
  })();
  exports["LeaderAeha"] = LeaderAeha;
  exports["LeaderNec"] = LeaderNec;
  exports["LeaderSirc"] = LeaderSirc;
  exports["LeaderUnknown"] = LeaderUnknown;
  exports["IrRemoteUnknown"] = IrRemoteUnknown;
  exports["IrRemotePanasonicHvac"] = IrRemotePanasonicHvac;
  exports["IrRemoteMitsubishiElectricHvac"] = IrRemoteMitsubishiElectricHvac;
  exports["IrRemoteHitachiHvac"] = IrRemoteHitachiHvac;
  exports["decodePhase1"] = decodePhase1;
  exports["decodePhase2"] = decodePhase2;
  exports["decodePhase3"] = decodePhase3;
  exports["decodePhase4"] = decodePhase4;
  exports["infraredCodeTextParser"] = infraredCodeTextParser;
  exports["toInfraredHexString"] = toInfraredHexString;
  exports["toIrRemoteControlCode"] = toIrRemoteControlCode;
  exports["toMilliseconds"] = toMilliseconds;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Components.InfraredCodeEditor.Form"] = $PS["Components.InfraredCodeEditor.Form"] || {};
  var exports = $PS["Components.InfraredCodeEditor.Form"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Component = $PS["Formless.Component"];
  var Formless_Data_FormFieldResult = $PS["Formless.Data.FormFieldResult"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Retrieve = $PS["Formless.Retrieve"];
  var Formless_Transform_Record = $PS["Formless.Transform.Record"];
  var Formless_Transform_Row = $PS["Formless.Transform.Row"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Formless_Validation = $PS["Formless.Validation"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Themes_Bootstrap4 = $PS["Halogen.Themes.Bootstrap4"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];
  var InfraredRemote_Code = $PS["InfraredRemote.Code"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Utils = $PS["Utils"];                
  var EmptyField = (function () {
      function EmptyField() {

      };
      EmptyField.value = new EmptyField();
      return EmptyField;
  })();
  var InvalidInfraredCodeText = (function () {
      function InvalidInfraredCodeText(value0) {
          this.value0 = value0;
      };
      InvalidInfraredCodeText.create = function (value0) {
          return new InvalidInfraredCodeText(value0);
      };
      return InvalidInfraredCodeText;
  })();
  var IRCodeEditForm = function (x) {
      return x;
  };
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Reset = (function () {
      function Reset() {

      };
      Reset.value = new Reset();
      return Reset;
  })();
  var OnClickReset = (function () {
      function OnClickReset() {

      };
      OnClickReset.value = new OnClickReset();
      return OnClickReset;
  })();
  var OnClickSeparate32bits = (function () {
      function OnClickSeparate32bits(value0) {
          this.value0 = value0;
      };
      OnClickSeparate32bits.create = function (value0) {
          return new OnClickSeparate32bits(value0);
      };
      return OnClickSeparate32bits;
  })();
  var validateInfraredCode = function (dictMonadAff) {
      var go = function (input) {
          var ok = Data_Function["const"](input);
          return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(InvalidInfraredCodeText.create)(ok)(Text_Parsing_Parser.runParser(input)(InfraredRemote_Code.infraredCodeTextParser));
      };
      return Formless_Validation.hoistFnE_((dictMonadAff.MonadEffect0()).Monad0())(go);
  };
  var validators = function (dictMonadAff) {
      return {
          infraredCodeText: validateInfraredCode(dictMonadAff)
      };
  };   
  var newtypeIRCodeEditForm$prime = new Data_Newtype.Newtype(function (n) {
      return n;
  }, IRCodeEditForm);
  var initialInputs = Formless_Transform_Record.wrapInputFields(newtypeIRCodeEditForm$prime)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
      return "infraredCodeText";
  }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()()))({
      infraredCodeText: ""
  });
  var help = (function () {
      var good = function (str) {
          return Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Core.text(str) ]);
      };
      var initial = good("write a infrared codes");
      var bad = function (err) {
          var v = Text_Parsing_Parser.parseErrorPosition(err);
          var msg = Text_Parsing_Parser.parseErrorMessage(err);
          var line = Data_Int.toStringAs(Data_Int.decimal)(v.line);
          var col = Data_Int.toStringAs(Data_Int.decimal)(v.column);
          var pos = "line: " + (line + (" column: " + col));
          return Halogen_HTML_Elements.p_([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.textDanger) ])([ Halogen_HTML_Core.text(msg) ]), Halogen_HTML_Core.text(" at " + pos) ]);
      };
      return function (v) {
          if (v instanceof Formless_Data_FormFieldResult.NotValidated) {
              return initial;
          };
          if (v instanceof Formless_Data_FormFieldResult.Validating) {
              return good("validating...");
          };
          if (v instanceof Formless_Data_FormFieldResult["Error"] && v.value0 instanceof EmptyField) {
              return initial;
          };
          if (v instanceof Formless_Data_FormFieldResult["Error"] && v.value0 instanceof InvalidInfraredCodeText) {
              return bad(v.value0.value0);
          };
          if (v instanceof Formless_Data_FormFieldResult.Success) {
              return good("good");
          };
          throw new Error("Failed pattern match at Components.InfraredCodeEditor.Form (line 198, column 8 - line 203, column 53): " + [ v.constructor.name ]);
      };
  })();
  var formatTo32bits = (function () {
      var go = function (in_) {
          var text = Utils.removeAllSpaces(in_);
          var arr = Data_String_CodePoints.toCodePointArray(text);
          var arrarr = Utils.toArrayArray(8)(arr);
          var strArrArr = Data_Functor.map(Data_Functor.functorArray)(Data_String_CodePoints.fromCodePointArray)(arrarr);
          return Data_String_Common.joinWith(" ")(strArrArr);
      };
      var $31 = Data_Functor.map(Data_Functor.functorArray)(go);
      return function ($32) {
          return Utils.unlines($31(Utils.lines($32)));
      };
  })();
  var _infraredCodeText = Data_Symbol.SProxy.value;
  var component = function (dictMonadAff) {
      var textarea = function (state) {
          return Halogen_HTML_Elements.textarea([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.formControl, Halogen_Themes_Bootstrap4.textMonospace ]), Halogen_HTML_Properties.rows(5), Halogen_HTML_Properties.placeholder("Write an on-off pair count (32-bit little endianness) hexadecimal number or json made with 'pigpio irrp.py' file or Click download button."), Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "infraredCodeText";
          }))(newtypeIRCodeEditForm$prime)()(_infraredCodeText)(state.form)), Halogen_HTML_Events.onValueInput((function () {
              var $33 = Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))(newtypeIRCodeEditForm$prime)()(_infraredCodeText);
              return function ($34) {
                  return Data_Maybe.Just.create($33($34));
              };
          })()), Halogen_HTML_Events.onValueChange(function (v) {
              return new Data_Maybe.Just(Formless_Action.submit);
          }) ]);
      };
      var separate32bitsButton = function (state) {
          return function (isActive) {
              return Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.m1, Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.btnLight, Halogen_Themes_Bootstrap4.justifyContentCenter ]), Halogen_HTML_Events.onClick(function (v) {
                  return Data_Maybe.Just.create(Formless_Action.injAction(new OnClickSeparate32bits(state)));
              }), (function () {
                  if (isActive) {
                      return Halogen_HTML_Properties.attr("active")("active");
                  };
                  return Halogen_HTML_Properties.attr("disabled")("disabled");
              })() ])([ Halogen_HTML_Core.text("separate to 32bits") ]);
          };
      };
      var resetButton = function (isActive) {
          return Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.m1, Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.btnLight, Halogen_Themes_Bootstrap4.justifyContentCenter ]), Halogen_HTML_Events.onClick(function (v) {
              return Data_Maybe.Just.create(Formless_Action.injAction(OnClickReset.value));
          }), (function () {
              if (isActive) {
                  return Halogen_HTML_Properties.attr("active")("active");
              };
              return Halogen_HTML_Properties.attr("disabled")("disabled");
          })() ])([ Halogen_HTML_Core.text("Reset") ]);
      };
      var renderFormless = function (state) {
          return Halogen_HTML_Elements.div_([ resetButton(true), separate32bitsButton(state)(true), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.formGroup), Halogen_HTML_Events.onKeyUp(function (v) {
              return new Data_Maybe.Just(Formless_Action.submit);
          }) ])([ Halogen_HTML_Elements.label_([ Halogen_HTML_Core.text("on-off counts (count is based on 38kHz carrier)") ]), textarea(state), help(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
              return "infraredCodeText";
          }))(newtypeIRCodeEditForm$prime)()(_infraredCodeText)(state.form)) ]) ]);
      };
      var initialState = function (v) {
          return {
              validators: validators(dictMonadAff),
              initialInputs: new Data_Maybe.Just(initialInputs)
          };
      };
      var handleEvent = function (v) {
          if (v instanceof Formless_Types_Component.Submitted) {
              return Halogen_Query_HalogenM.raise(Text.create(Formless_Transform_Record.unwrapOutputFields(newtypeIRCodeEditForm$prime)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()()))(v.value0)));
          };
          if (v instanceof Formless_Types_Component.Changed) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
          };
          throw new Error("Failed pattern match at Components.InfraredCodeEditor.Form (line 173, column 17 - line 178, column 18): " + [ v.constructor.name ]);
      };
      var handleAction = (function () {
          var $$eval = function (act) {
              return Formless_Component.handleAction(dictMonadAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)())(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))()(Formless_Internal_Transform.inputFieldsToInputNil)())(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))()(Formless_Internal_Transform.nilCountErrors))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))()(Formless_Internal_Transform.nilAllTouched))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.modifyAllNil))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))((dictMonadAff.MonadEffect0()).Monad0())()(newtypeIRCodeEditForm$prime)()()(Formless_Internal_Transform.applyToValidationNil((dictMonadAff.MonadEffect0()).Monad0())))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "infraredCodeText";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)())(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)()(handleAction)(handleEvent)(act);
          };
          return function (v) {
              if (v instanceof OnClickReset) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)($$eval(Formless_Action.resetAll))(function () {
                      return Halogen_Query_HalogenM.raise(Reset.value);
                  });
              };
              if (v instanceof OnClickSeparate32bits) {
                  var txt = Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                      return "infraredCodeText";
                  }))(newtypeIRCodeEditForm$prime)()(_infraredCodeText)(v.value0.form);
                  var $$new = formatTo32bits(txt);
                  return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                      return "infraredCodeText";
                  }))(newtypeIRCodeEditForm$prime)()(_infraredCodeText)($$new));
              };
              throw new Error("Failed pattern match at Components.InfraredCodeEditor.Form (line 181, column 18 - line 191, column 56): " + [ v.constructor.name ]);
          };
      })();
      return Formless_Component.component(dictMonadAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)())(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))()(Formless_Internal_Transform.inputFieldsToInputNil)())(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))()(Formless_Internal_Transform.nilCountErrors))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))()(Formless_Internal_Transform.nilAllTouched))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.modifyAllNil))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))((dictMonadAff.MonadEffect0()).Monad0())()(newtypeIRCodeEditForm$prime)()()(Formless_Internal_Transform.applyToValidationNil((dictMonadAff.MonadEffect0()).Monad0())))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)())(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "infraredCodeText";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowNil)())(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)(newtypeIRCodeEditForm$prime)()()()()()()()()()(initialState)({
          render: renderFormless,
          handleAction: handleAction,
          handleQuery: Formless_Component.defaultSpec.handleQuery,
          handleEvent: handleEvent,
          receive: Formless_Component.defaultSpec.receive,
          initialize: Formless_Component.defaultSpec.initialize,
          finalize: Formless_Component.defaultSpec.finalize
      });
  };
  exports["Text"] = Text;
  exports["Reset"] = Reset;
  exports["component"] = component;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.warn = function (s) {
    return function () {
      console.warn(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  var Data_Show = $PS["Data.Show"];
  var logShow = function (dictShow) {
      return function (a) {
          return $foreign.log(Data_Show.show(dictShow)(a));
      };
  };
  exports["logShow"] = logShow;
  exports["warn"] = $foreign.warn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Class.Console"] = $PS["Effect.Class.Console"] || {};
  var exports = $PS["Effect.Class.Console"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var logShow = function (dictMonadEffect) {
      return function (dictShow) {
          var $26 = Effect_Class.liftEffect(dictMonadEffect);
          var $27 = Effect_Console.logShow(dictShow);
          return function ($28) {
              return $26($27($28));
          };
      };
  };
  exports["logShow"] = logShow;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.HTML"] = $PS["Halogen.HTML"] || {};
  var exports = $PS["Halogen.HTML"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];        
  var slot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (component) {
                          return function (input) {
                              return function (outputQuery) {
                                  return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot()(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(outputQuery)));
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["slot"] = slot;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Components.InfraredCodeEditor"] = $PS["Components.InfraredCodeEditor"] || {};
  var exports = $PS["Components.InfraredCodeEditor"];
  var Components_InfraredCodeEditor_Form = $PS["Components.InfraredCodeEditor.Form"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class_Console = $PS["Effect.Class.Console"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];                
  var TextChanged = (function () {
      function TextChanged(value0) {
          this.value0 = value0;
      };
      TextChanged.create = function (value0) {
          return new TextChanged(value0);
      };
      return TextChanged;
  })();
  var Reset = (function () {
      function Reset() {

      };
      Reset.value = new Reset();
      return Reset;
  })();
  var HandleInput = (function () {
      function HandleInput(value0) {
          this.value0 = value0;
      };
      HandleInput.create = function (value0) {
          return new HandleInput(value0);
      };
      return HandleInput;
  })();
  var HandleEditingForm = (function () {
      function HandleEditingForm(value0) {
          this.value0 = value0;
      };
      HandleEditingForm.create = function (value0) {
          return new HandleEditingForm(value0);
      };
      return HandleEditingForm;
  })();
  var render = function (dictMonadAff) {
      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "formless";
      }))(Data_Ord.ordUnit)(Formless_Types_Component["_formless"])(Data_Unit.unit)(Components_InfraredCodeEditor_Form.component(dictMonadAff))(Data_Unit.unit)(function ($10) {
          return Data_Maybe.Just.create(HandleEditingForm.create($10));
      });
  };
  var handleAction = function (dictMonadAff) {
      return function (v) {
          if (v instanceof HandleInput) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class_Console.logShow(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Show.showString)("Input"))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
              });
          };
          if (v instanceof HandleEditingForm && v.value0 instanceof Components_InfraredCodeEditor_Form.Text) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class_Console.logShow(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Show.showString)("IRCodeEditForm---"))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new TextChanged(v.value0.value0.infraredCodeText)))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                  });
              });
          };
          if (v instanceof HandleEditingForm && v.value0 instanceof Components_InfraredCodeEditor_Form.Reset) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(Reset.value))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
              });
          };
          throw new Error("Failed pattern match at Components.InfraredCodeEditor (line 75, column 16 - line 90, column 16): " + [ v.constructor.name ]);
      };
  };
  var component = function (dictMonadAff) {
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: Data_Function["const"](render(dictMonadAff)),
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction(dictMonadAff),
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: function ($11) {
                  return Data_Maybe.Just.create(HandleInput.create($11));
              },
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  exports["TextChanged"] = TextChanged;
  exports["Reset"] = Reset;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.Fork.Class"] = $PS["Control.Monad.Fork.Class"] || {};
  var exports = $PS["Control.Monad.Fork.Class"];
  var Effect_Aff = $PS["Effect.Aff"];
  var MonadFork = function (Functor1, Monad0, fork, join, suspend) {
      this.Functor1 = Functor1;
      this.Monad0 = Monad0;
      this.fork = fork;
      this.join = join;
      this.suspend = suspend;
  };
  var monadForkAff = new MonadFork(function () {
      return Effect_Aff.functorFiber;
  }, function () {
      return Effect_Aff.monadAff;
  }, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);
  var fork = function (dict) {
      return dict.fork;
  };
  exports["fork"] = fork;
  exports["monadForkAff"] = monadForkAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Parallel"] = $PS["Control.Parallel"] || {};
  var exports = $PS["Control.Parallel"];
  var Control_Category = $PS["Control.Category"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Foldable = $PS["Data.Foldable"];                      
  var parTraverse_ = function (dictParallel) {
      return function (dictFoldable) {
          return function (f) {
              var $17 = Control_Parallel_Class.sequential(dictParallel);
              var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)((function () {
                  var $20 = Control_Parallel_Class.parallel(dictParallel);
                  return function ($21) {
                      return $20(f($21));
                  };
              })());
              return function ($19) {
                  return $17($18($19));
              };
          };
      };
  };
  var parSequence_ = function (dictParallel) {
      return function (dictFoldable) {
          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["parSequence_"] = parSequence_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Formatter.Number"] = $PS["Data.Formatter.Number"] || {};
  var exports = $PS["Data.Formatter.Number"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Formatter_Internal = $PS["Data.Formatter.Internal"];
  var Data_Formatter_Parser_Utils = $PS["Data.Formatter.Parser.Utils"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Traversable = $PS["Data.Traversable"];
  var $$Math = $PS["Math"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var formatParser = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.optionMaybe(Data_Identity.monadIdentity)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("+"))))(function (sign) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("0")))(function (before) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.optionMaybe(Data_Identity.monadIdentity)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(",0"))))(function (comma) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.optionMaybe(Data_Identity.monadIdentity)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("."))))(function (dot) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Traversable["for"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Traversable.traversableMaybe)(dot)(function (v) {
                      return Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("0")));
                  }))(function (after) {
                      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.optionMaybe(Data_Identity.monadIdentity)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("a"))))(function (abbreviations) {
                          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))({
                              sign: Data_Maybe.isJust(sign),
                              before: Data_Array.length(before),
                              comma: Data_Maybe.isJust(comma),
                              after: Data_Maybe.fromMaybe(0)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.length)(after)),
                              abbreviations: Data_Maybe.isJust(abbreviations)
                          });
                      });
                  });
              });
          });
      });
  });
  var parseFormatString = Data_Formatter_Parser_Utils.runP(Text_Parsing_Parser_String.stringLikeString)(formatParser);
  var format = function (v) {
      return function (num) {
          var absed = $$Math.abs(num);
          var tens = (function () {
              var $43 = absed > 0.0;
              if ($43) {
                  return Data_Ord.max(Data_Ord.ordInt)(Data_Int.floor($$Math.log(absed) / $$Math.ln10))(0);
              };
              return 0;
          })();
          if (v.abbreviations) {
              var thousands = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(tens)(3);
              var newNum = (function () {
                  var $45 = thousands < 1;
                  if ($45) {
                      return num;
                  };
                  return num / $$Math.pow(1000.0)(Data_Int.toNumber(thousands));
              })();
              var abbr = (function () {
                  if (thousands === 0) {
                      return "";
                  };
                  if (thousands === 1) {
                      return "K";
                  };
                  if (thousands === 2) {
                      return "M";
                  };
                  if (thousands === 3) {
                      return "G";
                  };
                  if (thousands === 4) {
                      return "T";
                  };
                  if (thousands === 5) {
                      return "P";
                  };
                  if (thousands === 6) {
                      return "E";
                  };
                  if (thousands === 7) {
                      return "Z";
                  };
                  if (thousands === 8) {
                      return "Y";
                  };
                  if (Data_Boolean.otherwise) {
                      return "10e+" + Data_Show.show(Data_Show.showInt)(thousands * 3 | 0);
                  };
                  throw new Error("Failed pattern match at Data.Formatter.Number (line 98, column 10 - line 107, column 59): " + [  ]);
              })();
              return format({
                  comma: v.comma,
                  before: v.before,
                  after: v.after,
                  abbreviations: false,
                  sign: v.sign
              })(newNum) + abbr;
          };
          var zeros = (v.before - tens | 0) - 1 | 0;
          var integer = Data_Int.floor(absed);
          var leftover = absed - Data_Int.toNumber(integer);
          var rounded = Data_Int.round(leftover * $$Math.pow(10.0)(Data_Int.toNumber(v.after)));
          var roundedWithZeros = (function () {
              var roundedString = Data_Show.show(Data_Show.showInt)(rounded);
              var roundedLength = Data_String_CodePoints.length(roundedString);
              var zeros$prime = Data_Formatter_Internal.repeat(Data_Monoid.monoidString)("0")(v.after - roundedLength | 0);
              return zeros$prime + roundedString;
          })();
          var addCommas = function ($copy_acc) {
              return function ($copy_counter) {
                  return function ($copy_input) {
                      var $tco_var_acc = $copy_acc;
                      var $tco_var_counter = $copy_counter;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(acc, counter, input) {
                          var v1 = Data_Array.uncons(input);
                          if (v1 instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return Data_String_CodeUnits.fromCharArray(acc);
                          };
                          if (v1 instanceof Data_Maybe.Just && counter < 3) {
                              $tco_var_acc = Data_Array.cons(v1.value0.head)(acc);
                              $tco_var_counter = counter + 1 | 0;
                              $copy_input = v1.value0.tail;
                              return;
                          };
                          $tco_var_acc = Data_Array.cons(",")(acc);
                          $tco_var_counter = 0;
                          $copy_input = input;
                          return;
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_acc, $tco_var_counter, $copy_input);
                      };
                      return $tco_result;
                  };
              };
          };
          var shownNumber = (function () {
              if (v.comma) {
                  return addCommas([  ])(0)(Data_Array.reverse(Data_String_CodeUnits.toCharArray(Data_Formatter_Internal.repeat(Data_Monoid.monoidString)("0")(zeros) + Data_Show.show(Data_Show.showInt)(integer))));
              };
              return Data_Formatter_Internal.repeat(Data_Monoid.monoidString)("0")(zeros) + Data_Show.show(Data_Show.showInt)(integer);
          })();
          return (function () {
              var $51 = num < 0;
              if ($51) {
                  return "-";
              };
              var $52 = num > 0 && v.sign;
              if ($52) {
                  return "+";
              };
              return "";
          })() + (shownNumber + (function () {
              var $53 = v.after < 1;
              if ($53) {
                  return "";
              };
              return "." + ((function () {
                  var $54 = rounded === 0;
                  if ($54) {
                      return Data_Formatter_Internal.repeat(Data_Monoid.monoidString)("0")(v.after);
                  };
                  return "";
              })() + (function () {
                  var $55 = rounded > 0;
                  if ($55) {
                      return roundedWithZeros;
                  };
                  return "";
              })());
          })());
      };
  };
  var formatNumber = function (pattern) {
      return function (number) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(parseFormatString(pattern))(Data_Function.flip(format)(number));
      };
  };
  exports["formatNumber"] = formatNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Void"] = $PS["Data.Void"] || {};
  var exports = $PS["Data.Void"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  exports["absurd"] = absurd;
})(PS);
(function(exports) {
  "use strict";

  exports.now = function () {
    return Date.now();
  };
})(PS["Effect.Now"] = PS["Effect.Now"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Now"] = $PS["Effect.Now"] || {};
  var exports = $PS["Effect.Now"];
  var $foreign = $PS["Effect.Now"];
  exports["now"] = $foreign.now;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";

  exports.setTimeout = function (ms) {
    return function (fn) {
      return function () {
        return setTimeout(fn, ms);
      };
    };
  };
})(PS["Effect.Timer"] = PS["Effect.Timer"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Effect.Timer"] = $PS["Effect.Timer"] || {};
  var exports = $PS["Effect.Timer"];
  var $foreign = $PS["Effect.Timer"];
  exports["setTimeout"] = $foreign.setTimeout;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Aff.Driver.State"] = $PS["Halogen.Aff.Driver.State"] || {};
  var exports = $PS["Halogen.Aff.Driver.State"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX_ = function (dictApplicative) {
      return function (f) {
          return unDriverStateX(function (st) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
          });
      };
  };
  var mkRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX = function (dictFunctor) {
      return function (f) {
          return unDriverStateX(function (st) {
              return mkRenderStateX(f(st.rendering));
          });
      };
  };
  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
  var mapDriverState = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var initDriverState = function (component) {
      return function (input) {
          return function (handler) {
              return function (lchs) {
                  return function __do() {
                      var selfRef = Effect_Ref["new"]({})();
                      var childrenIn = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var childrenOut = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var handlerRef = Effect_Ref["new"](handler)();
                      var pendingQueries = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var pendingOuts = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var pendingHandlers = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                      var fresh = Effect_Ref["new"](1)();
                      var subscriptions = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
                      var forks = Effect_Ref["new"](Data_Map_Internal.empty)();
                      var ds = {
                          component: component,
                          state: component.initialState(input),
                          refs: Data_Map_Internal.empty,
                          children: Halogen_Data_Slot.empty,
                          childrenIn: childrenIn,
                          childrenOut: childrenOut,
                          selfRef: selfRef,
                          handlerRef: handlerRef,
                          pendingQueries: pendingQueries,
                          pendingOuts: pendingOuts,
                          pendingHandlers: pendingHandlers,
                          rendering: Data_Maybe.Nothing.value,
                          fresh: fresh,
                          subscriptions: subscriptions,
                          forks: forks,
                          lifecycleHandlers: lchs
                      };
                      Effect_Ref.write(ds)(selfRef)();
                      return mkDriverStateXRef(selfRef);
                  };
              };
          };
      };
  };
  exports["mapDriverState"] = mapDriverState;
  exports["unDriverStateX"] = unDriverStateX;
  exports["renderStateX"] = renderStateX;
  exports["renderStateX_"] = renderStateX_;
  exports["unRenderStateX"] = unRenderStateX;
  exports["initDriverState"] = initDriverState;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Query.ChildQuery"] = $PS["Halogen.Query.ChildQuery"] || {};
  var exports = $PS["Halogen.Query.ChildQuery"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unChildQueryBox = Unsafe_Coerce.unsafeCoerce;
  exports["unChildQueryBox"] = unChildQueryBox;
})(PS);
(function(exports) {
  "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Unsafe.Reference"] = $PS["Unsafe.Reference"] || {};
  var exports = $PS["Unsafe.Reference"];
  var $foreign = $PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Aff.Driver.Eval"] = $PS["Halogen.Aff.Driver.Eval"] || {};
  var exports = $PS["Halogen.Aff.Driver.Eval"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Free = $PS["Control.Applicative.Free"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];                
  var unsubscribe = function (sid) {
      return function (ref) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v.subscriptions)))(function (subs) {
                  return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Halogen_Query_EventSource.finalize)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs));
              });
          });
      };
  };
  var queueOrRun = function (ref) {
      return function (au) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return au;
              };
              if (v instanceof Data_Maybe.Just) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 195, column 33 - line 197, column 57): " + [ v.constructor.name ]);
          });
      };
  };
  var handleLifecycle = function (lchs) {
      return function (f) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
              initializers: Data_List_Types.Nil.value,
              finalizers: Data_List_Types.Nil.value
          })(lchs)))(function () {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (result) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v.finalizers))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v.initializers))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(result);
                          });
                      });
                  });
              });
          });
      };
  };
  var fresh = function (f) {
      return function (ref) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
                  return {
                      state: i + 1 | 0,
                      value: f(i)
                  };
              })(v.fresh));
          });
      };
  };
  var evalQ = function (render) {
      return function (ref) {
          return function (q) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                  return evalM(render)(ref)(v["component"]["eval"](new Halogen_Query_HalogenQ.Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function["const"](Data_Maybe.Nothing.value))));
              });
          };
      };
  };
  var evalM = function (render) {
      return function (initRef) {
          return function (v) {
              var evalChildQuery = function (ref) {
                  return function (cqb) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Halogen_Query_ChildQuery.unChildQueryBox(function (v2) {
                              var evalChild = function (v3) {
                                  return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3)))(function (dsx) {
                                      return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                          return evalQ(render)(ds.selfRef)(v2.value1);
                                      })(dsx);
                                  }));
                              };
                              return Data_Functor.map(Effect_Aff.functorAff)(v2.value2)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));
                          })(cqb);
                      });
                  };
              };
              var go = function (ref) {
                  return function (v1) {
                      if (v1 instanceof Halogen_Query_HalogenM.State) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              var v3 = v1.value0(v2.state);
                              if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                              };
                              if (Data_Boolean.otherwise) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                                      component: v2.component,
                                      state: v3.value1,
                                      refs: v2.refs,
                                      children: v2.children,
                                      childrenIn: v2.childrenIn,
                                      childrenOut: v2.childrenOut,
                                      selfRef: v2.selfRef,
                                      handlerRef: v2.handlerRef,
                                      pendingQueries: v2.pendingQueries,
                                      pendingOuts: v2.pendingOuts,
                                      pendingHandlers: v2.pendingHandlers,
                                      rendering: v2.rendering,
                                      fresh: v2.fresh,
                                      subscriptions: v2.subscriptions,
                                      forks: v2.forks,
                                      lifecycleHandlers: v2.lifecycleHandlers
                                  })(ref)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function () {
                                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 85, column 7 - line 91, column 21): " + [ v3.constructor.name ]);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Subscribe) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function (sid) {
                              var v2 = v1.value0(sid);
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v3) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Effect_Aff.bindAff)(v2)(function (v4) {
                                      var done = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3.subscriptions)))(function (subs) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordSubscriptionId)(sid)))(v3.subscriptions)))(function () {
                                              return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))(Halogen_Query_EventSource.finalize(v4.finalizer));
                                          });
                                      });
                                      var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (act) {
                                          return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3.subscriptions))))(function (subs) {
                                              return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))(new Data_Maybe.Just(true)))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalF(render)(ref)(new Halogen_Query_Input.Action(act)))))(function () {
                                                  return consumer;
                                              }));
                                          });
                                      });
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId)(sid)(done)))(v3.subscriptions)))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)(consumer)(v4.producer)))(function () {
                                              return Halogen_Query_EventSource.finalize(done);
                                          });
                                      });
                                  })))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(sid));
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(unsubscribe(v1.value0)(ref))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Lift) {
                          return v1.value0;
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) {
                          return evalChildQuery(ref)(v1.value0);
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Raise) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.handlerRef)))(function (handler) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Par) {
                          return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp((function () {
                              var $85 = Control_Parallel_Class.parallel(Effect_Aff.parallelAff);
                              var $86 = evalM(render)(ref);
                              return function ($87) {
                                  return $85($86($87));
                              };
                          })())(v1.value0)));
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Fork) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function (fid) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (doneRef) {
                                      return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Effect_Aff["finally"](Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                          Effect_Ref.modify_(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordForkId)(fid))(v2.forks)();
                                          return Effect_Ref.write(true)(doneRef)();
                                      }))(evalM(render)(ref)(v1.value0))))(function (fiber) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.unlessM(Effect.monadEffect)(Effect_Ref.read(doneRef))(Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId)(fid)(fiber))(v2.forks))))(function () {
                                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(fid));
                                          });
                                      });
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Kill) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.forks)))(function (forkMap) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Effect_Aff.killFiber(Effect_Exception.error("Cancelled")))(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId)(v1.value0)(forkMap)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.GetRef) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0)(v2.refs)));
                          });
                      };
                      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 82, column 12 - line 146, column 33): " + [ v1.constructor.name ]);
                  };
              };
              return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(initRef))(v);
          };
      };
  };
  var evalF = function (render) {
      return function (ref) {
          return function (v) {
              if (v instanceof Halogen_Query_Input.RefUpdate) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function (st) {
                      return {
                          component: st.component,
                          state: st.state,
                          refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(st.refs),
                          children: st.children,
                          childrenIn: st.childrenIn,
                          childrenOut: st.childrenOut,
                          selfRef: st.selfRef,
                          handlerRef: st.handlerRef,
                          pendingQueries: st.pendingQueries,
                          pendingOuts: st.pendingOuts,
                          pendingHandlers: st.pendingHandlers,
                          rendering: st.rendering,
                          fresh: st.fresh,
                          subscriptions: st.subscriptions,
                          forks: st.forks,
                          lifecycleHandlers: st.lifecycleHandlers
                      };
                  })));
              };
              if (v instanceof Halogen_Query_Input.Action) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                      return evalM(render)(ref)(v1["component"]["eval"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));
                  });
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 51, column 20 - line 57, column 62): " + [ v.constructor.name ]);
          };
      };
  };
  exports["evalF"] = evalF;
  exports["evalQ"] = evalQ;
  exports["evalM"] = evalM;
  exports["handleLifecycle"] = handleLifecycle;
  exports["queueOrRun"] = queueOrRun;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Aff.Driver"] = $PS["Halogen.Aff.Driver"] || {};
  var exports = $PS["Halogen.Aff.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_Eval = $PS["Halogen.Aff.Driver.Eval"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];                
  var newLifecycleHandlers = Effect_Ref["new"]({
      initializers: Data_List_Types.Nil.value,
      finalizers: Data_List_Types.Nil.value
  });
  var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var handlePending = function (ref) {
      return function __do() {
          var queue = Effect_Ref.read(ref)();
          Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(queue)((function () {
              var $28 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
              return function ($29) {
                  return handleAff($28(Data_List.reverse($29)));
              };
          })())();
      };
  };
  var cleanupSubscriptionsAndForks = function (v) {
      return function __do() {
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)((function () {
              var $30 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)((function () {
                  var $32 = Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff);
                  return function ($33) {
                      return $32(Halogen_Query_EventSource.finalize($33));
                  };
              })());
              return function ($31) {
                  return handleAff($30($31));
              };
          })()))(Effect_Ref.read(v.subscriptions))();
          Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)((function () {
              var $34 = Effect_Aff.killFiber(Effect_Exception.error("finalized"));
              return function ($35) {
                  return handleAff($34($35));
              };
          })()))(Effect_Ref.read(v.forks))();
          return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();
      };
  };
  var runUI = function (renderSpec) {
      return function (component) {
          return function (i) {
              var subscribe = function (fresh) {
                  return function (ref) {
                      return function (consumer) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (inputVar) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                  var listenerId = Effect_Ref.read(fresh)();
                                  Effect_Ref.modify_(function (v) {
                                      return v + 1 | 0;
                                  })(fresh)();
                                  Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(listenerId)(inputVar))(ref)();
                                  return listenerId;
                              }))(function (listenerId) {
                                  var producer = Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Either.either(Data_Function["const"](new Data_Either.Right(Data_Unit.unit)))(Data_Either.Left.create))(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_AVar.take(inputVar))));
                                  return Data_Functor["void"](Effect_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(producer)(consumer)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(listenerId))(ref)))(function () {
                                          return Effect_Aff_AVar.kill(Effect_Exception.error("ended"))(inputVar);
                                      });
                                  })));
                              });
                          });
                      };
                  };
              };
              var rootHandler = function (ref) {
                  return function (message) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (listeners) {
                          return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map_Internal.functorMap)(Effect_Aff_AVar.put(message))(listeners));
                      });
                  };
              };
              var squashChildInitializers = function (lchs) {
                  return function (preInits) {
                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                          var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));
                          return Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(parentInitializer)(function () {
                                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                              handlePending(st.pendingQueries)();
                                              return handlePending(st.pendingOuts)();
                                          });
                                      });
                                  }), preInits),
                                  finalizers: handlers.finalizers
                              };
                          })(lchs);
                      });
                  };
              };
              var runComponent = function (lchs) {
                  return function (handler) {
                      return function (j) {
                          return Halogen_Component.unComponent(function (c) {
                              return function __do() {
                                  var lchs$prime = newLifecycleHandlers();
                                  var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();
                                  var pre = Effect_Ref.read(lchs)();
                                  Effect_Ref.write({
                                      initializers: Data_List_Types.Nil.value,
                                      finalizers: pre.finalizers
                                  })(lchs)();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX((function () {
                                      var $36 = render(lchs);
                                      return function ($37) {
                                          return $36((function (v) {
                                              return v.selfRef;
                                          })($37));
                                      };
                                  })()))(Effect_Ref.read($$var))();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();
                                  return $$var;
                              };
                          });
                      };
                  };
              };
              var renderChild = function (lchs) {
                  return function (handler) {
                      return function (childrenInRef) {
                          return function (childrenOutRef) {
                              return Halogen_Component.unComponentSlot(function (slot) {
                                  return function __do() {
                                      var childrenIn = Data_Functor.map(Effect.functorEffect)(slot.pop)(Effect_Ref.read(childrenInRef))();
                                      var $$var = (function () {
                                          if (childrenIn instanceof Data_Maybe.Just) {
                                              Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();
                                              var dsx = Effect_Ref.read(childrenIn.value0.value0)();
                                              Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                  return function __do() {
                                                      Data_Function.flip(Effect_Ref.write)(st.handlerRef)((function () {
                                                          var $38 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                          return function ($39) {
                                                              return $38(slot.output($39));
                                                          };
                                                      })())();
                                                      return handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](slot.input)))();
                                                  };
                                              })(dsx)();
                                              return childrenIn.value0.value0;
                                          };
                                          if (childrenIn instanceof Data_Maybe.Nothing) {
                                              if (slot.input instanceof Halogen_Query_HalogenQ.Receive) {
                                                  return runComponent(lchs)((function () {
                                                      var $40 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                      return function ($41) {
                                                          return $40(slot.output($41));
                                                      };
                                                  })())(slot.input.value0)(slot.component)();
                                              };
                                              return Effect_Exception["throw"]("Halogen internal error: slot input was not a Receive query")();
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 236, column 14 - line 249, column 81): " + [ childrenIn.constructor.name ]);
                                      })();
                                      var isDuplicate = Data_Functor.map(Effect.functorEffect)(function ($42) {
                                          return Data_Maybe.isJust(slot.get($42));
                                      })(Effect_Ref.read(childrenOutRef))();
                                      Control_Applicative.when(Effect.applicativeEffect)(isDuplicate)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                      Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();
                                      return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read($$var))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v) {
                                          if (v instanceof Data_Maybe.Nothing) {
                                              return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                          };
                                          if (v instanceof Data_Maybe.Just) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v.value0));
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 254, column 37 - line 256, column 50): " + [ v.constructor.name ]);
                                      }))();
                                  };
                              });
                          };
                      };
                  };
              };
              var render = function (lchs) {
                  return function ($$var) {
                      return function __do() {
                          var v = Effect_Ref.read($$var)();
                          var shouldProcessHandlers = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
                          Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
                          Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();
                          Effect_Ref.write(v.children)(v.childrenIn)();
                          var selfRef = Control_Category.identity(Control_Category.categoryFn)(v.selfRef);
                          var pendingQueries = Control_Category.identity(Control_Category.categoryFn)(v.pendingQueries);
                          var pendingHandlers = Control_Category.identity(Control_Category.categoryFn)(v.pendingHandlers);
                          var handler = (function () {
                              var $43 = Halogen_Aff_Driver_Eval.queueOrRun(pendingHandlers);
                              var $44 = Data_Functor["void"](Effect_Aff.functorAff);
                              var $45 = Halogen_Aff_Driver_Eval.evalF(render)(selfRef);
                              return function ($46) {
                                  return $43($44($45($46)));
                              };
                          })();
                          var childHandler = (function () {
                              var $47 = Halogen_Aff_Driver_Eval.queueOrRun(pendingQueries);
                              return function ($48) {
                                  return $47(handler(Halogen_Query_Input.Action.create($48)));
                              };
                          })();
                          var rendering = renderSpec.render(function ($49) {
                              return handleAff(handler($49));
                          })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                          var children = Effect_Ref.read(v.childrenOut)();
                          var childrenIn = Effect_Ref.read(v.childrenIn)();
                          Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(childrenIn)(function (v1) {
                              return function __do() {
                                  var childDS = Effect_Ref.read(v1)();
                                  Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(childDS)();
                                  return finalize(lchs)(childDS)();
                              };
                          })();
                          Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function (ds$prime) {
                              return {
                                  component: ds$prime.component,
                                  state: ds$prime.state,
                                  refs: ds$prime.refs,
                                  children: children,
                                  childrenIn: ds$prime.childrenIn,
                                  childrenOut: ds$prime.childrenOut,
                                  selfRef: ds$prime.selfRef,
                                  handlerRef: ds$prime.handlerRef,
                                  pendingQueries: ds$prime.pendingQueries,
                                  pendingOuts: ds$prime.pendingOuts,
                                  pendingHandlers: ds$prime.pendingHandlers,
                                  rendering: new Data_Maybe.Just(rendering),
                                  fresh: ds$prime.fresh,
                                  subscriptions: ds$prime.subscriptions,
                                  forks: ds$prime.forks,
                                  lifecycleHandlers: ds$prime.lifecycleHandlers
                              };
                          }))();
                          return Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v1) {
                              return function __do() {
                                  var handlers = Effect_Ref.read(pendingHandlers)();
                                  Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(pendingHandlers)();
                                  Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)((function () {
                                      var $50 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
                                      return function ($51) {
                                          return handleAff($50(Data_List.reverse($51)));
                                      };
                                  })())(handlers)();
                                  var mmore = Effect_Ref.read(pendingHandlers)();
                                  var $24 = Data_Maybe.maybe(false)(Data_List["null"])(mmore);
                                  if ($24) {
                                      return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                  };
                                  return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                              };
                          }))();
                      };
                  };
              };
              var finalize = function (lchs) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                      return function __do() {
                          cleanupSubscriptionsAndForks(st)();
                          var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));
                          Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: handlers.initializers,
                                  finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                              };
                          })(lchs)();
                          return Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(st.children)(function (v) {
                              return function __do() {
                                  var dsx = Effect_Ref.read(v)();
                                  return finalize(lchs)(dsx)();
                              };
                          })();
                      };
                  });
              };
              var evalDriver = function (disposed) {
                  return function (ref) {
                      return function (q) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(disposed)))(function (v) {
                              if (v) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                              };
                              return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);
                          });
                      };
                  };
              };
              var dispose = function (disposed) {
                  return function (lchs) {
                      return function (dsx) {
                          return function (subsRef) {
                              return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                                  var v = Effect_Ref.read(disposed)();
                                  if (v) {
                                      return Data_Unit.unit;
                                  };
                                  Effect_Ref.write(true)(disposed)();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)((function () {
                                      var $52 = Effect_Aff_AVar.kill(Effect_Exception.error("disposed"));
                                      return function ($53) {
                                          return Effect_Aff.launchAff_($52($53));
                                      };
                                  })()))(Effect_Ref.read(subsRef))();
                                  finalize(lchs)(dsx)();
                                  return Halogen_Aff_Driver_State.unDriverStateX((function () {
                                      var $54 = Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(renderSpec.dispose);
                                      return function ($55) {
                                          return $54((function (v1) {
                                              return v1.rendering;
                                          })($55));
                                      };
                                  })())(dsx)();
                              });
                          };
                      };
                  };
              };
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (lchs) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function (fresh) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (disposed) {
                          return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                              var listeners = Effect_Ref["new"](Data_Map_Internal.empty)();
                              var dsx = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref.read)(runComponent(lchs)(rootHandler(listeners))(i)(component))();
                              return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)({
                                      query: evalDriver(disposed)(st.selfRef),
                                      subscribe: subscribe(fresh)(listeners),
                                      dispose: dispose(disposed)(lchs)(dsx)(listeners)
                                  });
                              })(dsx)();
                          });
                      });
                  });
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function(exports) {
  "use strict";                                               

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var querySelector = function (qs) {
      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $4 = $foreign["_querySelector"](qs);
      return function ($5) {
          return $3($4($5));
      };
  };
  exports["querySelector"] = querySelector;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function(exports) {
  "use strict";

  exports._readyState = function (doc) {
    return function () {
      return doc.readyState;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.HTMLDocument.ReadyState"] = $PS["Web.HTML.HTMLDocument.ReadyState"] || {};
  var exports = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var Interactive = (function () {
      function Interactive() {

      };
      Interactive.value = new Interactive();
      return Interactive;
  })();
  var Complete = (function () {
      function Complete() {

      };
      Complete.value = new Complete();
      return Complete;
  })();
  var parse = function (v) {
      if (v === "loading") {
          return new Data_Maybe.Just(Loading.value);
      };
      if (v === "interactive") {
          return new Data_Maybe.Just(Interactive.value);
      };
      if (v === "complete") {
          return new Data_Maybe.Just(Complete.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["Loading"] = Loading;
  exports["parse"] = parse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var $foreign = $PS["Web.HTML.HTMLDocument"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var toParentNode = Unsafe_Coerce.unsafeCoerce; 
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  var readyState = (function () {
      var $0 = Data_Functor.map(Effect.functorEffect)((function () {
          var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);
          return function ($3) {
              return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));
          };
      })());
      return function ($1) {
          return $0($foreign["_readyState"]($1));
      };
  })();
  exports["toDocument"] = toDocument;
  exports["toParentNode"] = toParentNode;
  exports["readyState"] = readyState;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };

  exports.history = function(window) {
    return function() {
      return window.history;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["toEventTarget"] = toEventTarget;
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
  exports["history"] = $foreign.history;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.Aff.Util"] = $PS["Halogen.Aff.Util"] || {};
  var exports = $PS["Halogen.Aff.Util"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var selectElement = function (query) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)((function () {
          var $2 = Web_DOM_ParentNode.querySelector(query);
          return function ($3) {
              return $2(Web_HTML_HTMLDocument.toParentNode($3));
          };
      })())(Web_HTML_Window.document))(Web_HTML.window)))(function (mel) {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(mel));
      });
  };
  var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var awaitLoad = Effect_Aff.makeAff(function (callback) {
      return function __do() {
          var rs = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
          if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
              var et = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var listener = Web_Event_EventTarget.eventListener(function (v) {
                  return callback(new Data_Either.Right(Data_Unit.unit));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();
              return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));
          };
          callback(new Data_Either.Right(Data_Unit.unit))();
          return Effect_Aff.nonCanceler;
      };
  });
  var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
      return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (body) {
          return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(body);
      });
  });
  exports["awaitBody"] = awaitBody;
  exports["runHalogenAff"] = runHalogenAff;
})(PS);
(function(exports) {
  "use strict";

  var getEffProp = function (name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };                                                   

  exports._parentNode = getEffProp("parentNode");          

  exports._nextSibling = getEffProp("nextSibling");

  exports.setNodeValue = function (value) {
    return function (node) {
      return function () {
        node.nodeValue = value;
        return {};
      };
    };
  };

  exports.insertBefore = function (node1) {
    return function (node2) {
      return function (parent) {
        return function () {
          return parent.insertBefore(node1, node2);
        };
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        return parent.removeChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var parentNode = (function () {
      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($4) {
          return $3($foreign["_parentNode"]($4));
      };
  })();
  var nextSibling = (function () {
      var $14 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($15) {
          return $14($foreign["_nextSibling"]($15));
      };
  })();
  exports["parentNode"] = parentNode;
  exports["nextSibling"] = nextSibling;
  exports["setNodeValue"] = $foreign.setNodeValue;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["appendChild"] = $foreign.appendChild;
  exports["removeChild"] = $foreign.removeChild;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Halogen.VDom.Driver"] = $PS["Halogen.VDom.Driver"] || {};
  var exports = $PS["Halogen.VDom.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver = $PS["Halogen.Aff.Driver"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var substInParent = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
              };
              if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
  };
  var removeChild = function (v) {
      return function __do() {
          var npn = Web_DOM_Node.parentNode(v.node)();
          return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
              return Web_DOM_Node.removeChild(v.node)(pn);
          })(npn)();
      };
  };
  var mkSpec = function (handler) {
      return function (renderChildRef) {
          return function (document) {
              var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
                  return v.node;
              });
              var done = function (st) {
                  if (st instanceof Data_Maybe.Just) {
                      return Halogen_VDom_Machine.halt(st.value0);
                  };
                  return Data_Unit.unit;
              };
              var buildWidget = function (spec) {
                  var buildThunk = Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeHTML))(spec);
                  var renderComponentSlot = function (cs) {
                      var renderChild = Effect_Ref.read(renderChildRef)();
                      var rsx = renderChild(cs)();
                      var node = getNode(rsx);
                      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, patch, done));
                  };
                  var render = function (slot) {
                      if (slot instanceof Halogen_Component.ComponentSlot) {
                          return renderComponentSlot(slot.value0);
                      };
                      if (slot instanceof Halogen_Component.ThunkSlot) {
                          var step = buildThunk(slot.value0);
                          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), patch, done));
                      };
                      throw new Error("Failed pattern match at Halogen.VDom.Driver (line 85, column 7 - line 90, column 75): " + [ slot.constructor.name ]);
                  };
                  var patch = function (st, slot) {
                      if (st instanceof Data_Maybe.Just) {
                          if (slot instanceof Halogen_Component.ComponentSlot) {
                              Halogen_VDom_Machine.halt(st.value0);
                              return renderComponentSlot(slot.value0);
                          };
                          if (slot instanceof Halogen_Component.ThunkSlot) {
                              var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);
                              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), patch, done));
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 98, column 22 - line 104, column 79): " + [ slot.constructor.name ]);
                      };
                      return render(slot);
                  };
                  return render;
              };
              var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
              return {
                  buildWidget: buildWidget,
                  buildAttributes: buildAttributes,
                  document: document
              };
          };
      };
  };
  var renderSpec = function (document) {
      return function (container) {
          var render = function (handler) {
              return function (child) {
                  return function (v) {
                      return function (v1) {
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return function __do() {
                                  var renderChildRef = Effect_Ref["new"](child)();
                                  var spec = mkSpec(handler)(renderChildRef)(document);
                                  var machine = Halogen_VDom_DOM.buildVDom(spec)(v);
                                  var node = Halogen_VDom_Machine.extract(machine);
                                  Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                                  return {
                                      machine: machine,
                                      node: node,
                                      renderChildRef: renderChildRef
                                  };
                              };
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Effect_Ref.write(child)(v1.value0.renderChildRef)();
                                  var parent = Web_DOM_Node.parentNode(v1.value0.node)();
                                  var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();
                                  var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);
                                  var newNode = Halogen_VDom_Machine.extract(machine$prime);
                                  Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();
                                  return {
                                      machine: machine$prime,
                                      node: newNode,
                                      renderChildRef: v1.value0.renderChildRef
                                  };
                              };
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 159, column 5 - line 175, column 80): " + [ v1.constructor.name ]);
                      };
                  };
              };
          };
          return {
              render: render,
              renderChild: Control_Category.identity(Control_Category.categoryFn),
              removeChild: removeChild,
              dispose: removeChild
          };
      };
  };
  var runUI = function (component) {
      return function (i) {
          return function (element) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (document) {
                  return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Page.About"] = $PS["Page.About"] || {};
  var exports = $PS["Page.About"];
  var AppM = $PS["AppM"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Themes_Bootstrap4 = $PS["Halogen.Themes.Bootstrap4"];
  var Page_Commons = $PS["Page.Commons"];
  var Route = $PS["Route"];
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Finalize = (function () {
      function Finalize() {

      };
      Finalize.value = new Finalize();
      return Finalize;
  })();
  var NavigateTo = (function () {
      function NavigateTo(value0) {
          this.value0 = value0;
      };
      NavigateTo.create = function (value0) {
          return new NavigateTo(value0);
      };
      return NavigateTo;
  })();
  var initialState = function (v) {
      return {
          session: "About"
      };
  };
  var handleQuery = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (v) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value0));
          };
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (v) {
              if (v instanceof Initialize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
              };
              if (v instanceof Finalize) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
              };
              if (v instanceof NavigateTo) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(v.value0))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                  });
              };
              throw new Error("Failed pattern match at Page.About (line 94, column 16 - line 101, column 16): " + [ v.constructor.name ]);
          };
      };
  };
  var document = [ Halogen_HTML_Elements.h2([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.h2) ])([ Halogen_HTML_Core.text("About this application") ]), Halogen_HTML_Elements.p([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.m4 ]) ])([ Halogen_HTML_Core.text("PiHVAC <"), Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/ak1211/pi_hvac") ])([ Halogen_HTML_Core.text("https://github.com/ak1211/pi_hvac") ]), Halogen_HTML_Core.text(">"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Copyright 2019 Akihiro Yamamoto") ]), Halogen_HTML_Elements.h2([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.h2) ])([ Halogen_HTML_Core.text("The License") ]), Halogen_HTML_Elements.pre([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.m4) ])([ Halogen_HTML_Core.text("\x0a                                 Apache License\x0a                           Version 2.0, January 2004\x0a                        http://www.apache.org/licenses/\x0a\x0a   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\x0a\x0a   1. Definitions.\x0a\x0a      \"License\" shall mean the terms and conditions for use, reproduction,\x0a      and distribution as defined by Sections 1 through 9 of this document.\x0a\x0a      \"Licensor\" shall mean the copyright owner or entity authorized by\x0a      the copyright owner that is granting the License.\x0a\x0a      \"Legal Entity\" shall mean the union of the acting entity and all\x0a      other entities that control, are controlled by, or are under common\x0a      control with that entity. For the purposes of this definition,\x0a      \"control\" means (i) the power, direct or indirect, to cause the\x0a      direction or management of such entity, whether by contract or\x0a      otherwise, or (ii) ownership of fifty percent (50%) or more of the\x0a      outstanding shares, or (iii) beneficial ownership of such entity.\x0a\x0a      \"You\" (or \"Your\") shall mean an individual or Legal Entity\x0a      exercising permissions granted by this License.\x0a\x0a      \"Source\" form shall mean the preferred form for making modifications,\x0a      including but not limited to software source code, documentation\x0a      source, and configuration files.\x0a\x0a      \"Object\" form shall mean any form resulting from mechanical\x0a      transformation or translation of a Source form, including but\x0a      not limited to compiled object code, generated documentation,\x0a      and conversions to other media types.\x0a\x0a      \"Work\" shall mean the work of authorship, whether in Source or\x0a      Object form, made available under the License, as indicated by a\x0a      copyright notice that is included in or attached to the work\x0a      (an example is provided in the Appendix below).\x0a\x0a      \"Derivative Works\" shall mean any work, whether in Source or Object\x0a      form, that is based on (or derived from) the Work and for which the\x0a      editorial revisions, annotations, elaborations, or other modifications\x0a      represent, as a whole, an original work of authorship. For the purposes\x0a      of this License, Derivative Works shall not include works that remain\x0a      separable from, or merely link (or bind by name) to the interfaces of,\x0a      the Work and Derivative Works thereof.\x0a\x0a      \"Contribution\" shall mean any work of authorship, including\x0a      the original version of the Work and any modifications or additions\x0a      to that Work or Derivative Works thereof, that is intentionally\x0a      submitted to Licensor for inclusion in the Work by the copyright owner\x0a      or by an individual or Legal Entity authorized to submit on behalf of\x0a      the copyright owner. For the purposes of this definition, \"submitted\"\x0a      means any form of electronic, verbal, or written communication sent\x0a      to the Licensor or its representatives, including but not limited to\x0a      communication on electronic mailing lists, source code control systems,\x0a      and issue tracking systems that are managed by, or on behalf of, the\x0a      Licensor for the purpose of discussing and improving the Work, but\x0a      excluding communication that is conspicuously marked or otherwise\x0a      designated in writing by the copyright owner as \"Not a Contribution.\"\x0a\x0a      \"Contributor\" shall mean Licensor and any individual or Legal Entity\x0a      on behalf of whom a Contribution has been received by Licensor and\x0a      subsequently incorporated within the Work.\x0a\x0a   2. Grant of Copyright License. Subject to the terms and conditions of\x0a      this License, each Contributor hereby grants to You a perpetual,\x0a      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\x0a      copyright license to reproduce, prepare Derivative Works of,\x0a      publicly display, publicly perform, sublicense, and distribute the\x0a      Work and such Derivative Works in Source or Object form.\x0a\x0a   3. Grant of Patent License. Subject to the terms and conditions of\x0a      this License, each Contributor hereby grants to You a perpetual,\x0a      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\x0a      (except as stated in this section) patent license to make, have made,\x0a      use, offer to sell, sell, import, and otherwise transfer the Work,\x0a      where such license applies only to those patent claims licensable\x0a      by such Contributor that are necessarily infringed by their\x0a      Contribution(s) alone or by combination of their Contribution(s)\x0a      with the Work to which such Contribution(s) was submitted. If You\x0a      institute patent litigation against any entity (including a\x0a      cross-claim or counterclaim in a lawsuit) alleging that the Work\x0a      or a Contribution incorporated within the Work constitutes direct\x0a      or contributory patent infringement, then any patent licenses\x0a      granted to You under this License for that Work shall terminate\x0a      as of the date such litigation is filed.\x0a\x0a   4. Redistribution. You may reproduce and distribute copies of the\x0a      Work or Derivative Works thereof in any medium, with or without\x0a      modifications, and in Source or Object form, provided that You\x0a      meet the following conditions:\x0a\x0a      (a) You must give any other recipients of the Work or\x0a          Derivative Works a copy of this License; and\x0a\x0a      (b) You must cause any modified files to carry prominent notices\x0a          stating that You changed the files; and\x0a\x0a      (c) You must retain, in the Source form of any Derivative Works\x0a          that You distribute, all copyright, patent, trademark, and\x0a          attribution notices from the Source form of the Work,\x0a          excluding those notices that do not pertain to any part of\x0a          the Derivative Works; and\x0a\x0a      (d) If the Work includes a \"NOTICE\" text file as part of its\x0a          distribution, then any Derivative Works that You distribute must\x0a          include a readable copy of the attribution notices contained\x0a          within such NOTICE file, excluding those notices that do not\x0a          pertain to any part of the Derivative Works, in at least one\x0a          of the following places: within a NOTICE text file distributed\x0a          as part of the Derivative Works; within the Source form or\x0a          documentation, if provided along with the Derivative Works; or,\x0a          within a display generated by the Derivative Works, if and\x0a          wherever such third-party notices normally appear. The contents\x0a          of the NOTICE file are for informational purposes only and\x0a          do not modify the License. You may add Your own attribution\x0a          notices within Derivative Works that You distribute, alongside\x0a          or as an addendum to the NOTICE text from the Work, provided\x0a          that such additional attribution notices cannot be construed\x0a          as modifying the License.\x0a\x0a      You may add Your own copyright statement to Your modifications and\x0a      may provide additional or different license terms and conditions\x0a      for use, reproduction, or distribution of Your modifications, or\x0a      for any such Derivative Works as a whole, provided Your use,\x0a      reproduction, and distribution of the Work otherwise complies with\x0a      the conditions stated in this License.\x0a\x0a   5. Submission of Contributions. Unless You explicitly state otherwise,\x0a      any Contribution intentionally submitted for inclusion in the Work\x0a      by You to the Licensor shall be under the terms and conditions of\x0a      this License, without any additional terms or conditions.\x0a      Notwithstanding the above, nothing herein shall supersede or modify\x0a      the terms of any separate license agreement you may have executed\x0a      with Licensor regarding such Contributions.\x0a\x0a   6. Trademarks. This License does not grant permission to use the trade\x0a      names, trademarks, service marks, or product names of the Licensor,\x0a      except as required for reasonable and customary use in describing the\x0a      origin of the Work and reproducing the content of the NOTICE file.\x0a\x0a   7. Disclaimer of Warranty. Unless required by applicable law or\x0a      agreed to in writing, Licensor provides the Work (and each\x0a      Contributor provides its Contributions) on an \"AS IS\" BASIS,\x0a      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\x0a      implied, including, without limitation, any warranties or conditions\x0a      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\x0a      PARTICULAR PURPOSE. You are solely responsible for determining the\x0a      appropriateness of using or redistributing the Work and assume any\x0a      risks associated with Your exercise of permissions under this License.\x0a\x0a   8. Limitation of Liability. In no event and under no legal theory,\x0a      whether in tort (including negligence), contract, or otherwise,\x0a      unless required by applicable law (such as deliberate and grossly\x0a      negligent acts) or agreed to in writing, shall any Contributor be\x0a      liable to You for damages, including any direct, indirect, special,\x0a      incidental, or consequential damages of any character arising as a\x0a      result of this License or out of the use or inability to use the\x0a      Work (including but not limited to damages for loss of goodwill,\x0a      work stoppage, computer failure or malfunction, or any and all\x0a      other commercial damages or losses), even if such Contributor\x0a      has been advised of the possibility of such damages.\x0a\x0a   9. Accepting Warranty or Additional Liability. While redistributing\x0a      the Work or Derivative Works thereof, You may choose to offer,\x0a      and charge a fee for, acceptance of support, warranty, indemnity,\x0a      or other liability obligations and/or rights consistent with this\x0a      License. However, in accepting such obligations, You may act only\x0a      on Your own behalf and on Your sole responsibility, not on behalf\x0a      of any other Contributor, and only if You agree to indemnify,\x0a      defend, and hold each Contributor harmless for any liability\x0a      incurred by, or claims asserted against, such Contributor by reason\x0a      of your accepting any such warranty or additional liability.\x0a\x0a   END OF TERMS AND CONDITIONS\x0a\x0a   APPENDIX: How to apply the Apache License to your work.\x0a\x0a      To apply the Apache License to your work, attach the following\x0a      boilerplate notice, with the fields enclosed by brackets \"[]\"\x0a      replaced with your own identifying information. (Don't include\x0a      the brackets!)  The text should be enclosed in the appropriate\x0a      comment syntax for the file format. We also recommend that a\x0a      file or class name and description of purpose be included on the\x0a      same \"printed page\" as the copyright notice for easier\x0a      identification within third-party archives.\x0a\x0a   Copyright 2019 Akihiro Yamamoto.\x0a\x0a   Licensed under the Apache License, Version 2.0 (the \"License\");\x0a   you may not use this file except in compliance with the License.\x0a   You may obtain a copy of the License at\x0a\x0a       http://www.apache.org/licenses/LICENSE-2.0\x0a\x0a   Unless required by applicable law or agreed to in writing, software\x0a   distributed under the License is distributed on an \"AS IS\" BASIS,\x0a   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\x0a   See the License for the specific language governing permissions and\x0a   limitations under the License.") ]), Halogen_HTML_Elements.h2([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.h2) ])([ Halogen_HTML_Core.text("External libraries") ]), Halogen_HTML_Elements.p([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.m4) ])([ Halogen_HTML_Core.text("This software may contain all or part of the program specified in notice files below."), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.strong_([ Halogen_HTML_Core.text("No NOTICE files specified.") ]) ]), Halogen_HTML_Elements.hr_, Halogen_HTML_Elements.p([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.m4) ])([ Halogen_HTML_Core.text("The program includes software licensed under the license terms as specified below.") ]), Halogen_HTML_Elements.ul_([ Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-affjax"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Licensed under the Apache License, Version 2.0"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/slamdata/purescript-affjax") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-assert"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright 2018 PureScript"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the BSD 3-Clause License"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/purescript/purescript-assert") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-canvas"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright (c) 2014-18 Phil Freeman and other contributors"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the MIT license."), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/paf31/purescript-canvas") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-console"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright 2018 PureScript"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the BSD 3-Clause License"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/purescript/purescript-console") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-datetime"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright 2018 PureScript"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the BSD 3-Clause License"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/purescript/purescript-datetime") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-effect"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright 2018 PureScript"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the BSD 3-Clause License"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/purescipt/purescript-effect") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-foreign-generic"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright (c) 2017 Phil Freeman"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the MIT license."), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/paf31/purescript-foreign-generic") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-formatters"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Licensed under the Apache License, Version 2.0"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/slamdata/purescript-formatters") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-halogen"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Licensed under the Apache License, Version 2.0"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/slamdata/purescript-halogen") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-halogen-bootstrap4"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Licensed under the Apache License, Version 2.0"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/mschristiansen/purescript-halogen-bootstrap4") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-halogen-css"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Licensed under the Apache License, Version 2.0"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/slamdata/purescript-halogen-css") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-halogen-formless"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Licensed under the Apache License, Version 2.0"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/thomashoneyman/purescript-halogen-formless") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-js-timers"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright (c) 2016 PureScript"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the MIT license."), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/purescript-contrib/purescript-js-timers") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-now"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright (c) 2014 Purescript"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the MIT license."), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/purescript-contrib/purescript-now") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-numbers"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Licensed under the MIT license."), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/sharkdp/purescript-numbers") ])([ Halogen_HTML_Core.text("see link for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-parsing"), Halogen_HTML_Elements.p_([ Halogen_HTML_Elements.pre_([ Halogen_HTML_Core.text("Copyright 2014-2016 PureScript\x0a\x0aRedistribution and use in source and binary forms, with or without\x0amodification, are permitted provided that the following conditions are met:\x0a\x0a* Redistributions of source code must retain the above copyright notice,\x0a  this list of conditions and the following disclaimer.\x0a* Redistributions in binary form must reproduce the above copyright\x0a  notice, this list of conditions and the following disclaimer in the\x0a  documentation and/or other materials provided with the distribution.\x0a\x0aThis software is provided by the copyright holders \"as is\" and any express or\x0aimplied warranties, including, but not limited to, the implied warranties of\x0amerchantability and fitness for a particular purpose are disclaimed. In no\x0aevent shall the copyright holders be liable for any direct, indirect,\x0aincidental, special, exemplary, or consequential damages (including, but not\x0alimited to, procurement of substitute goods or services; loss of use, data,\x0aor profits; or business interruption) however caused and on any theory of\x0aliability, whether in contract, strict liability, or tort (including\x0anegligence or otherwise) arising in any way out of the use of this software,\x0aeven if advised of the possibility of such damage.\x0a\x0a-------------------------------------------------------------------------------\x0a\x0aThis library uses code adapted from the Haskell libraries parsec and indents.\x0aTheir licenses are reproduced below:\x0a\x0a'parsec' license:\x0a\x0a  Copyright 1999-2000, Daan Leijen; 2007, Paolo Martini. All rights reserved.\x0a\x0a  Redistribution and use in source and binary forms, with or without\x0a  modification, are permitted provided that the following conditions are met:\x0a\x0a  * Redistributions of source code must retain the above copyright notice,\x0a    this list of conditions and the following disclaimer.\x0a  * Redistributions in binary form must reproduce the above copyright\x0a    notice, this list of conditions and the following disclaimer in the\x0a    documentation and/or other materials provided with the distribution.\x0a\x0a  This software is provided by the copyright holders \"as is\" and any express or\x0a  implied warranties, including, but not limited to, the implied warranties of\x0a  merchantability and fitness for a particular purpose are disclaimed. In no\x0a  event shall the copyright holders be liable for any direct, indirect,\x0a  incidental, special, exemplary, or consequential damages (including, but not\x0a  limited to, procurement of substitute goods or services; loss of use, data,\x0a  or profits; or business interruption) however caused and on any theory of\x0a  liability, whether in contract, strict liability, or tort (including\x0a  negligence or otherwise) arising in any way out of the use of this software,\x0a  even if advised of the possibility of such damage.\x0a\x0a'indents' license:\x0a\x0a  Copyright (c)2010, Sam Anklesaria\x0a\x0a  All rights reserved.\x0a\x0a  Redistribution and use in source and binary forms, with or without\x0a  modification, are permitted provided that the following conditions are met:\x0a\x0a    * Redistributions of source code must retain the above copyright\x0a      notice, this list of conditions and the following disclaimer.\x0a\x0a    * Redistributions in binary form must reproduce the above\x0a      copyright notice, this list of conditions and the following\x0a      disclaimer in the documentation and/or other materials provided\x0a      with the distribution.\x0a\x0a    * Neither the name of Sam Anklesaria nor the names of other\x0a      contributors may be used to endorse or promote products derived\x0a      from this software without specific prior written permission.\x0a\x0a  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\x0a  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\x0a  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\x0a  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\x0a  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\x0a  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\x0a  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\x0a  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\x0a  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\x0a  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\x0a  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.") ]), Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/purescript-contrib/purescript-parsing") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-prelude"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright 2018 PureScript"), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the BSD 3-Clause License"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/purescript/purescript-prelude") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("purescript-routing"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Licensed under the Apache License, Version 2.0"), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/slamdata/purescript-routing") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("HTML Canvas Gauges v2.1"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>."), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the MIT license."), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/Mikhus/canvas-gauges") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]), Halogen_HTML_Elements.li_([ Halogen_HTML_Core.text("Chart.js"), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("Copyright (c) 2018 Chart.js Contributors."), Halogen_HTML_Elements.br_, Halogen_HTML_Core.text("Licensed under the MIT license."), Halogen_HTML_Elements.br_, Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/chartjs/Chart.js") ])([ Halogen_HTML_Core.text("see LICENSE file for Details.") ]) ]) ]) ]) ];
  var render = function (state) {
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.id_("wrapper") ])([ Page_Commons.navbar(NavigateTo.create)(Route.About.value), Halogen_HTML_Elements.main([ Halogen_HTML_Properties.class_("container") ])(document), Page_Commons.footer ]);
  };
  var component = function (dictMonadAff) {
      return function (dictNavigate) {
          return Halogen_Component.mkComponent({
              initialState: initialState,
              render: render,
              "eval": Halogen_Component.mkEval({
                  handleAction: handleAction(dictMonadAff)(dictNavigate),
                  handleQuery: handleQuery(dictMonadAff)(dictNavigate),
                  receive: Halogen_Component.defaultEval.receive,
                  initialize: new Data_Maybe.Just(Initialize.value),
                  finalize: new Data_Maybe.Just(Finalize.value)
              })
          });
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Page.Home"] = $PS["Page.Home"] || {};
  var exports = $PS["Page.Home"];
  var Api = $PS["Api"];
  var AppM = $PS["AppM"];
  var CSS_Geometry = $PS["CSS.Geometry"];
  var CSS_Size = $PS["CSS.Size"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Component_RadialGauge = $PS["Component.RadialGauge"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Now = $PS["Effect.Now"];
  var Effect_Timer = $PS["Effect.Timer"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Themes_Bootstrap4 = $PS["Halogen.Themes.Bootstrap4"];
  var Page_Commons = $PS["Page.Commons"];
  var Route = $PS["Route"];
  var Utils = $PS["Utils"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];                
  var NavigateTo = (function () {
      function NavigateTo(value0) {
          this.value0 = value0;
      };
      NavigateTo.create = function (value0) {
          return new NavigateTo(value0);
      };
      return NavigateTo;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var Update = (function () {
      function Update() {

      };
      Update.value = new Update();
      return Update;
  })();
  var updateButtonLabel = "updatebutton";
  var updateButton = function (action) {
      return function (isActive) {
          var appendix = function (v) {
              if (v) {
                  return Halogen_HTML_Properties.attr("active")("active");
              };
              if (!v) {
                  return Halogen_HTML_Properties.attr("disabled")("disabled");
              };
              throw new Error("Failed pattern match at Page.Home (line 206, column 14 - line 208, column 57): " + [ v.constructor.name ]);
          };
          return Halogen_HTML_Elements.button([ Halogen_HTML_Properties.ref(updateButtonLabel), Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.m1, Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.btnLight, Halogen_Themes_Bootstrap4.justifyContentCenter ]), Halogen_HTML_Events.onClick(function (v) {
              return new Data_Maybe.Just(action);
          }), appendix(isActive) ])([ Page_Commons.icon("fas fa-sync") ]);
      };
  };
  var temperature = function (val) {
      return {
          refLabel: "temp",
          options: {
              width: 300,
              height: 300,
              units: "\xb0C",
              title: "Temprature",
              value: Data_Maybe.fromMaybe(0.0)(val),
              minValue: -20.0,
              maxValue: 70.0,
              majorTicks: [ -20 | 0, -10 | 0, 0, 10, 20, 30, 40, 50, 60, 70 ],
              minorTicks: 10,
              animationRule: "dequint",
              animationDuration: 800
          }
      };
  };
  var pressure = function (val) {
      return {
          refLabel: "pres",
          options: {
              width: 300,
              height: 300,
              units: "hPa",
              title: "Pressure",
              value: Data_Maybe.fromMaybe(950.0)(val),
              minValue: 950.0,
              maxValue: 1050.0,
              majorTicks: [ 950, 960, 970, 980, 990, 1000, 1010, 1020, 1030, 1040, 1050 ],
              minorTicks: 10,
              animationRule: "dequint",
              animationDuration: 800
          }
      };
  };
  var msgLastUpdatedAt = function (nowTime) {
      return function (v) {
          var minute = (function () {
              var at = Data_DateTime_Instant.unInstant(Data_DateTime_Instant.fromDateTime(v));
              var duration = Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(nowTime) - Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(at);
              return Data_Int.floor(duration / (60.0 * 1000.0));
          })();
          var boundedMinute = Data_Maybe.fromJust()(Data_Foldable.minimum(Data_Ord.ordInt)(Data_Foldable.foldableArray)([ 9999, minute ]));
          var v1 = Utils.asiaTokyoDateTime(v);
          if (v1 instanceof Data_Maybe.Nothing) {
              return Page_Commons.toastItem("Error")("")("\u6709\u52b9\u306a\u65e5\u4ed8\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f");
          };
          if (v1 instanceof Data_Maybe.Just) {
              return Page_Commons.snackbarItem(Data_String_Common.joinWith(" ")([ "Measured at", v1.value0.time + ",", Data_Int.toStringAs(Data_Int.decimal)(boundedMinute), "mins ago." ]));
          };
          throw new Error("Failed pattern match at Page.Home (line 247, column 3 - line 257, column 8): " + [ v1.constructor.name ]);
      };
  };
  var msgFailToAccess = function (reason) {
      return Page_Commons.toastItem("Error")("")(reason);
  };
  var initialState = function (v) {
      return {
          measValues: Data_Maybe.Nothing.value,
          nowTime: 0.0
      };
  };
  var hygro = function (val) {
      return {
          refLabel: "hygro",
          options: {
              width: 300,
              height: 300,
              units: "%",
              title: "Hygro",
              value: Data_Maybe.fromMaybe(0.0)(val),
              minValue: 0.0,
              maxValue: 100.0,
              majorTicks: [ 0, 20, 40, 60, 80, 100 ],
              minorTicks: 10,
              animationRule: "dequint",
              animationDuration: 800
          }
      };
  };
  var latestValue = function (state) {
      if (state.measValues instanceof Data_Maybe.Nothing) {
          return {
              t: temperature(Data_Maybe.Nothing.value),
              p: pressure(Data_Maybe.Nothing.value),
              h: hygro(Data_Maybe.Nothing.value),
              msg: Page_Commons.snackbarItem("Now on reading...")
          };
      };
      if (state.measValues instanceof Data_Maybe.Just && state.measValues.value0 instanceof Data_Either.Left) {
          return {
              t: temperature(Data_Maybe.Nothing.value),
              p: pressure(Data_Maybe.Nothing.value),
              h: hygro(Data_Maybe.Nothing.value),
              msg: msgFailToAccess(state.measValues.value0.value0)
          };
      };
      if (state.measValues instanceof Data_Maybe.Just && state.measValues.value0 instanceof Data_Either.Right) {
          var v = Data_Newtype.unwrap(Api.newtypeMeasEnvironment)(Data_Array_NonEmpty.last(state.measValues.value0.value0));
          return {
              t: temperature(new Data_Maybe.Just(v.degc)),
              p: pressure(new Data_Maybe.Just(v.hpa)),
              h: hygro(new Data_Maybe.Just(v.rh)),
              msg: msgLastUpdatedAt(state.nowTime)(v.measured_at)
          };
      };
      throw new Error("Failed pattern match at Page.Home (line 215, column 21 - line 237, column 6): " + [ state.measValues.constructor.name ]);
  };
  var handleAction = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              var timerHandler = function (button) {
                  return Web_HTML_HTMLElement.click(button);
              };
              return function (v) {
                  if (v instanceof NavigateTo) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(v.value0))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                      });
                  };
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_DateTime_Instant.unInstant)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Now.now)))(function (time) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                              var $29 = {};
                              for (var $30 in st) {
                                  if ({}.hasOwnProperty.call(st, $30)) {
                                      $29[$30] = st[$30];
                                  };
                              };
                              $29.nowTime = time;
                              return $29;
                          }))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.showToast))(function () {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(updateButtonLabel))(function (maybeElem) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                          if (maybeElem instanceof Data_Maybe.Nothing) {
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                          };
                                          if (maybeElem instanceof Data_Maybe.Just) {
                                              return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Timer.setTimeout(60)(timerHandler(maybeElem.value0))));
                                          };
                                          throw new Error("Failed pattern match at Page.Home (line 158, column 7 - line 162, column 72): " + [ maybeElem.constructor.name ]);
                                      })())(function () {
                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                      });
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof Update) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiBaseURL(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (url) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiTimeout(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (millisec) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))((function () {
                                  var timeout = Data_Functor.voidLeft(Effect_Aff.functorAff)(Effect_Aff.delay(millisec))(new Data_Either.Left("\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u306e\u5fdc\u7b54\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f"));
                                  var param = {
                                      baseurl: url,
                                      limits: Data_Maybe.Nothing.value
                                  };
                                  var request = Api.getApiV1Measurements(param);
                                  var nonEmptyVal = (function () {
                                      var $37 = Data_Maybe.maybe(new Data_Either.Left("\u6e2c\u5b9a\u5024\u304c\u3042\u308a\u307e\u305b\u3093"))(Data_Either.Right.create);
                                      return function ($38) {
                                          return $37(Data_Array_NonEmpty.fromArray($38));
                                      };
                                  })();
                                  var response = Data_Either.either(Data_Either.Left.create)(function (x) {
                                      return nonEmptyVal(x.body);
                                  });
                                  return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Alt.alt(Effect_Aff.altParAff)(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Data_Functor.map(Effect_Aff.functorAff)(response)(request)))(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(timeout)));
                              })()))(function (val) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_DateTime_Instant.unInstant)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Now.now)))(function (time) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                          var $34 = {};
                                          for (var $35 in st) {
                                              if ({}.hasOwnProperty.call(st, $35)) {
                                                  $34[$35] = st[$35];
                                              };
                                          };
                                          $34.measValues = new Data_Maybe.Just(val);
                                          $34.nowTime = time;
                                          return $34;
                                      }))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.showToast))(function () {
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Page.Home (line 148, column 16 - line 179, column 18): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var _gTemperature = Data_Symbol.SProxy.value;
  var _gPressure = Data_Symbol.SProxy.value;
  var _gHygro = Data_Symbol.SProxy.value;
  var render = function (dictMonadAff) {
      return function (state) {
          var gauge = function (x) {
              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.colSm) ])([ x ]);
          };
          var v = latestValue(state);
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.id_("wrapper") ])([ Page_Commons.navbar(NavigateTo.create)(Route.Home.value), Halogen_HTML_Elements.main([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.container) ])([ updateButton(Update.value)(true), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.row), Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.marginTop(CSS_Size.px(30.0)))(function () {
              return CSS_Geometry.marginBottom(CSS_Size.px(30.0));
          })) ])([ gauge(Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "gTemperature";
          }))(Data_Ord.ordUnit)(_gTemperature)(Data_Unit.unit)(Component_RadialGauge.component(dictMonadAff))(v.t)(Data_Void.absurd)), gauge(Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "gPressure";
          }))(Data_Ord.ordUnit)(_gPressure)(Data_Unit.unit)(Component_RadialGauge.component(dictMonadAff))(v.p)(Data_Void.absurd)), gauge(Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "gHygro";
          }))(Data_Ord.ordUnit)(_gHygro)(Data_Unit.unit)(Component_RadialGauge.component(dictMonadAff))(v.h)(Data_Void.absurd)) ]), Page_Commons.toast([ v.msg ]) ]), Page_Commons.footer ]);
      };
  };
  var component = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictMonadAff)(dictNavigate)(dictHasApiAccessible),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Page.Infrared"] = $PS["Page.Infrared"] || {};
  var exports = $PS["Page.Infrared"];
  var Api = $PS["Api"];
  var AppM = $PS["AppM"];
  var CSS_Geometry = $PS["CSS.Geometry"];
  var CSS_Size = $PS["CSS.Size"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Components_InfraredCodeEditor = $PS["Components.InfraredCodeEditor"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Char = $PS["Data.Char"];
  var Data_Either = $PS["Data.Either"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Formatter_Number = $PS["Data.Formatter.Number"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Bounded = $PS["Data.Generic.Rep.Bounded"];
  var Data_Generic_Rep_Enum = $PS["Data.Generic.Rep.Enum"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Themes_Bootstrap4 = $PS["Halogen.Themes.Bootstrap4"];
  var InfraredRemote_Code = $PS["InfraredRemote.Code"];
  var InfraredRemote_HitachiHvac = $PS["InfraredRemote.HitachiHvac"];
  var InfraredRemote_MitsubishiElectricHvac = $PS["InfraredRemote.MitsubishiElectricHvac"];
  var InfraredRemote_PanasonicHvac = $PS["InfraredRemote.PanasonicHvac"];
  var InfraredRemote_Types = $PS["InfraredRemote.Types"];
  var Page_Commons = $PS["Page.Commons"];
  var Route = $PS["Route"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Utils = $PS["Utils"];                
  var TabControlPanel = (function () {
      function TabControlPanel() {

      };
      TabControlPanel.value = new TabControlPanel();
      return TabControlPanel;
  })();
  var TabIrdbTable = (function () {
      function TabIrdbTable() {

      };
      TabIrdbTable.value = new TabIrdbTable();
      return TabIrdbTable;
  })();
  var LeastSignBitFirst = (function () {
      function LeastSignBitFirst() {

      };
      LeastSignBitFirst.value = new LeastSignBitFirst();
      return LeastSignBitFirst;
  })();
  var MostSignBitFirst = (function () {
      function MostSignBitFirst() {

      };
      MostSignBitFirst.value = new MostSignBitFirst();
      return MostSignBitFirst;
  })();
  var BothBitOrder = (function () {
      function BothBitOrder() {

      };
      BothBitOrder.value = new BothBitOrder();
      return BothBitOrder;
  })();
  var NavigateTo = (function () {
      function NavigateTo(value0) {
          this.value0 = value0;
      };
      NavigateTo.create = function (value0) {
          return new NavigateTo(value0);
      };
      return NavigateTo;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var ChangedRoute = (function () {
      function ChangedRoute(value0) {
          this.value0 = value0;
      };
      ChangedRoute.create = function (value0) {
          return new ChangedRoute(value0);
      };
      return ChangedRoute;
  })();
  var OnClickIRCodeDownload = (function () {
      function OnClickIRCodeDownload() {

      };
      OnClickIRCodeDownload.value = new OnClickIRCodeDownload();
      return OnClickIRCodeDownload;
  })();
  var OnClickIRCodeUpload = (function () {
      function OnClickIRCodeUpload() {

      };
      OnClickIRCodeUpload.value = new OnClickIRCodeUpload();
      return OnClickIRCodeUpload;
  })();
  var OnClickIRCodeTransmit = (function () {
      function OnClickIRCodeTransmit() {

      };
      OnClickIRCodeTransmit.value = new OnClickIRCodeTransmit();
      return OnClickIRCodeTransmit;
  })();
  var OnClickIrdbPagination = (function () {
      function OnClickIrdbPagination(value0) {
          this.value0 = value0;
      };
      OnClickIrdbPagination.create = function (value0) {
          return new OnClickIrdbPagination(value0);
      };
      return OnClickIrdbPagination;
  })();
  var OnClickIrdbTable = (function () {
      function OnClickIrdbTable(value0) {
          this.value0 = value0;
      };
      OnClickIrdbTable.create = function (value0) {
          return new OnClickIrdbTable(value0);
      };
      return OnClickIrdbTable;
  })();
  var OnValueChangeButtonNumber = (function () {
      function OnValueChangeButtonNumber(value0) {
          this.value0 = value0;
      };
      OnValueChangeButtonNumber.create = function (value0) {
          return new OnValueChangeButtonNumber(value0);
      };
      return OnValueChangeButtonNumber;
  })();
  var OnValueChangeManufacturer = (function () {
      function OnValueChangeManufacturer(value0) {
          this.value0 = value0;
      };
      OnValueChangeManufacturer.create = function (value0) {
          return new OnValueChangeManufacturer(value0);
      };
      return OnValueChangeManufacturer;
  })();
  var OnValueChangeLimits = (function () {
      function OnValueChangeLimits(value0) {
          this.value0 = value0;
      };
      OnValueChangeLimits.create = function (value0) {
          return new OnValueChangeLimits(value0);
      };
      return OnValueChangeLimits;
  })();
  var HandleEditorUpdate = (function () {
      function HandleEditorUpdate(value0) {
          this.value0 = value0;
      };
      HandleEditorUpdate.create = function (value0) {
          return new HandleEditorUpdate(value0);
      };
      return HandleEditorUpdate;
  })();
  var toBaseband = function (inp) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Text_Parsing_Parser.parseErrorMessage)(Text_Parsing_Parser.runParser(inp)(InfraredRemote_Code.infraredCodeTextParser));
  };
  var showHex = function (v) {
      var str = Data_Int.toStringAs(Data_Int.hexadecimal)(v);
      var v1 = Data_String_CodePoints.length(str);
      if (v1 < 2) {
          return "0" + str;
      };
      if (Data_Boolean.otherwise) {
          return str;
      };
      throw new Error("Failed pattern match at Page.Infrared (line 874, column 3 - line 876, column 25): " + [ v1.constructor.name ]);
  };
  var popoverContents = function (input) {
      var toIrCode = Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(InfraredRemote_Code.toIrRemoteControlCode)(toBaseband);
      var showFormat = function (v) {
          if (v instanceof InfraredRemote_Types.FormatNEC) {
              return Data_String_Common.joinWith(" ")([ "NEC", showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.custom0))), showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.custom1))), showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.data0))), showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.data1))) ]);
          };
          if (v instanceof InfraredRemote_Types.FormatAEHA) {
              return Data_String_Common.joinWith(" ")(Data_Array.concat([ Data_Array.singleton("AEHA"), Data_Functor.map(Data_Functor.functorArray)((function () {
                  var $280 = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst);
                  return function ($281) {
                      return showHex($280(InfraredRemote_Types.toLsbFirst($281)));
                  };
              })())(v.value0.octets) ]));
          };
          if (v instanceof InfraredRemote_Types.FormatSIRC) {
              return Data_String_Common.joinWith(" ")([ "SIRC", showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.command))), showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.address))) ]);
          };
          if (v instanceof InfraredRemote_Types.FormatUnknown) {
              return Data_String_Common.joinWith(" ")(Data_Array.concat([ [ "Unkown", Data_Show.show(Data_Show.showArray(InfraredRemote_Types["showBit'"]))(v.value0) ] ]));
          };
          throw new Error("Failed pattern match at Page.Infrared (line 1174, column 16 - line 1202, column 10): " + [ v.constructor.name ]);
      };
      var display = function (v) {
          if (v instanceof InfraredRemote_Code.IrRemoteUnknown) {
              return Data_String_Common.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showFormat)(v.value0));
          };
          if (v instanceof InfraredRemote_Code.IrRemotePanasonicHvac) {
              return "Panasonic HVAC";
          };
          if (v instanceof InfraredRemote_Code.IrRemoteMitsubishiElectricHvac) {
              return "Mitsubishi Electric HVAC";
          };
          if (v instanceof InfraredRemote_Code.IrRemoteHitachiHvac) {
              return "Hitachi HVAC";
          };
          throw new Error("Failed pattern match at Page.Infrared (line 1160, column 13 - line 1171, column 21): " + [ v.constructor.name ]);
      };
      return Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(display)(toIrCode(input));
  };
  var irdbTable = function (v) {
      var tableRow = function (v1) {
          var clk = Halogen_HTML_Events.onClick(function (v2) {
              return Data_Maybe.Just.create(new OnClickIrdbTable(v1.code));
          });
          return Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.th([ Halogen_HTML_Events.onClick(function (v2) {
              return Data_Maybe.Just.create(new OnClickIrdbTable(v1.code));
          }) ])([ Halogen_HTML_Core.text(Data_Int.toStringAs(Data_Int.decimal)(v1.id)) ]), Halogen_HTML_Elements.td([ clk ])([ Halogen_HTML_Core.text(v1.manuf) ]), Halogen_HTML_Elements.td([ clk ])([ Halogen_HTML_Core.text(v1.prod) ]), Halogen_HTML_Elements.td([ clk ])([ Halogen_HTML_Core.text(v1.key) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.btnSecondary, Halogen_Themes_Bootstrap4.justifyContentCenter ]), Halogen_HTML_Properties.attr("data-container")("body"), Halogen_HTML_Properties.attr("data-toggle")("popover"), Halogen_HTML_Properties.attr("data-placement")("left"), Halogen_HTML_Properties.attr("data-content")(popoverContents(v1.code)) ])([ Halogen_HTML_Core.text(Data_String_CodePoints.take(8)(v1.code)), Halogen_HTML_Core.text("...") ]) ]) ]);
      };
      var tableHeading = (function () {
          var items = Data_Functor.map(Data_Functor.functorArray)(function ($282) {
              return Halogen_HTML_Elements.th_(Data_Array.singleton(Halogen_HTML_Core.text($282)));
          })([ "id", "manufacturer", "product", "key", "code" ]);
          return Halogen_HTML_Elements.thead_([ Halogen_HTML_Elements.tr_(items) ]);
      })();
      var tableBody = function (values) {
          return Halogen_HTML_Elements.tbody_(Data_Functor.map(Data_Functor.functorArray)(tableRow)(values));
      };
      return Halogen_HTML_Elements.p_([ Halogen_HTML_Elements.table([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.table, Halogen_Themes_Bootstrap4.tableHover ]) ])([ tableHeading, tableBody(v.value0.data) ]) ]);
  };
  var irdbPagination = function (v) {
      var text = function (n) {
          var $98 = n === v.value0.page;
          if ($98) {
              return [ Halogen_HTML_Core.text(Data_Int.toStringAs(Data_Int.decimal)(n)), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.srOnly) ])([ Halogen_HTML_Core.text("(current)") ]) ];
          };
          return [ Halogen_HTML_Core.text(Data_Int.toStringAs(Data_Int.decimal)(n)) ];
      };
      var classes = function (n) {
          var $99 = n === v.value0.page;
          if ($99) {
              return [ Halogen_Themes_Bootstrap4.pageItem, Halogen_Themes_Bootstrap4.colAuto, Halogen_Themes_Bootstrap4.active ];
          };
          return [ Halogen_Themes_Bootstrap4.pageItem, Halogen_Themes_Bootstrap4.colAuto ];
      };
      var item = function (number) {
          return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.classes(classes(number)) ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.pageLink), Halogen_HTML_Events.onClick(function (v1) {
              return Data_Maybe.Just.create(new OnClickIrdbPagination(number));
          }) ])(text(number)) ]);
      };
      return Halogen_HTML_Elements.nav([ Halogen_HTML_Properties.attr("area-label")("Pagination") ])([ Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.pagination, Halogen_Themes_Bootstrap4.row, Halogen_Themes_Bootstrap4.noGutters ]) ])(Data_Functor.map(Data_Functor.functorArray)(item)(Data_Array.range(1)(v.value0.pages))) ]);
  };
  var renderIrdbTable = function (dictMonadAff) {
      return function (state) {
          var nowreading = Halogen_HTML_Elements.p([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.alert, Halogen_Themes_Bootstrap4.alertInfo ]) ])([ Halogen_HTML_Core.text("Now on reading...") ]);
          var error = function (reason) {
              return Halogen_HTML_Elements.p([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.alert, Halogen_Themes_Bootstrap4.alertDanger, Halogen_Themes_Bootstrap4.textCenter ]) ])([ Halogen_HTML_Core.text(reason) ]);
          };
          var table = function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return nowreading;
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Data_Either.Left) {
                  return error(v.value0.value0);
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Data_Either.Right) {
                  return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h2_([ Halogen_HTML_Core.text("Infrared code database") ]), Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.formGroup) ])([ irdbPagination(v.value0.value0), irdbTable(v.value0.value0) ]) ]) ]);
              };
              throw new Error("Failed pattern match at Page.Infrared (line 528, column 11 - line 543, column 10): " + [ v.constructor.name ]);
          };
          var dropdownManuf = function (v) {
              var item = function (number) {
                  return function (name) {
                      if (state.queryParams.manuf instanceof Data_Maybe.Just && state.queryParams.manuf.value0 === number) {
                          return Halogen_HTML_Elements.option([ Halogen_HTML_Properties.selected(true) ])([ Halogen_HTML_Core.text(name) ]);
                      };
                      return Halogen_HTML_Elements.option([  ])([ Halogen_HTML_Core.text(name) ]);
                  };
              };
              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.formGroup, Halogen_Themes_Bootstrap4.row ]) ])([ Halogen_HTML_Elements.label([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.colSm2) ])([ Halogen_HTML_Core.text("manufacturer") ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.colSm10) ])([ Halogen_HTML_Elements.select([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.formControl ]), Halogen_HTML_Events.onValueChange(function ($283) {
                  return Data_Maybe.Just.create(OnValueChangeManufacturer.create($283));
              }) ])(Data_Array.zipWith(item)(Data_Array.range(0)(Data_Array.length(v.manufacturers)))(v.manufacturers)) ]) ]);
          };
          var dropdownLimits = (function () {
              var item = function (number) {
                  var str = Data_Int.toStringAs(Data_Int.decimal)(number);
                  if (state.queryParams.limits instanceof Data_Maybe.Just && state.queryParams.limits.value0 === number) {
                      return Halogen_HTML_Elements.option([ Halogen_HTML_Properties.selected(true) ])([ Halogen_HTML_Core.text(str) ]);
                  };
                  return Halogen_HTML_Elements.option([  ])([ Halogen_HTML_Core.text(str) ]);
              };
              return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.formGroup, Halogen_Themes_Bootstrap4.row ]) ])([ Halogen_HTML_Elements.label([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.colSm2) ])([ Halogen_HTML_Core.text("limits") ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.colSm10) ])([ Halogen_HTML_Elements.select([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.formControl ]), Halogen_HTML_Events.onValueChange(function ($284) {
                  return Data_Maybe.Just.create(OnValueChangeLimits.create($284));
              }) ])([ item(10), item(25), item(50), item(100) ]) ]) ]);
          })();
          if (state.irdbManufacturers instanceof Data_Maybe.Nothing) {
              return nowreading;
          };
          if (state.irdbManufacturers instanceof Data_Maybe.Just && state.irdbManufacturers.value0 instanceof Data_Either.Left) {
              return error(state.irdbManufacturers.value0.value0);
          };
          if (state.irdbManufacturers instanceof Data_Maybe.Just && state.irdbManufacturers.value0 instanceof Data_Either.Right) {
              return Halogen_HTML_Elements.div_([ dropdownManuf(state.irdbManufacturers.value0.value0), dropdownLimits, table(state.irdb) ]);
          };
          throw new Error("Failed pattern match at Page.Infrared (line 517, column 3 - line 525, column 70): " + [ state.irdbManufacturers.constructor.name ]);
      };
  };
  var irUploadButton = function (isActive) {
      var appendix = function (v) {
          if (v) {
              return Halogen_HTML_Properties.attr("active")("active");
          };
          if (!v) {
              return Halogen_HTML_Properties.attr("disabled")("disabled");
          };
          throw new Error("Failed pattern match at Page.Infrared (line 912, column 14 - line 914, column 57): " + [ v.constructor.name ]);
      };
      return Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.btnOutlineDanger, Halogen_Themes_Bootstrap4.justifyContentCenter ]), Halogen_HTML_Events.onClick(function (v) {
          return new Data_Maybe.Just(OnClickIRCodeUpload.value);
      }), Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.margin(CSS_Size.px(2.0))(CSS_Size.px(2.0))(CSS_Size.px(2.0))(CSS_Size.px(2.0)))(function () {
          return CSS_Geometry.width(CSS_Size.rem(8.0));
      })), appendix(isActive) ])([ Halogen_HTML_Core.text("Upload") ]);
  };
  var irTransmitButton = function (isActive) {
      var appendix = function (v) {
          if (v) {
              return Halogen_HTML_Properties.attr("active")("active");
          };
          if (!v) {
              return Halogen_HTML_Properties.attr("disabled")("disabled");
          };
          throw new Error("Failed pattern match at Page.Infrared (line 933, column 3 - line 934, column 44): " + [ v.constructor.name ]);
      };
      return Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.btnOutlinePrimary, Halogen_Themes_Bootstrap4.justifyContentCenter ]), Halogen_HTML_Events.onClick(function (v) {
          return new Data_Maybe.Just(OnClickIRCodeTransmit.value);
      }), Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.margin(CSS_Size.px(2.0))(CSS_Size.px(2.0))(CSS_Size.px(2.0))(CSS_Size.px(2.0)))(function () {
          return CSS_Geometry.width(CSS_Size.rem(8.0));
      })), appendix(isActive) ])([ Halogen_HTML_Core.text("Transmit") ]);
  };
  var irDownloadButton = Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.btnOutlineSuccess, Halogen_Themes_Bootstrap4.justifyContentCenter ]), Halogen_HTML_Events.onClick(function (v) {
      return new Data_Maybe.Just(OnClickIRCodeDownload.value);
  }), Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.margin(CSS_Size.px(2.0))(CSS_Size.px(2.0))(CSS_Size.px(2.0))(CSS_Size.px(2.0)))(function () {
      return CSS_Geometry.width(CSS_Size.rem(8.0));
  })) ])([ Halogen_HTML_Core.text("Download") ]);
  var infraredTimingTable = function (v) {
      var strMillisec = function (n) {
          return Data_Either.either(Data_Function["const"]("N/A"))(Control_Category.identity(Control_Category.categoryFn))(Data_Formatter_Number.formatNumber("0.00")(Data_Newtype.unwrap(Data_Time_Duration.newtypeMilliseconds)(InfraredRemote_Code.toMilliseconds(n))));
      };
      var toText = function (p) {
          return [ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.textPrimary) ])([ Halogen_HTML_Core.text(strMillisec(p.on) + "on") ]), Halogen_HTML_Core.text(", "), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.textSuccess) ])([ Halogen_HTML_Core.text(strMillisec(p.off) + "off") ]) ];
      };
      var nbsp = Data_String_CodePoints.codePointFromChar(Data_Maybe.fromMaybe("?")(Data_Char.fromCharCode(160)));
      var col = function (p) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.col6, Halogen_Themes_Bootstrap4.colMd2 ]) ])([ Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.textPrimary) ])([ Halogen_HTML_Core.text(strMillisec(p.on) + "on") ]), Halogen_HTML_Core.text("," + Data_String_CodePoints.singleton(nbsp)), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.textSecondary) ])([ Halogen_HTML_Core.text(strMillisec(p.off) + "off") ]) ]) ]);
      };
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.row) ])(Data_Functor.map(Data_Functor.functorArray)(col)(v));
  };
  var infraredRemoteControlCode = (function () {
      var dd = Halogen_HTML_Elements.dd([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.pl4, Halogen_Themes_Bootstrap4.row ]) ]);
      return function (v) {
          if (v instanceof InfraredRemote_Code.IrRemoteUnknown) {
              return [ Halogen_HTML_Core.text("Unknown IR remote Code") ];
          };
          if (v instanceof InfraredRemote_Code.IrRemotePanasonicHvac) {
              return [ Halogen_HTML_Core.text("Panasonic HVAC"), Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Temperature") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_Types.showCelsius)(v.value0.temperature)) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Mode") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_PanasonicHvac.showMode)(v.value0.mode)) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Switch") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_PanasonicHvac.showSwitch)(v["value0"]["switch"])) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Fan") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_PanasonicHvac.showFan)(v.value0.fan)) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Swing") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_PanasonicHvac.showSwing)(v.value0.swing)) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Profile") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_PanasonicHvac.showProfile)(v.value0.profile)) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("CRC") ]), dd([ Halogen_HTML_Core.text((function () {
                  var $121 = InfraredRemote_PanasonicHvac.validCrc(v.value0.crc)(v.value0.original);
                  if ($121) {
                      return "Checksum is valid.";
                  };
                  return "Checksum is NOT valid.";
              })()), Halogen_HTML_Core.text(" " + Data_Show.show(InfraredRemote_PanasonicHvac.showCrc)(v.value0.crc)) ]) ]) ];
          };
          if (v instanceof InfraredRemote_Code.IrRemoteMitsubishiElectricHvac) {
              return [ Halogen_HTML_Core.text("MitsubishiElectric HVAC"), Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Temperature") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_Types.showCelsius)(v.value0.temperature)) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Mode1") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_MitsubishiElectricHvac.showMode)(v.value0.mode1)) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Switch") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_MitsubishiElectricHvac.showSwitch)(v["value0"]["switch"])) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("CRC") ]), dd([ Halogen_HTML_Core.text((function () {
                  var $123 = InfraredRemote_MitsubishiElectricHvac.validCrc(v.value0.crc)(v.value0.original);
                  if ($123) {
                      return "Checksum is valid.";
                  };
                  return "Checksum is NOT valid.";
              })()), Halogen_HTML_Core.text(" " + Data_Show.show(InfraredRemote_MitsubishiElectricHvac.showCrc)(v.value0.crc)) ]) ]) ];
          };
          if (v instanceof InfraredRemote_Code.IrRemoteHitachiHvac) {
              return [ Halogen_HTML_Core.text("Hitachi HVAC"), Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Temperature") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_Types.showCelsius)(v.value0.temperature)) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Mode") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_HitachiHvac.showMode)(v.value0.mode)) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Switch") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_HitachiHvac.showSwitch)(v["value0"]["switch"])) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("Fan") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_HitachiHvac.showFan)(v.value0.fan)) ]) ]) ];
          };
          throw new Error("Failed pattern match at Page.Infrared (line 806, column 29 - line 861, column 6): " + [ v.constructor.name ]);
      };
  })();
  var infraredBitpatterns = function (v) {
      var col = function (xs) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.col6, Halogen_Themes_Bootstrap4.colMd2 ]) ])(Data_Functor.map(Data_Functor.functorArray)((function () {
              var $285 = Data_Show.show(InfraredRemote_Types["showBit'"]);
              return function ($286) {
                  return Halogen_HTML_Core.text($285($286));
              };
          })())(xs));
      };
      var row = function (xxs) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.row) ])(Data_Functor.map(Data_Functor.functorArray)(col)(xxs));
      };
      if (v.value0 instanceof InfraredRemote_Code.LeaderAeha) {
          return [ Halogen_HTML_Core.text("AEHA"), Halogen_HTML_Elements.br_, row(Utils.toArrayArray(8)(v.value1)) ];
      };
      if (v.value0 instanceof InfraredRemote_Code.LeaderNec) {
          return [ Halogen_HTML_Core.text("NEC"), Halogen_HTML_Elements.br_, row(Utils.toArrayArray(8)(v.value1)) ];
      };
      if (v.value0 instanceof InfraredRemote_Code.LeaderSirc) {
          var left = Data_Array.drop(7)(v.value1);
          var bit7 = Data_Array.take(7)(v.value1);
          return [ Halogen_HTML_Core.text("SIRC"), Halogen_HTML_Elements.br_, row(Data_Array.cons(bit7)(Utils.toArrayArray(8)(left))) ];
      };
      if (v.value0 instanceof InfraredRemote_Code.LeaderUnknown) {
          return [ Halogen_HTML_Core.text("Unknown"), Halogen_HTML_Elements.br_, row(Utils.toArrayArray(8)(v.value1)) ];
      };
      throw new Error("Failed pattern match at Page.Infrared (line 650, column 3 - line 673, column 8): " + [ v.value0.constructor.name ]);
  };
  var genericSelectedTab = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof TabControlPanel) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof TabIrdbTable) {
          return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
      };
      throw new Error("Failed pattern match at Page.Infrared (line 73, column 1 - line 73, column 60): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return TabControlPanel.value;
      };
      if (x instanceof Data_Generic_Rep.Inr) {
          return TabIrdbTable.value;
      };
      throw new Error("Failed pattern match at Page.Infrared (line 73, column 1 - line 73, column 60): " + [ x.constructor.name ]);
  });
  var genericSelectedBitOrder = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof LeastSignBitFirst) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof MostSignBitFirst) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof BothBitOrder) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Page.Infrared (line 89, column 1 - line 89, column 70): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return LeastSignBitFirst.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return MostSignBitFirst.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return BothBitOrder.value;
      };
      throw new Error("Failed pattern match at Page.Infrared (line 89, column 1 - line 89, column 70): " + [ x.constructor.name ]);
  });
  var eqSelectedTab = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof TabControlPanel && y instanceof TabControlPanel) {
              return true;
          };
          if (x instanceof TabIrdbTable && y instanceof TabIrdbTable) {
              return true;
          };
          return false;
      };
  });
  var ordSelectedTab = new Data_Ord.Ord(function () {
      return eqSelectedTab;
  }, function (x) {
      return function (y) {
          if (x instanceof TabControlPanel && y instanceof TabControlPanel) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TabControlPanel) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TabControlPanel) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TabIrdbTable && y instanceof TabIrdbTable) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Page.Infrared (line 75, column 1 - line 75, column 50): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqSelectedBitOrder = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof LeastSignBitFirst && y instanceof LeastSignBitFirst) {
              return true;
          };
          if (x instanceof MostSignBitFirst && y instanceof MostSignBitFirst) {
              return true;
          };
          if (x instanceof BothBitOrder && y instanceof BothBitOrder) {
              return true;
          };
          return false;
      };
  });
  var ordSelectedBitOrder = new Data_Ord.Ord(function () {
      return eqSelectedBitOrder;
  }, function (x) {
      return function (y) {
          if (x instanceof LeastSignBitFirst && y instanceof LeastSignBitFirst) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof LeastSignBitFirst) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof LeastSignBitFirst) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MostSignBitFirst && y instanceof MostSignBitFirst) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MostSignBitFirst) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MostSignBitFirst) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof BothBitOrder && y instanceof BothBitOrder) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Page.Infrared (line 91, column 1 - line 91, column 60): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var enumSelectedTab = new Data_Enum.Enum(function () {
      return ordSelectedTab;
  }, Data_Generic_Rep_Enum.genericPred(genericSelectedTab)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Enum.genericSucc(genericSelectedTab)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))));
  var enumSelectedBitOrder = new Data_Enum.Enum(function () {
      return ordSelectedBitOrder;
  }, Data_Generic_Rep_Enum.genericPred(genericSelectedBitOrder)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))), Data_Generic_Rep_Enum.genericSucc(genericSelectedBitOrder)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))));
  var boundedSelectedTab = new Data_Bounded.Bounded(function () {
      return ordSelectedTab;
  }, Data_Generic_Rep_Bounded.genericBottom(genericSelectedTab)(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Bounded.genericTop(genericSelectedTab)(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))));
  var boundedSelectedBitOrder = new Data_Bounded.Bounded(function () {
      return ordSelectedBitOrder;
  }, Data_Generic_Rep_Bounded.genericBottom(genericSelectedBitOrder)(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Bounded.genericTop(genericSelectedBitOrder)(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments)))));
  var boundedEnumSelectedTab = new Data_Enum.BoundedEnum(function () {
      return boundedSelectedTab;
  }, function () {
      return enumSelectedTab;
  }, Data_Generic_Rep_Enum.genericCardinality(genericSelectedTab)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))), Data_Generic_Rep_Enum.genericFromEnum(genericSelectedTab)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))), Data_Generic_Rep_Enum.genericToEnum(genericSelectedTab)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))));
  var renderTab = function (dictMonadAff) {
      return function (state) {
          var item = function (newTab) {
              return function (caption) {
                  return function (appendix) {
                      var qp = {
                          tab: Data_Maybe.Just.create(Data_Enum.fromEnum(boundedEnumSelectedTab)(newTab)),
                          bitorder: state.queryParams.bitorder,
                          limits: state.queryParams.limits,
                          manuf: state.queryParams.manuf,
                          page: state.queryParams.page
                      };
                      return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.navItem) ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_Themes_Bootstrap4.navLink ])(appendix)), Halogen_HTML_Events.onClick(function (v) {
                          return Data_Maybe.Just.create(NavigateTo.create(Route.Infrared.create(new Data_Maybe.Just(qp))));
                      }) ])([ Halogen_HTML_Core.text(caption) ]) ]);
                  };
              };
          };
          var tabControlPanel = item(TabControlPanel.value)("Control panel");
          var tabIrdbTable = item(TabIrdbTable.value)("Infrared database");
          return Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.nav, Halogen_Themes_Bootstrap4.navTabs, Halogen_Themes_Bootstrap4.navPills, Halogen_Themes_Bootstrap4.navJustified, Halogen_Themes_Bootstrap4.justifyContentCenter ]), Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.marginTop(CSS_Size.px(12.0)))(function () {
              return CSS_Geometry.marginBottom(CSS_Size.px(36.0));
          })) ])((function () {
              var v = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumSelectedTab))(state.queryParams.tab);
              if (v instanceof Data_Maybe.Nothing) {
                  return [ tabControlPanel([ Halogen_Themes_Bootstrap4.active ]), tabIrdbTable([  ]) ];
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof TabControlPanel) {
                  return [ tabControlPanel([ Halogen_Themes_Bootstrap4.active ]), tabIrdbTable([  ]) ];
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof TabIrdbTable) {
                  return [ tabControlPanel([  ]), tabIrdbTable([ Halogen_Themes_Bootstrap4.active ]) ];
              };
              throw new Error("Failed pattern match at Page.Infrared (line 456, column 5 - line 464, column 57): " + [ v.constructor.name ]);
          })());
      };
  };
  var boundedEnumSelectedBitOrder = new Data_Enum.BoundedEnum(function () {
      return boundedSelectedBitOrder;
  }, function () {
      return enumSelectedBitOrder;
  }, Data_Generic_Rep_Enum.genericCardinality(genericSelectedBitOrder)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments)))), Data_Generic_Rep_Enum.genericFromEnum(genericSelectedBitOrder)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments)))), Data_Generic_Rep_Enum.genericToEnum(genericSelectedBitOrder)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments)))));
  var infraredCodeFrame = function (state) {
      return function (input) {
          var showOctet = function (x) {
              return Halogen_HTML_Elements.span([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.col6, Halogen_Themes_Bootstrap4.colMd2 ]) ])([ Halogen_HTML_Core.text(showHex(x)), Halogen_HTML_Core.text(" ") ]);
          };
          var dd = Halogen_HTML_Elements.dd([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.pl4, Halogen_Themes_Bootstrap4.row ]) ]);
          var leastSignificantBitFirst = function (v) {
              if (v instanceof InfraredRemote_Types.FormatNEC) {
                  return [ Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("format") ]), dd([ Halogen_HTML_Core.text("NEC") ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("custom code (LSBit first)") ]), dd([ showOctet(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.custom0))), showOctet(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.custom1))) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("octets (LSBit first)") ]), dd([ showOctet(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.data0))), showOctet(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.data1))) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("stop") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_Types["showBit'"])(v.value0.stop)) ]) ]) ];
              };
              if (v instanceof InfraredRemote_Types.FormatAEHA) {
                  return [ Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("format") ]), dd([ Halogen_HTML_Core.text("AEHA") ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("octets (LSBit first)") ]), dd(Data_Functor.map(Data_Functor.functorArray)((function () {
                      var $287 = Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst);
                      return function ($288) {
                          return showOctet($287(InfraredRemote_Types.toLsbFirst($288)));
                      };
                  })())(v.value0.octets)), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("stop") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_Types["showBit'"])(v.value0.stop)) ]) ]) ];
              };
              if (v instanceof InfraredRemote_Types.FormatSIRC) {
                  return [ Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("format") ]), dd([ Halogen_HTML_Core.text("SIRC") ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("command (LSBit first)") ]), dd([ Halogen_HTML_Core.text(showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.command)))) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("address (LSBit first)") ]), dd([ Halogen_HTML_Core.text(showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeLsbFirst)(InfraredRemote_Types.toLsbFirst(v.value0.address)))) ]) ]) ];
              };
              if (v instanceof InfraredRemote_Types.FormatUnknown) {
                  return [ Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("unknown format") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(Data_Show.showArray(InfraredRemote_Types["showBit'"]))(v.value0)) ]) ]) ];
              };
              throw new Error("Failed pattern match at Page.Infrared (line 696, column 30 - line 743, column 8): " + [ v.constructor.name ]);
          };
          var mostSignificantBitFirst = function (v) {
              if (v instanceof InfraredRemote_Types.FormatNEC) {
                  return [ Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("format") ]), dd([ Halogen_HTML_Core.text("NEC") ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("custom code (MSBit first)") ]), dd([ showOctet(Data_Newtype.unwrap(InfraredRemote_Types.newtypeMsbFirst)(InfraredRemote_Types.toMsbFirst(v.value0.custom0))), showOctet(Data_Newtype.unwrap(InfraredRemote_Types.newtypeMsbFirst)(InfraredRemote_Types.toMsbFirst(v.value0.custom1))) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("octets (MSBit first)") ]), dd([ showOctet(Data_Newtype.unwrap(InfraredRemote_Types.newtypeMsbFirst)(InfraredRemote_Types.toMsbFirst(v.value0.data0))), showOctet(Data_Newtype.unwrap(InfraredRemote_Types.newtypeMsbFirst)(InfraredRemote_Types.toMsbFirst(v.value0.data1))) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("stop") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_Types["showBit'"])(v.value0.stop)) ]) ]) ];
              };
              if (v instanceof InfraredRemote_Types.FormatAEHA) {
                  return [ Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("format") ]), dd([ Halogen_HTML_Core.text("AEHA") ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("octets (MSBit first)") ]), dd(Data_Functor.map(Data_Functor.functorArray)((function () {
                      var $289 = Data_Newtype.unwrap(InfraredRemote_Types.newtypeMsbFirst);
                      return function ($290) {
                          return showOctet($289(InfraredRemote_Types.toMsbFirst($290)));
                      };
                  })())(v.value0.octets)), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("stop") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(InfraredRemote_Types["showBit'"])(v.value0.stop)) ]) ]) ];
              };
              if (v instanceof InfraredRemote_Types.FormatSIRC) {
                  return [ Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("format") ]), dd([ Halogen_HTML_Core.text("SIRC") ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("command (MSBit first)") ]), dd([ Halogen_HTML_Core.text(showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeMsbFirst)(InfraredRemote_Types.toMsbFirst(v.value0.command)))) ]), Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("address (MSBit first)") ]), dd([ Halogen_HTML_Core.text(showHex(Data_Newtype.unwrap(InfraredRemote_Types.newtypeMsbFirst)(InfraredRemote_Types.toMsbFirst(v.value0.address)))) ]) ]) ];
              };
              if (v instanceof InfraredRemote_Types.FormatUnknown) {
                  return [ Halogen_HTML_Elements.dl_([ Halogen_HTML_Elements.dt_([ Halogen_HTML_Core.text("unknown format") ]), dd([ Halogen_HTML_Core.text(Data_Show.show(Data_Show.showArray(InfraredRemote_Types["showBit'"]))(v.value0)) ]) ]) ];
              };
              throw new Error("Failed pattern match at Page.Infrared (line 745, column 29 - line 792, column 8): " + [ v.constructor.name ]);
          };
          var v = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumSelectedBitOrder))(state.queryParams.bitorder);
          if (v instanceof Data_Maybe.Nothing) {
              return leastSignificantBitFirst(input);
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof LeastSignBitFirst) {
              return leastSignificantBitFirst(input);
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof MostSignBitFirst) {
              return mostSignificantBitFirst(input);
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof BothBitOrder) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(leastSignificantBitFirst(input))(mostSignificantBitFirst(input));
          };
          throw new Error("Failed pattern match at Page.Infrared (line 688, column 3 - line 693, column 70): " + [ v.constructor.name ]);
      };
  };
  var initialQueryParams = {
      tab: Data_Maybe.Just.create(Data_Enum.fromEnum(boundedEnumSelectedTab)(TabControlPanel.value)),
      bitorder: Data_Maybe.Just.create(Data_Enum.fromEnum(boundedEnumSelectedBitOrder)(LeastSignBitFirst.value)),
      manuf: new Data_Maybe.Just(0),
      limits: new Data_Maybe.Just(10),
      page: new Data_Maybe.Just(1)
  };
  var initialState = function (route) {
      var st = function (v) {
          return {
              queryParams: v,
              infraredValue: Data_Maybe.Nothing.value,
              irdb: Data_Maybe.Nothing.value,
              irdbManufacturers: Data_Maybe.Nothing.value,
              buttonNumber: 1
          };
      };
      if (route instanceof Route.Infrared && route.value0 instanceof Data_Maybe.Just) {
          return st({
              tab: Control_Alt.alt(Data_Maybe.altMaybe)(route.value0.value0.tab)(initialQueryParams.tab),
              manuf: Control_Alt.alt(Data_Maybe.altMaybe)(route.value0.value0.manuf)(initialQueryParams.manuf),
              limits: Control_Alt.alt(Data_Maybe.altMaybe)(route.value0.value0.limits)(initialQueryParams.limits),
              page: Control_Alt.alt(Data_Maybe.altMaybe)(route.value0.value0.page)(initialQueryParams.page),
              bitorder: Control_Alt.alt(Data_Maybe.altMaybe)(route.value0.value0.page)(initialQueryParams.bitorder)
          });
      };
      return st(initialQueryParams);
  };
  var renderBitOrderTab = function (dictMonadAff) {
      return function (state) {
          var item = function (newTab) {
              return function (caption) {
                  return function (appendix) {
                      var qp = {
                          bitorder: Data_Maybe.Just.create(Data_Enum.fromEnum(boundedEnumSelectedBitOrder)(newTab)),
                          limits: state.queryParams.limits,
                          manuf: state.queryParams.manuf,
                          page: state.queryParams.page,
                          tab: state.queryParams.tab
                      };
                      return Halogen_HTML_Elements.li([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.navItem) ])([ Halogen_HTML_Elements.a([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_Themes_Bootstrap4.navLink ])(appendix)), Halogen_HTML_Events.onClick(function (v) {
                          return Data_Maybe.Just.create(NavigateTo.create(Route.Infrared.create(new Data_Maybe.Just(qp))));
                      }) ])([ Halogen_HTML_Core.text(caption) ]) ]);
                  };
              };
          };
          var tabBothBitOrder = item(BothBitOrder.value)("Both Bit Order");
          var tabLSBitFirst = item(LeastSignBitFirst.value)("Least Significant Bit First Order");
          var tabMSBitFirst = item(MostSignBitFirst.value)("Most Significant Bit First Order");
          return Halogen_HTML_Elements.ul([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.nav, Halogen_Themes_Bootstrap4.navTabs, Halogen_Themes_Bootstrap4.navPills ]), Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.marginTop(CSS_Size.px(12.0)))(function () {
              return CSS_Geometry.marginBottom(CSS_Size.px(36.0));
          })) ])((function () {
              var v = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumSelectedBitOrder))(state.queryParams.bitorder);
              if (v instanceof Data_Maybe.Nothing) {
                  return [ tabLSBitFirst([ Halogen_Themes_Bootstrap4.active ]), tabMSBitFirst([  ]), tabBothBitOrder([  ]) ];
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof LeastSignBitFirst) {
                  return [ tabLSBitFirst([ Halogen_Themes_Bootstrap4.active ]), tabMSBitFirst([  ]), tabBothBitOrder([  ]) ];
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof MostSignBitFirst) {
                  return [ tabLSBitFirst([  ]), tabMSBitFirst([ Halogen_Themes_Bootstrap4.active ]), tabBothBitOrder([  ]) ];
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof BothBitOrder) {
                  return [ tabLSBitFirst([  ]), tabMSBitFirst([  ]), tabBothBitOrder([ Halogen_Themes_Bootstrap4.active ]) ];
              };
              throw new Error("Failed pattern match at Page.Infrared (line 1026, column 5 - line 1037, column 76): " + [ v.constructor.name ]);
          })());
      };
  };
  var accessToBackend = function (dictMonadAff) {
      return function (millisec) {
          return function (accessor) {
              var timeout = Data_Functor.voidLeft(Effect_Aff.functorAff)(Effect_Aff.delay(millisec))(new Data_Either.Left("\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u306e\u5fdc\u7b54\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f"));
              var response = Data_Bifunctor.rmap(Data_Either.bifunctorEither)(function (v) {
                  return v.body;
              });
              return Effect_Aff_Class.liftAff(dictMonadAff)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Alt.alt(Effect_Aff.altParAff)(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Data_Functor.map(Effect_Aff.functorAff)(response)(accessor)))(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(timeout))));
          };
      };
  };
  var getIrdb = function (dictMonadAff) {
      return function (dictHasApiAccessible) {
          return function (queryParams) {
              return function (v) {
                  return Control_Bind.bind((dictHasApiAccessible.Monad0()).Bind1())(AppM.getApiBaseURL(dictHasApiAccessible))(function (url) {
                      return Control_Bind.bind((dictHasApiAccessible.Monad0()).Bind1())(AppM.getApiTimeout(dictHasApiAccessible))(function (millisec) {
                          var param = {
                              baseurl: url,
                              manufacturer: Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Array.index(v.manufacturers))(queryParams.manuf),
                              product: Data_Maybe.Nothing.value,
                              limits: queryParams.limits,
                              page: queryParams.page
                          };
                          return accessToBackend(dictMonadAff)(millisec)(Api.getApiV1Irdb(param));
                      });
                  });
              };
          };
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              return function (v) {
                  if (v instanceof NavigateTo) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.disposePopover))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(v.value0))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                          });
                      });
                  };
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          var newRoute = new Route.Infrared(new Data_Maybe.Just(v1.queryParams));
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(handleAction(dictMonadAff)(dictNavigate)(dictHasApiAccessible)(new ChangedRoute(newRoute))))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                          });
                      });
                  };
                  if (v instanceof ChangedRoute) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.disposePopover))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                              if (v.value0 instanceof Route.Infrared && v.value0.value0 instanceof Data_Maybe.Nothing) {
                                  return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $184 = {};
                                      for (var $185 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $185)) {
                                              $184[$185] = v1[$185];
                                          };
                                      };
                                      $184.queryParams = initialQueryParams;
                                      return $184;
                                  });
                              };
                              if (v.value0 instanceof Route.Infrared && v.value0.value0 instanceof Data_Maybe.Just) {
                                  return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                      var $188 = {};
                                      for (var $189 in v1) {
                                          if ({}.hasOwnProperty.call(v1, $189)) {
                                              $188[$189] = v1[$189];
                                          };
                                      };
                                      $188.queryParams = v.value0.value0.value0;
                                      return $188;
                                  });
                              };
                              return Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM);
                          })())(function (state) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                  var v1 = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumSelectedTab))(state.queryParams.tab);
                                  if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof TabIrdbTable) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiBaseURL(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (url) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiTimeout(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (millisec) {
                                              var accessor = Api.getApiV1IrdbManufacturers({
                                                  baseurl: url
                                              });
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(accessToBackend(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(millisec)(accessor))(function (response) {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)((function () {
                                                      var $194 = {};
                                                      for (var $195 in state) {
                                                          if ({}.hasOwnProperty.call(state, $195)) {
                                                              $194[$195] = state[$195];
                                                          };
                                                      };
                                                      $194.irdbManufacturers = new Data_Maybe.Just(response);
                                                      return $194;
                                                  })()))(function () {
                                                      if (response instanceof Data_Either.Left) {
                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                                      };
                                                      if (response instanceof Data_Either.Right) {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(getIrdb(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible))(state.queryParams)(response.value0))(function (irdb) {
                                                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                  var $199 = {};
                                                                  for (var $200 in st) {
                                                                      if ({}.hasOwnProperty.call(st, $200)) {
                                                                          $199[$200] = st[$200];
                                                                      };
                                                                  };
                                                                  $199.irdb = new Data_Maybe.Just(irdb);
                                                                  return $199;
                                                              });
                                                          });
                                                      };
                                                      throw new Error("Failed pattern match at Page.Infrared (line 251, column 9 - line 257, column 51): " + [ response.constructor.name ]);
                                                  });
                                              });
                                          });
                                      });
                                  };
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                              })())(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.enablePopover))(function () {
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof OnClickIRCodeDownload) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiBaseURL(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (url) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiTimeout(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (millisec) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                  var accessor = Api.getApiV1InfraRed({
                                      baseurl: url,
                                      buttonNumber: v1.buttonNumber
                                  });
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(accessToBackend(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(millisec)(accessor))(function (response) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                          var $206 = {};
                                          for (var $207 in st) {
                                              if ({}.hasOwnProperty.call(st, $207)) {
                                                  $206[$207] = st[$207];
                                              };
                                          };
                                          $206.infraredValue = new Data_Maybe.Just(response);
                                          return $206;
                                      }))(function () {
                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                      });
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof OnClickIRCodeUpload) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiBaseURL(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (url) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiTimeout(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (millisec) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                                  if (state.infraredValue instanceof Data_Maybe.Just && state.infraredValue.value0 instanceof Data_Either.Right) {
                                      var newD = {
                                          button_number: state.buttonNumber,
                                          code: state.infraredValue.value0.value0.code
                                      };
                                      var accessor = Api.postApiV1InfraRed({
                                          baseurl: url,
                                          datum: newD
                                      });
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(accessToBackend(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(millisec)(accessor))(function (response) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Console.logShow(Data_Either.showEither(Data_Show.showString)(Data_Show.showString))(response)))(function () {
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                          });
                                      });
                                  };
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                              });
                          });
                      });
                  };
                  if (v instanceof OnClickIRCodeTransmit) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiBaseURL(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (url) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiTimeout(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (millisec) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                                  if (state.infraredValue instanceof Data_Maybe.Just && state.infraredValue.value0 instanceof Data_Either.Right) {
                                      var accessor = Api.postApiV1TransIR({
                                          baseurl: url,
                                          datum: state.infraredValue.value0.value0
                                      });
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(accessToBackend(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(millisec)(accessor))(function (response) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Console.logShow(Data_Either.showEither(Data_Show.showString)(Data_Show.showString))(response)))(function () {
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                          });
                                      });
                                  };
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                              });
                          });
                      });
                  };
                  if (v instanceof OnClickIrdbPagination) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.disposePopover))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                              var qp = {
                                  page: new Data_Maybe.Just(v.value0),
                                  bitorder: state.queryParams.bitorder,
                                  limits: state.queryParams.limits,
                                  manuf: state.queryParams.manuf,
                                  tab: state.queryParams.tab
                              };
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $216 = {};
                                  for (var $217 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $217)) {
                                          $216[$217] = v1[$217];
                                      };
                                  };
                                  $216.queryParams = qp;
                                  return $216;
                              }))(function (newState) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                      if (newState.irdbManufacturers instanceof Data_Maybe.Just && newState.irdbManufacturers.value0 instanceof Data_Either.Right) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(getIrdb(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible))(newState.queryParams)(newState.irdbManufacturers.value0.value0))(function (irdb) {
                                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                  var $220 = {};
                                                  for (var $221 in st) {
                                                      if ({}.hasOwnProperty.call(st, $221)) {
                                                          $220[$221] = st[$221];
                                                      };
                                                  };
                                                  $220.irdb = new Data_Maybe.Just(irdb);
                                                  return $220;
                                              });
                                          });
                                      };
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                  })())(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(new Route.Infrared(new Data_Maybe.Just(qp))))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.enablePopover))(function () {
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof OnClickIrdbTable) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.disposePopover))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                              var newTab = Data_Maybe.Just.create(Data_Enum.fromEnum(boundedEnumSelectedTab)(TabControlPanel.value));
                              var qp = {
                                  tab: newTab,
                                  bitorder: state.queryParams.bitorder,
                                  limits: state.queryParams.limits,
                                  manuf: state.queryParams.manuf,
                                  page: state.queryParams.page
                              };
                              var irval = {
                                  button_number: state.buttonNumber,
                                  code: v.value0
                              };
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $226 = {};
                                  for (var $227 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $227)) {
                                          $226[$227] = v1[$227];
                                      };
                                  };
                                  $226.infraredValue = new Data_Maybe.Just(new Data_Either.Right(irval));
                                  $226.queryParams = qp;
                                  return $226;
                              }))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(new Route.Infrared(new Data_Maybe.Just(qp))))(function () {
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof OnValueChangeButtonNumber) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                          var v1 = Data_Int.fromString(v.value0);
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                  var $231 = {};
                                  for (var $232 in st) {
                                      if ({}.hasOwnProperty.call(st, $232)) {
                                          $231[$232] = st[$232];
                                      };
                                  };
                                  $231.buttonNumber = v1.value0;
                                  return $231;
                              });
                          };
                          throw new Error("Failed pattern match at Page.Infrared (line 330, column 5 - line 332, column 57): " + [ v1.constructor.name ]);
                      })())(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                      });
                  };
                  if (v instanceof OnValueChangeManufacturer) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.disposePopover))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                              var maybeManuf = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
                                  return new Data_Maybe.Just((Data_Newtype.unwrap(Api.newtypeRespGetIrdbManufacturers)(x)).manufacturers);
                              }))(state.irdbManufacturers);
                              var maybeIndex = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Array.elemIndex(Data_Eq.eqString)(v.value0))(maybeManuf);
                              var newQry = {
                                  manuf: Control_Alt.alt(Data_Maybe.altMaybe)(maybeIndex)(initialQueryParams.manuf),
                                  page: new Data_Maybe.Just(1),
                                  bitorder: state.queryParams.bitorder,
                                  limits: state.queryParams.limits,
                                  tab: state.queryParams.tab
                              };
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $236 = {};
                                  for (var $237 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $237)) {
                                          $236[$237] = v1[$237];
                                      };
                                  };
                                  $236.queryParams = newQry;
                                  return $236;
                              }))(function (newState) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                      if (newState.irdbManufacturers instanceof Data_Maybe.Just && newState.irdbManufacturers.value0 instanceof Data_Either.Right) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(getIrdb(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible))(newState.queryParams)(newState.irdbManufacturers.value0.value0))(function (irdb) {
                                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                  var $240 = {};
                                                  for (var $241 in st) {
                                                      if ({}.hasOwnProperty.call(st, $241)) {
                                                          $240[$241] = st[$241];
                                                      };
                                                  };
                                                  $240.irdb = new Data_Maybe.Just(irdb);
                                                  return $240;
                                              });
                                          });
                                      };
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                  })())(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(new Route.Infrared(new Data_Maybe.Just(newQry))))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.enablePopover))(function () {
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof OnValueChangeLimits) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.disposePopover))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (state) {
                              var maybeLimits = Data_Int.fromString(v.value0);
                              var newQry = {
                                  limits: Control_Alt.alt(Data_Maybe.altMaybe)(maybeLimits)(initialQueryParams.limits),
                                  page: new Data_Maybe.Just(1),
                                  bitorder: state.queryParams.bitorder,
                                  manuf: state.queryParams.manuf,
                                  tab: state.queryParams.tab
                              };
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                  var $246 = {};
                                  for (var $247 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $247)) {
                                          $246[$247] = v1[$247];
                                      };
                                  };
                                  $246.queryParams = newQry;
                                  return $246;
                              }))(function (newState) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                      if (newState.irdbManufacturers instanceof Data_Maybe.Just && newState.irdbManufacturers.value0 instanceof Data_Either.Right) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(getIrdb(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible))(newState.queryParams)(newState.irdbManufacturers.value0.value0))(function (irdb) {
                                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                  var $250 = {};
                                                  for (var $251 in st) {
                                                      if ({}.hasOwnProperty.call(st, $251)) {
                                                          $250[$251] = st[$251];
                                                      };
                                                  };
                                                  $250.irdb = new Data_Maybe.Just(irdb);
                                                  return $250;
                                              });
                                          });
                                      };
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                  })())(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(new Route.Infrared(new Data_Maybe.Just(newQry))))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Page_Commons.enablePopover))(function () {
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof HandleEditorUpdate && v.value0 instanceof Components_InfraredCodeEditor.TextChanged) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          var val = {
                              button_number: v1.buttonNumber,
                              code: v.value0.value0
                          };
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                              var $257 = {};
                              for (var $258 in st) {
                                  if ({}.hasOwnProperty.call(st, $258)) {
                                      $257[$258] = st[$258];
                                  };
                              };
                              $257.infraredValue = new Data_Maybe.Just(new Data_Either.Right(val));
                              return $257;
                          }))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                          });
                      });
                  };
                  if (v instanceof HandleEditorUpdate && v.value0 instanceof Components_InfraredCodeEditor.Reset) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                          var $263 = {};
                          for (var $264 in st) {
                              if ({}.hasOwnProperty.call(st, $264)) {
                                  $263[$264] = st[$264];
                              };
                          };
                          $263.infraredValue = Data_Maybe.Nothing.value;
                          return $263;
                      }))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                      });
                  };
                  throw new Error("Failed pattern match at Page.Infrared (line 219, column 16 - line 388, column 16): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var _infraredCodeEditor = Data_Symbol.SProxy.value;
  var renderInfraredRemoconCode = function (dictMonadAff) {
      return function (state) {
          var display = function (ir) {
              var baseband = Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Text_Parsing_Parser.parseErrorMessage)(Text_Parsing_Parser.runParser(ir.code)(InfraredRemote_Code.infraredCodeTextParser));
              var bitPatterns = Control_Bind.bindFlipped(Data_Either.bindEither)((function () {
                  var $291 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(InfraredRemote_Code.decodePhase2);
                  return function ($292) {
                      return $291(InfraredRemote_Code.decodePhase1($292));
                  };
              })())(baseband);
              var irframes = Control_Bind.bindFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(InfraredRemote_Code.decodePhase3))(bitPatterns);
              var irRemoteCode = Data_Bifunctor.rmap(Data_Either.bifunctorEither)(InfraredRemote_Code.decodePhase4)(irframes);
              return Halogen_HTML_Elements.p_([ Halogen_HTML_Elements.h3_([ Halogen_HTML_Core.text("Binaries") ]), Halogen_HTML_Elements.p([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.p3, "overflow-auto" ]), Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.padding(CSS_Size.px(10.0))(CSS_Size.px(10.0))(CSS_Size.px(10.0))(CSS_Size.px(10.0)))(function () {
                  return CSS_Geometry.minHeight(CSS_Size.em(5.0));
              })) ])([ (function () {
                  if (state.infraredValue instanceof Data_Maybe.Nothing) {
                      return Halogen_HTML_Core.text("");
                  };
                  if (state.infraredValue instanceof Data_Maybe.Just && state.infraredValue.value0 instanceof Data_Either.Left) {
                      return Halogen_HTML_Core.text(state.infraredValue.value0.value0);
                  };
                  if (state.infraredValue instanceof Data_Maybe.Just && state.infraredValue.value0 instanceof Data_Either.Right) {
                      var input = (Data_Newtype.unwrap(Api.newtypeDatumInfraRed)(state.infraredValue.value0.value0)).code;
                      var bb = toBaseband(input);
                      return Data_Either.either(Halogen_HTML_Core.text)(function ($293) {
                          return Halogen_HTML_Core.text(InfraredRemote_Code.toInfraredHexString($293));
                      })(bb);
                  };
                  throw new Error("Failed pattern match at Page.Infrared (line 975, column 13 - line 983, column 68): " + [ state.infraredValue.constructor.name ]);
              })() ]), Halogen_HTML_Elements.h3_([ Halogen_HTML_Core.text("Timing table in milliseconds") ]), Halogen_HTML_Elements.p([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.p3) ])([ Data_Either.either(Halogen_HTML_Core.text)(infraredTimingTable)(baseband) ]), Halogen_HTML_Elements.h3_([ Halogen_HTML_Core.text("Bit patterns") ]), Halogen_HTML_Elements.p([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.p3) ])(Data_Either.either(function ($294) {
                  return Data_Array.singleton(Halogen_HTML_Core.text($294));
              })((function () {
                  var $295 = Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Halogen_HTML_Elements.hr_ ]);
                  var $296 = Data_Functor.map(Data_Functor.functorArray)(infraredBitpatterns);
                  return function ($297) {
                      return $295($296($297));
                  };
              })())(bitPatterns)), Halogen_HTML_Elements.h3_([ Halogen_HTML_Core.text("Infrared remote control frames") ]), renderBitOrderTab(dictMonadAff)(state), Halogen_HTML_Elements.p([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.p3) ])(Data_Either.either(function ($298) {
                  return Data_Array.singleton(Halogen_HTML_Core.text($298));
              })((function () {
                  var $299 = Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Halogen_HTML_Elements.hr_ ]);
                  var $300 = Data_Functor.map(Data_Functor.functorArray)(infraredCodeFrame(state));
                  return function ($301) {
                      return $299($300($301));
                  };
              })())(irframes)), Halogen_HTML_Elements.h3_([ Halogen_HTML_Core.text("Infrared remote control code") ]), Halogen_HTML_Elements.p([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.p3) ])(Data_Either.either(function ($302) {
                  return Data_Array.singleton(Halogen_HTML_Core.text($302));
              })(infraredRemoteControlCode)(irRemoteCode)) ]);
          };
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.formGroup) ])((function () {
              if (state.infraredValue instanceof Data_Maybe.Nothing) {
                  return [ Halogen_HTML_Elements.h3_([ Halogen_HTML_Core.text("Edit codes") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "infraredCodeEditor";
                  }))(Data_Ord.ordUnit)(_infraredCodeEditor)(Data_Unit.unit)(Components_InfraredCodeEditor.component(dictMonadAff))("")(function ($303) {
                      return Data_Maybe.Just.create(HandleEditorUpdate.create($303));
                  }) ];
              };
              if (state.infraredValue instanceof Data_Maybe.Just && state.infraredValue.value0 instanceof Data_Either.Left) {
                  return [ Halogen_HTML_Elements.h3_([ Halogen_HTML_Core.text("Edit codes") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "infraredCodeEditor";
                  }))(Data_Ord.ordUnit)(_infraredCodeEditor)(Data_Unit.unit)(Components_InfraredCodeEditor.component(dictMonadAff))("")(function ($304) {
                      return Data_Maybe.Just.create(HandleEditorUpdate.create($304));
                  }) ];
              };
              if (state.infraredValue instanceof Data_Maybe.Just && state.infraredValue.value0 instanceof Data_Either.Right) {
                  return [ Halogen_HTML_Elements.h3_([ Halogen_HTML_Core.text("Edit codes") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "infraredCodeEditor";
                  }))(Data_Ord.ordUnit)(_infraredCodeEditor)(Data_Unit.unit)(Components_InfraredCodeEditor.component(dictMonadAff))(state.infraredValue.value0.value0.code)(function ($305) {
                      return Data_Maybe.Just.create(HandleEditorUpdate.create($305));
                  }), display(state.infraredValue.value0.value0) ];
              };
              throw new Error("Failed pattern match at Page.Infrared (line 943, column 7 - line 958, column 10): " + [ state.infraredValue.constructor.name ]);
          })());
      };
  };
  var renderControlPanel = function (dictMonadAff) {
      return function (state) {
          return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.formInline) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.formGroup ]) ])([ Halogen_HTML_Elements.label_([ Halogen_HTML_Core.text("Button Number") ]), Halogen_HTML_Elements.select([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.m3, Halogen_Themes_Bootstrap4.formControl ]), Halogen_HTML_Events.onValueChange(function ($306) {
              return Data_Maybe.Just.create(OnValueChangeButtonNumber.create($306));
          }) ])(Data_Functor.map(Data_Functor.functorArray)((function () {
              var $307 = Data_Int.toStringAs(Data_Int.decimal);
              return function ($308) {
                  return Halogen_HTML_Elements.option_(Data_Array.singleton(Halogen_HTML_Core.text($307($308))));
              };
          })())(Data_Array.range(1)(10))) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.m3, Halogen_Themes_Bootstrap4.formGroup ]) ])([ irDownloadButton, irUploadButton(Data_Maybe.maybe(false)(Data_Either.isRight)(state.infraredValue)), irTransmitButton(Data_Maybe.maybe(false)(Data_Either.isRight)(state.infraredValue)) ]) ]), renderInfraredRemoconCode(dictMonadAff)(state) ]);
      };
  };
  var render = function (dictMonadAff) {
      return function (state) {
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.id_("wrapper") ])([ Page_Commons.navbar(NavigateTo.create)(new Route.Infrared(Data_Maybe.Nothing.value)), Halogen_HTML_Elements.main([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.container) ])([ renderTab(dictMonadAff)(state), (function () {
              var v = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Enum.toEnum(boundedEnumSelectedTab))(state.queryParams.tab);
              if (v instanceof Data_Maybe.Nothing) {
                  return renderControlPanel(dictMonadAff)(state);
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof TabControlPanel) {
                  return renderControlPanel(dictMonadAff)(state);
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof TabIrdbTable) {
                  return renderIrdbTable(dictMonadAff)(state);
              };
              throw new Error("Failed pattern match at Page.Infrared (line 202, column 9 - line 205, column 57): " + [ v.constructor.name ]);
          })() ]), Page_Commons.footer ]);
      };
  };
  var component = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictMonadAff)(dictNavigate)(dictHasApiAccessible),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: function ($309) {
                          return Data_Maybe.Just.create(ChangedRoute.create($309));
                      },
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Page.Plotdata"] = $PS["Page.Plotdata"] || {};
  var exports = $PS["Page.Plotdata"];
  var Api = $PS["Api"];
  var AppM = $PS["AppM"];
  var CSS_Geometry = $PS["CSS.Geometry"];
  var CSS_Size = $PS["CSS.Size"];
  var Component_LineChart = $PS["Component.LineChart"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Either = $PS["Data.Either"];
  var Data_Formatter_Number = $PS["Data.Formatter.Number"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Foreign_ChartJs = $PS["Foreign.ChartJs"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Themes_Bootstrap4 = $PS["Halogen.Themes.Bootstrap4"];
  var Page_Commons = $PS["Page.Commons"];
  var Route = $PS["Route"];
  var Utils = $PS["Utils"];                
  var NavigateTo = (function () {
      function NavigateTo(value0) {
          this.value0 = value0;
      };
      NavigateTo.create = function (value0) {
          return new NavigateTo(value0);
      };
      return NavigateTo;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var ChangedRoute = (function () {
      function ChangedRoute(value0) {
          this.value0 = value0;
      };
      ChangedRoute.create = function (value0) {
          return new ChangedRoute(value0);
      };
      return ChangedRoute;
  })();
  var OnInputRecordsLimit = (function () {
      function OnInputRecordsLimit(value0) {
          this.value0 = value0;
      };
      OnInputRecordsLimit.create = function (value0) {
          return new OnInputRecordsLimit(value0);
      };
      return OnInputRecordsLimit;
  })();
  var initialQueryParams = {
      limits: new Data_Maybe.Just(30)
  };
  var initialState = function (route) {
      var qry = (function () {
          if (route instanceof Route.Plotdata && route.value0 instanceof Data_Maybe.Nothing) {
              return initialQueryParams;
          };
          if (route instanceof Route.Plotdata && route.value0 instanceof Data_Maybe.Just) {
              return {
                  limits: Control_Alt.alt(Data_Maybe.altMaybe)(route.value0.value0.limits)(initialQueryParams.limits)
              };
          };
          return initialQueryParams;
      })();
      return {
          queryParams: qry,
          measValues: [  ]
      };
  };
  var idChartArea = {
      temp: "temp-chart-area",
      press: "press-chart-area",
      hum: "hum-chart-area"
  };
  var handleAction = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              return function (v) {
                  if (v instanceof NavigateTo) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(v.value0))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                      });
                  };
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          var newRoute = new Route.Plotdata(new Data_Maybe.Just(v1.queryParams));
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(handleAction(dictMonadAff)(dictNavigate)(dictHasApiAccessible)(new ChangedRoute(newRoute))))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                          });
                      });
                  };
                  if (v instanceof ChangedRoute) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (curState) {
                          var state = (function () {
                              if (v.value0 instanceof Route.Plotdata && v.value0.value0 instanceof Data_Maybe.Nothing) {
                                  var $32 = {};
                                  for (var $33 in curState) {
                                      if ({}.hasOwnProperty.call(curState, $33)) {
                                          $32[$33] = curState[$33];
                                      };
                                  };
                                  $32.queryParams = initialQueryParams;
                                  return $32;
                              };
                              if (v.value0 instanceof Route.Plotdata && v.value0.value0 instanceof Data_Maybe.Just) {
                                  var $36 = {};
                                  for (var $37 in curState) {
                                      if ({}.hasOwnProperty.call(curState, $37)) {
                                          $36[$37] = curState[$37];
                                      };
                                  };
                                  $36.queryParams = v.value0.value0.value0;
                                  return $36;
                              };
                              return curState;
                          })();
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiBaseURL(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (url) {
                              var param = {
                                  baseurl: url,
                                  limits: state.queryParams.limits
                              };
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Api.getApiV1Measurements(param)))(function (res) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                      if (res instanceof Data_Either.Left) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(state))(function () {
                                              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Console.logShow(Data_Show.showString)(res.value0));
                                          });
                                      };
                                      if (res instanceof Data_Either.Right) {
                                          return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)((function () {
                                              var $43 = {};
                                              for (var $44 in state) {
                                                  if ({}.hasOwnProperty.call(state, $44)) {
                                                      $43[$44] = state[$44];
                                                  };
                                              };
                                              $43.measValues = res.value0.body;
                                              return $43;
                                          })());
                                      };
                                      throw new Error("Failed pattern match at Page.Plotdata (line 205, column 5 - line 211, column 49): " + [ res.constructor.name ]);
                                  })())(function () {
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                  });
                              });
                          });
                      });
                  };
                  if (v instanceof OnInputRecordsLimit) {
                      var newLimits = Data_Int.fromString(v.value0);
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          var newQueryParams = {
                              limits: newLimits
                          };
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                              var $49 = {};
                              for (var $50 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $50)) {
                                      $49[$50] = v2[$50];
                                  };
                              };
                              $49.queryParams = newQueryParams;
                              return $49;
                          }))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(new Route.Plotdata(new Data_Maybe.Just(newQueryParams))))(function () {
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                              });
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Page.Plotdata (line 179, column 16 - line 220, column 16): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var fromNumber = (function () {
      var $57 = Data_Either.either(Data_Function["const"]("N/A"))(Control_Category.identity(Control_Category.categoryFn));
      var $58 = Data_Formatter_Number.formatNumber("0.00");
      return function ($59) {
          return $57($58($59));
      };
  })();
  var measurementalTable = function (measValues) {
      var tableRow = function (v) {
          var datetime = Utils.asiaTokyoDateTime(Data_Newtype.unwrap(Api.newtypeMeasDateTime)(v.measured_at));
          return Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text(Data_Maybe.fromMaybe("N/A")(Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
              return v2.date;
          })(datetime))) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text(Data_Maybe.fromMaybe("N/A")(Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
              return v2.time;
          })(datetime))) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text(fromNumber(v.degc)) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text(fromNumber(v.hpa)) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text(fromNumber(v.rh)) ]) ]);
      };
      var heading = [ Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text("\u65e5\u4ed8") ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text("\u6642\u523b") ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text("\u6e29\u5ea6") ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text("\u6c17\u5727") ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text("\u6e7f\u5ea6") ]) ]) ];
      return Halogen_HTML_Elements.table([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.table) ])([ Halogen_HTML_Elements.thead_(heading), Halogen_HTML_Elements.tbody_(Data_Functor.map(Data_Functor.functorArray)(tableRow)(measValues)) ]);
  };
  var chartLabels = function (values) {
      var showDateTime = function (x) {
          return x.date + (" " + x.time);
      };
      var measDateTime = (function () {
          var $60 = Data_Newtype.unwrap(Api.newtypeMeasEnvironment);
          return function ($61) {
              return (function (v) {
                  return v.measured_at;
              })($60($61));
          };
      })();
      var localDateTime = (function () {
          var $62 = Data_Newtype.unwrap(Api.newtypeMeasDateTime);
          return function ($63) {
              return Utils.asiaTokyoDateTime($62($63));
          };
      })();
      return Data_Functor.map(Data_Functor.functorArray)((function () {
          var $64 = Data_Maybe.maybe("N/A")(showDateTime);
          return function ($65) {
              return $64(localDateTime(measDateTime($65)));
          };
      })())(values);
  };
  var chartDatasets = function (values) {
      var labels = chartLabels(values);
      var dRh = {
          label: "\u76f8\u5bfe\u6e7f\u5ea6[\uff05]",
          data: Data_Functor.map(Data_Functor.functorArray)((function () {
              var $66 = Data_Newtype.unwrap(Api.newtypeMeasEnvironment);
              return function ($67) {
                  return (function (v) {
                      return v.rh;
                  })($66($67));
              };
          })())(values),
          backgroundColor: [ "rgba(0, 99, 200, 0.2)" ],
          borderColor: [ "rgba(0, 99, 200, 1)" ],
          borderWidth: 1
      };
      var dHpa = {
          label: "\u6c17\u5727[hpa]",
          data: Data_Functor.map(Data_Functor.functorArray)((function () {
              var $68 = Data_Newtype.unwrap(Api.newtypeMeasEnvironment);
              return function ($69) {
                  return (function (v) {
                      return v.hpa;
                  })($68($69));
              };
          })())(values),
          backgroundColor: [ "rgba(99, 200, 0, 0.2)" ],
          borderColor: [ "rgba(99, 200, 0, 1)" ],
          borderWidth: 1
      };
      var dDegc = {
          label: "\u6c17\u6e29[\u2103]",
          data: Data_Functor.map(Data_Functor.functorArray)((function () {
              var $70 = Data_Newtype.unwrap(Api.newtypeMeasEnvironment);
              return function ($71) {
                  return (function (v) {
                      return v.degc;
                  })($70($71));
              };
          })())(values),
          backgroundColor: [ "rgba(255, 99, 132, 0.2)" ],
          borderColor: [ "rgba(255, 99, 132, 1)" ],
          borderWidth: 1
      };
      return {
          degc: {
              labels: labels,
              datasets: [ dDegc ]
          },
          hpa: {
              labels: labels,
              datasets: [ dHpa ]
          },
          rh: {
              labels: labels,
              datasets: [ dRh ]
          }
      };
  };
  var card = function (id_) {
      return function (class_) {
          return function (header) {
              return function (body) {
                  return Halogen_HTML_Elements.article([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.card) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.cardHeader), Halogen_HTML_Properties.attr("data-toggle")("collapse"), Halogen_HTML_Properties.attr("data-target")("#" + id_), Halogen_HTML_Properties.attr("aria-expanded")("true"), Halogen_HTML_Properties.attr("aria-controls")(id_) ])([ Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.ml0) ])([ Halogen_HTML_Core.text(header) ]), Halogen_HTML_Elements.span([ Halogen_HTML_CSS.style(CSS_Geometry.marginLeft(CSS_Size.rem(1.0))) ])([  ]), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.textRight) ])([ Page_Commons.icon("fas fa-chevron-down") ]) ]), Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_Themes_Bootstrap4.cardBody, Halogen_Themes_Bootstrap4.collapse ])(class_)), Halogen_HTML_CSS.style(CSS_Geometry.height(CSS_Size.vh(90.0))), Halogen_HTML_Properties.id_(id_), Halogen_HTML_Properties.attr("aria-labelledby")(id_), Halogen_HTML_Properties.attr("data-parent")("#" + id_) ])(body) ]);
              };
          };
      };
  };
  var _cTemperature = Data_Symbol.SProxy.value;
  var _cPressure = Data_Symbol.SProxy.value;
  var _cHum = Data_Symbol.SProxy.value;
  var render = function (dictMonadAff) {
      return function (state) {
          var chartdatasets = chartDatasets(state.measValues);
          var humChartData = {
              canvasId: idChartArea.hum,
              datasets: chartdatasets.rh,
              options: Foreign_ChartJs.defLineChartOptions
          };
          var pressChartData = {
              canvasId: idChartArea.press,
              datasets: chartdatasets.hpa,
              options: Foreign_ChartJs.defLineChartOptions
          };
          var tempChartData = {
              canvasId: idChartArea.temp,
              datasets: chartdatasets.degc,
              options: Foreign_ChartJs.defLineChartOptions
          };
          return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.id_("wrapper") ])([ Page_Commons.navbar(NavigateTo.create)(new Route.Plotdata(Data_Maybe.Nothing.value)), Halogen_HTML_Elements.main([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.container) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.alert, Halogen_Themes_Bootstrap4.alertInfo ]) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.formGroup) ])([ Halogen_HTML_Elements.label([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.alertHeading) ])([ Halogen_HTML_Core.text("\u8868\u793a\u6570"), Halogen_HTML_Elements.span([ Halogen_HTML_CSS.style(CSS_Geometry.marginLeft(CSS_Size.rem(1.0))) ])([  ]), (function () {
              if (state.queryParams.limits instanceof Data_Maybe.Nothing) {
                  return Halogen_HTML_Core.text("--");
              };
              if (state.queryParams.limits instanceof Data_Maybe.Just) {
                  return Halogen_HTML_Core.text(Data_Int.toStringAs(Data_Int.decimal)(state.queryParams.limits.value0));
              };
              throw new Error("Failed pattern match at Page.Plotdata (line 149, column 15 - line 151, column 65): " + [ state.queryParams.limits.constructor.name ]);
          })() ]), Halogen_HTML_Elements.input([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.customRange), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputRange.value), Halogen_HTML_Properties.attr("min")("10"), Halogen_HTML_Properties.attr("max")("1000"), Halogen_HTML_Properties.attr("step")("10"), Halogen_HTML_Events.onValueInput(function (x) {
              return Data_Maybe.Just.create(new OnInputRecordsLimit(x));
          }) ]) ]) ]), card("temp")([  ])("\u6c17\u6e29")([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cTemperature";
          }))(Data_Ord.ordUnit)(_cTemperature)(Data_Unit.unit)(Component_LineChart.component(dictMonadAff))(tempChartData)(Data_Void.absurd) ]), card("pres")([  ])("\u6c17\u5727")([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cPressure";
          }))(Data_Ord.ordUnit)(_cPressure)(Data_Unit.unit)(Component_LineChart.component(dictMonadAff))(pressChartData)(Data_Void.absurd) ]), card("humi")([  ])("\u76f8\u5bfe\u6e7f\u5ea6")([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "cHum";
          }))(Data_Ord.ordUnit)(_cHum)(Data_Unit.unit)(Component_LineChart.component(dictMonadAff))(humChartData)(Data_Void.absurd) ]), card("meas")([  ])("\u6e2c\u5b9a\u5024")([ measurementalTable(state.measValues) ]) ]), Page_Commons.footer ]);
      };
  };
  var component = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictMonadAff),
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictMonadAff)(dictNavigate)(dictHasApiAccessible),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Page.Settings"] = $PS["Page.Settings"] || {};
  var exports = $PS["Page.Settings"];
  var Api = $PS["Api"];
  var AppM = $PS["AppM"];
  var CSS_Geometry = $PS["CSS.Geometry"];
  var CSS_Size = $PS["CSS.Size"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var DOM_HTML_Indexed_FormMethod = $PS["DOM.HTML.Indexed.FormMethod"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Int = $PS["Data.Int"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Themes_Bootstrap4 = $PS["Halogen.Themes.Bootstrap4"];
  var Page_Commons = $PS["Page.Commons"];
  var Route = $PS["Route"];
  var Utils = $PS["Utils"];                
  var NavigateTo = (function () {
      function NavigateTo(value0) {
          this.value0 = value0;
      };
      NavigateTo.create = function (value0) {
          return new NavigateTo(value0);
      };
      return NavigateTo;
  })();
  var Initialize = (function () {
      function Initialize() {

      };
      Initialize.value = new Initialize();
      return Initialize;
  })();
  var OnClickI2CDetect = (function () {
      function OnClickI2CDetect() {

      };
      OnClickI2CDetect.value = new OnClickI2CDetect();
      return OnClickI2CDetect;
  })();
  var uploadCsvFile = function (state) {
      return Halogen_HTML_Elements.form([ Halogen_HTML_Properties.method(DOM_HTML_Indexed_FormMethod.POST.value), Halogen_HTML_Properties.action(state.urlApiV1IRCSV), Halogen_HTML_Properties.enctype("multipart/form-data") ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.formGroup ]) ])([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.btnPrimary ]), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputSubmit.value), Halogen_HTML_Properties.value("Submit") ]) ]) ]);
  };
  var toHexS = Data_Int.toStringAs(Data_Int.hexadecimal);
  var tableRow = function (index) {
      return function (columns) {
          var tl = (function () {
              var f = function ($31) {
                  return Halogen_HTML_Elements.td_(Data_Array.singleton(Halogen_HTML_Core.text($31)));
              };
              return Data_Functor.map(Data_Functor.functorArray)(f)(columns);
          })();
          var hd = Halogen_HTML_Elements.th_([ Halogen_HTML_Core.text(toHexS(index)) ]);
          return Halogen_HTML_Elements.tr_(Data_Array.cons(hd)(tl));
      };
  };
  var tableHeading = function (range) {
      var tl = (function () {
          var f = function ($32) {
              return Halogen_HTML_Elements.th_(Data_Array.singleton(Halogen_HTML_Core.text(toHexS($32))));
          };
          return Data_Functor.map(Data_Functor.functorArray)(f)(range);
      })();
      var hd = Halogen_HTML_Elements.th_([ Halogen_HTML_Core.text("#") ]);
      return Halogen_HTML_Elements.thead_([ Halogen_HTML_Elements.tr_(Data_Array.cons(hd)(tl)) ]);
  };
  var tableBody = function (range) {
      return function (array2D) {
          return Halogen_HTML_Elements.tbody_(Data_Array.zipWith(tableRow)(range)(array2D));
      };
  };
  var initialState = function (v) {
      return {
          urlApiV1IRCSV: "",
          detectedAddresses: Data_Maybe.Nothing.value
      };
  };
  var i2cDevices = (function () {
      var devices = function (xs) {
          var f = function (n) {
              return new Data_Tuple.Tuple(n, toHexS(n));
          };
          return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(f)(xs));
      };
      var cellFiller = function (addr) {
          if (Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
              return v === addr;
          })(Data_Array.range(3)(119))) {
              return "\u2022";
          };
          if (Data_Boolean.otherwise) {
              return " ";
          };
          throw new Error("Failed pattern match at Page.Settings (line 203, column 3 - line 203, column 30): " + [ addr.constructor.name ]);
      };
      var addressTableRangeRowHeading = Data_Functor.map(Data_Functor.functorArray)(function (v) {
          return v * 16 | 0;
      })(Data_Array.range(0)(15));
      var addressTableRangeHeading = Data_Array.range(0)(15);
      var addressTableRange = Data_Array.range(0)(127);
      var detectedDevAddresses = function (addresses) {
          var f = function (x) {
              return Data_Maybe.fromMaybe(cellFiller(x))(Data_Map_Internal.lookup(Data_Ord.ordInt)(x)(devices(addresses)));
          };
          return Data_Functor.map(Data_Functor.functorArray)(f)(addressTableRange);
      };
      return function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Halogen_HTML_Elements.p([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.alert, Halogen_Themes_Bootstrap4.alertInfo ]) ])([ Halogen_HTML_Core.text("Click Search button to detect devices.") ]);
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof Data_Either.Left) {
              return Halogen_HTML_Elements.p([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.alert, Halogen_Themes_Bootstrap4.alertDanger, Halogen_Themes_Bootstrap4.textCenter ]) ])([ Halogen_HTML_Core.text(v.value0.value0) ]);
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof Data_Either.Right) {
              return Halogen_HTML_Elements.p([  ])([ Halogen_HTML_Elements.table([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.table, Halogen_Themes_Bootstrap4.tableHover ]) ])([ Halogen_HTML_Elements.caption_([ Halogen_HTML_Core.text("Hexadecimal addresses") ]), tableHeading(addressTableRangeHeading), tableBody(addressTableRangeRowHeading)(Utils.toArrayArray(16)(detectedDevAddresses(v.value0.value0))) ]) ]);
          };
          throw new Error("Failed pattern match at Page.Settings (line 163, column 14 - line 184, column 8): " + [ v.constructor.name ]);
      };
  })();
  var i2cDetectButton = function (action) {
      return Halogen_HTML_Elements.button([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.btn, Halogen_Themes_Bootstrap4.btnOutlineSuccess, Halogen_Themes_Bootstrap4.justifyContentCenter ]), Halogen_HTML_Events.onClick(function (v) {
          return new Data_Maybe.Just(action);
      }), Halogen_HTML_CSS.style(CSS_Geometry.marginLeft(CSS_Size.px(31.0))) ])([ Page_Commons.icon("fas fa-search") ]);
  };
  var i2c = Halogen_HTML_Elements.span_([ Halogen_HTML_Core.text("I"), Halogen_HTML_Elements.sup_([ Halogen_HTML_Core.text("2") ]), Halogen_HTML_Core.text("C") ]);
  var render = function (state) {
      return Halogen_HTML_Elements.div([ Halogen_HTML_Properties.id_("wrapper") ])([ Page_Commons.navbar(NavigateTo.create)(Route.Settings.value), Halogen_HTML_Elements.main([ Halogen_HTML_Properties.classes([ Halogen_Themes_Bootstrap4.mbAuto, Halogen_Themes_Bootstrap4.container ]) ])([ Halogen_HTML_Elements.h2([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.h2) ])([ i2c, Halogen_HTML_Core.text(" devices"), i2cDetectButton(OnClickI2CDetect.value) ]), i2cDevices(state.detectedAddresses), Halogen_HTML_Elements.h2([ Halogen_HTML_Properties.class_(Halogen_Themes_Bootstrap4.h2) ])([ Halogen_HTML_Core.text("Upload to Infrared Code Database") ]), uploadCsvFile(state) ]), Page_Commons.footer ]);
  };
  var handleAction = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              return function (v) {
                  if (v instanceof NavigateTo) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(AppM.navigate(AppM.navigateHalogenM(dictNavigate))(v.value0))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                      });
                  };
                  if (v instanceof Initialize) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiBaseURL(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (url) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                              var $24 = {};
                              for (var $25 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $25)) {
                                      $24[$25] = v1[$25];
                                  };
                              };
                              $24.urlApiV1IRCSV = Api.urlApiV1Ircsv(url);
                              return $24;
                          }))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                          });
                      });
                  };
                  if (v instanceof OnClickI2CDetect) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiBaseURL(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (url) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(AppM.getApiTimeout(AppM.hasApiAccessibleHalogenM(dictHasApiAccessible)))(function (millisec) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))((function () {
                                  var timeout = Data_Functor.voidLeft(Effect_Aff.functorAff)(Effect_Aff.delay(millisec))(new Data_Either.Left("\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u306e\u5fdc\u7b54\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f"));
                                  var param = {
                                      baseurl: url,
                                      busnumber: new Data_Maybe.Just(1)
                                  };
                                  var request = Api.getApiV1I2cDevices(param);
                                  var i2cdevices = function (v1) {
                                      return v1.data;
                                  };
                                  var response = Data_Bifunctor.rmap(Data_Either.bifunctorEither)(function (x) {
                                      return i2cdevices(x.body);
                                  });
                                  return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Alt.alt(Effect_Aff.altParAff)(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Data_Functor.map(Effect_Aff.functorAff)(response)(request)))(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(timeout)));
                              })()))(function (val) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                      var $28 = {};
                                      for (var $29 in st) {
                                          if ({}.hasOwnProperty.call(st, $29)) {
                                              $28[$29] = st[$29];
                                          };
                                      };
                                      $28.detectedAddresses = new Data_Maybe.Just(val);
                                      return $28;
                                  }))(function () {
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Monoid.mempty(Data_Monoid.monoidUnit));
                                  });
                              });
                          });
                      });
                  };
                  throw new Error("Failed pattern match at Page.Settings (line 117, column 16 - line 139, column 18): " + [ v.constructor.name ]);
              };
          };
      };
  };                                                         
  var component = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render,
                  "eval": Halogen_Component.mkEval({
                      handleAction: handleAction(dictMonadAff)(dictNavigate)(dictHasApiAccessible),
                      handleQuery: Halogen_Component.defaultEval.handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: new Data_Maybe.Just(Initialize.value),
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.Parser"] = $PS["Routing.Parser"] || {};
  var exports = $PS["Routing.Parser"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Routing_Types = $PS["Routing.Types"];                
  var parseQueryPart = function (decoder) {
      var part2tuple = function (input) {
          var keyVal = Data_Functor.map(Data_Functor.functorArray)(decoder)(Data_String_Common.split("=")(input));
          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Array.length(keyVal) <= 2))(function () {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(keyVal)))(Data_Array.index(keyVal)(1));
          });
      };
      var $11 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray));
      var $12 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(part2tuple);
      var $13 = Data_String_Common.split("&");
      return function ($14) {
          return $11($12($13($14)));
      };
  };
  var parse = function (decoder) {
      return function (hash) {
          var pathParts = function (str) {
              var parts = Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function ($15) {
                  return Routing_Types.Path.create(decoder($15));
              })(Data_String_Common.split("/")(str)));
              var v = Data_List.unsnoc(parts);
              if (v instanceof Data_Maybe.Just && (v.value0.last instanceof Routing_Types.Path && v.value0.last.value0 === "")) {
                  return v.value0.init;
              };
              return parts;
          };
          var v = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_String_CodePoints.splitAt)(hash))(Data_String_CodePoints.indexOf("?")(hash));
          if (v instanceof Data_Maybe.Just) {
              return Data_Semigroup.append(Data_List_Types.semigroupList)(pathParts(v.value0.before))(Data_Functor.map(Data_List_Types.functorList)(Routing_Types.Query.create)(Data_List.fromFoldable(Data_Foldable.foldableMaybe)(parseQueryPart(decoder)(Data_String_CodePoints.drop(1)(v.value0.after)))));
          };
          if (v instanceof Data_Maybe.Nothing) {
              return pathParts(hash);
          };
          throw new Error("Failed pattern match at Routing.Parser (line 32, column 3 - line 37, column 21): " + [ v.constructor.name ]);
      };
  };
  exports["parse"] = parse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing"] = $PS["Routing"] || {};
  var exports = $PS["Routing"];
  var Global_Unsafe = $PS["Global.Unsafe"];
  var Routing_Match = $PS["Routing.Match"];
  var Routing_Parser = $PS["Routing.Parser"];                
  var matchWith = function (decoder) {
      return function (matcher) {
          var $0 = Routing_Match.runMatch(matcher);
          var $1 = Routing_Parser.parse(decoder);
          return function ($2) {
              return $0($1($2));
          };
      };
  };
  var match = matchWith(Global_Unsafe.unsafeDecodeURIComponent);
  exports["match"] = match;
})(PS);
(function(exports) {
  "use strict";

  exports.createTextNode = function (data) {
    return function (doc) {
      return function () {
        return doc.createTextNode(data);
      };
    };
  };
})(PS["Web.DOM.Document"] = PS["Web.DOM.Document"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.Document"] = $PS["Web.DOM.Document"] || {};
  var exports = $PS["Web.DOM.Document"];
  var $foreign = $PS["Web.DOM.Document"];
  exports["createTextNode"] = $foreign.createTextNode;
})(PS);
(function(exports) {
  "use strict";

  exports.mutationObserver = function (cb) {
    return function () {
      return new MutationObserver(function (mr, mo) {
        return cb(mr)(mo)();
      });
    };
  };

  exports._observe = function (node) {
    return function (config) {
      return function (mo) {
        return function () {
          return mo.observe(node, config);
        };
      };
    };
  };
})(PS["Web.DOM.MutationObserver"] = PS["Web.DOM.MutationObserver"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.MutationObserver"] = $PS["Web.DOM.MutationObserver"] || {};
  var exports = $PS["Web.DOM.MutationObserver"];
  var $foreign = $PS["Web.DOM.MutationObserver"];
  var observe = function (dictUnion) {
      return $foreign["_observe"];
  };
  exports["observe"] = observe;
  exports["mutationObserver"] = $foreign.mutationObserver;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.DOM.Text"] = $PS["Web.DOM.Text"] || {};
  var exports = $PS["Web.DOM.Text"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.Event.PopStateEvent.EventTypes"] = $PS["Web.HTML.Event.PopStateEvent.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.PopStateEvent.EventTypes"];
  var popstate = "popstate";
  exports["popstate"] = popstate;
})(PS);
(function(exports) {
  "use strict";
  exports.pushState = function(a) {
    return function(docTitle) {
      return function(url) {
        return function(history) {
          return function() {
            return history.pushState(a, docTitle, url);
          };
        };
      };
    };
  };
  exports.replaceState = function(a) {
    return function(docTitle) {
      return function(url) {
        return function(history) {
          return function() {
            return history.replaceState(a, docTitle, url);
          };
        };
      };
    };
  };
  exports.state = function(history) {
    return function() {
      return history.state;
    };
  };
})(PS["Web.HTML.History"] = PS["Web.HTML.History"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.History"] = $PS["Web.HTML.History"] || {};
  var exports = $PS["Web.HTML.History"];
  var $foreign = $PS["Web.HTML.History"];
  exports["pushState"] = $foreign.pushState;
  exports["replaceState"] = $foreign.replaceState;
  exports["state"] = $foreign.state;
})(PS);
(function(exports) {
  "use strict";

  exports.hash = function (location) {
    return function () {
      return location.hash;
    };
  };

  // ----------------------------------------------------------------------------

  exports.origin = function (location) {
    return function () {
      return location.origin;
    };
  };

  // ----------------------------------------------------------------------------

  exports.pathname = function (location) {
    return function () {
      return location.pathname;
    };
  };

  // ----------------------------------------------------------------------------

  exports.search = function (location) {
    return function () {
      return location.search;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Web.HTML.Location"] = $PS["Web.HTML.Location"] || {};
  var exports = $PS["Web.HTML.Location"];
  var $foreign = $PS["Web.HTML.Location"];
  exports["hash"] = $foreign.hash;
  exports["origin"] = $foreign.origin;
  exports["pathname"] = $foreign.pathname;
  exports["search"] = $foreign.search;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Routing.PushState"] = $PS["Routing.PushState"] || {};
  var exports = $PS["Routing.PushState"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Routing = $PS["Routing"];
  var Web_DOM_Document = $PS["Web.DOM.Document"];
  var Web_DOM_MutationObserver = $PS["Web.DOM.MutationObserver"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_DOM_Text = $PS["Web.DOM.Text"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_PopStateEvent_EventTypes = $PS["Web.HTML.Event.PopStateEvent.EventTypes"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_History = $PS["Web.HTML.History"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var makeImmediate = function (run) {
      return function __do() {
          var document = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)((function () {
              var $7 = Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument);
              return function ($8) {
                  return $7(Web_HTML_Window.document($8));
              };
          })())();
          var nextTick = Effect_Ref["new"](new Data_Either.Right(0))();
          var obsvNode = Data_Functor.map(Effect.functorEffect)(Web_DOM_Text.toNode)(Web_DOM_Document.createTextNode("")(document))();
          var observer = Web_DOM_MutationObserver.mutationObserver(function (v) {
              return function (v1) {
                  return function __do() {
                      Effect_Ref.modify_(Data_Either.either((function () {
                          var $9 = Data_Semiring.add(Data_Semiring.semiringInt)(1);
                          return function ($10) {
                              return Data_Either.Right.create($9($10));
                          };
                      })())(Data_Either.Right.create))(nextTick)();
                      return run();
                  };
              };
          })();
          Web_DOM_MutationObserver.observe()(obsvNode)({
              characterData: true
          })(observer)();
          return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(nextTick))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Either.foldableEither)(function (tick) {
              return function __do() {
                  Effect_Ref.write(new Data_Either.Left(tick + 1 | 0))(nextTick)();
                  return Web_DOM_Node.setNodeValue(Data_Show.show(Data_Show.showInt)(tick))(obsvNode)();
              };
          }));
      };
  };
  var makeInterface = function __do() {
      var freshRef = Effect_Ref["new"](0)();
      var listenersRef = Effect_Ref["new"](Data_Map_Internal.empty)();
      var notify = function (ev) {
          return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function (v) {
              return v(ev);
          }))(Effect_Ref.read(listenersRef));
      };
      var locationState = function __do() {
          var loc = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location)();
          var state = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.history))(Web_HTML_History.state)();
          var pathname = Web_HTML_Location.pathname(loc)();
          var search = Web_HTML_Location.search(loc)();
          var hash = Web_HTML_Location.hash(loc)();
          var path = pathname + (search + hash);
          return {
              state: state,
              pathname: pathname,
              search: search,
              hash: hash,
              path: path
          };
      };
      var listen = function (k) {
          return function __do() {
              var fresh = Effect_Ref.read(freshRef)();
              Effect_Ref.write(fresh + 1 | 0)(freshRef)();
              Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(fresh)(k))(listenersRef)();
              return Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(fresh))(listenersRef);
          };
      };
      var schedule = makeImmediate(Control_Bind.bindFlipped(Effect.bindEffect)(notify)(locationState))();
      var stateFn = function (op) {
          return function (state) {
              return function (path) {
                  return function __do() {
                      Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.history))(op(state)("")(path))();
                      return schedule();
                  };
              };
          };
      };
      var listener = Web_Event_EventTarget.eventListener(function (v) {
          return Control_Bind.bindFlipped(Effect.bindEffect)(notify)(locationState);
      })();
      Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)((function () {
          var $11 = Web_Event_EventTarget.addEventListener(Web_HTML_Event_PopStateEvent_EventTypes.popstate)(listener)(false);
          return function ($12) {
              return $11(Web_HTML_Window.toEventTarget($12));
          };
      })())();
      return {
          pushState: stateFn(Web_HTML_History.pushState),
          replaceState: stateFn(Web_HTML_History.replaceState),
          locationState: locationState,
          listen: listen
      };
  };
  var foldLocations = function (cb) {
      return function (init) {
          return function (psi) {
              return function __do() {
                  var ref = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(Control_Bind.bindFlipped(Effect.bindEffect)(init)(psi.locationState))();
                  return psi.listen(function (loc) {
                      return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(Effect_Ref.write)(ref))(Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(cb)(loc))(Effect_Ref.read(ref)));
                  })();
              };
          };
      };
  };
  var foldPaths = function (cb) {
      return function (init) {
          return foldLocations(function (a) {
              var $13 = cb(a);
              return function ($14) {
                  return $13((function (v) {
                      return v.path;
                  })($14));
              };
          })(function ($15) {
              return init((function (v) {
                  return v.path;
              })($15));
          });
      };
  };
  var matchesWith = function (dictFoldable) {
      return function (parser) {
          return function (cb) {
              var go = function (a) {
                  var $16 = Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(a))(function (b) {
                      return Data_Functor.voidRight(Effect.functorEffect)(new Data_Maybe.Just(b))(cb(a)(b));
                  });
                  var $17 = Data_Foldable.indexl(dictFoldable)(0);
                  return function ($18) {
                      return $16($17(parser($18)));
                  };
              };
              return foldPaths(go)(go(Data_Maybe.Nothing.value));
          };
      };
  };
  var matches = (function () {
      var $19 = matchesWith(Data_Either.foldableEither);
      return function ($20) {
          return $19(Routing.match($20));
      };
  })();
  exports["makeInterface"] = makeInterface;
  exports["matches"] = matches;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var AppM = $PS["AppM"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Aff_Util = $PS["Halogen.Aff.Util"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_VDom_Driver = $PS["Halogen.VDom.Driver"];
  var Page_About = $PS["Page.About"];
  var Page_Home = $PS["Page.Home"];
  var Page_Infrared = $PS["Page.Infrared"];
  var Page_Plotdata = $PS["Page.Plotdata"];
  var Page_Settings = $PS["Page.Settings"];
  var Route = $PS["Route"];
  var Routing_PushState = $PS["Routing.PushState"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var Goto = (function () {
      function Goto(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Goto.create = function (value0) {
          return function (value1) {
              return new Goto(value0, value1);
          };
      };
      return Goto;
  })();
  var routeSignal = function (hio) {
      return function ($$interface) {
          var pathChanged = function (v) {
              return function (newRoute) {
                  return function __do() {
                      Data_Functor["void"](Effect.functorEffect)(Effect_Aff.launchAff(hio.query(Halogen_Query.tell(Goto.create(newRoute)))))();
                      return Data_Unit.unit;
                  };
              };
          };
          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_PushState.matches(Route.routing)(pathChanged)($$interface));
      };
  };
  var initialState = function (v) {
      return {
          route: Route.Home.value
      };
  };
  var handleQuery = function (v) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Route.eqRoute)(v1.route)(v.value0))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
              var $14 = {};
              for (var $15 in state) {
                  if ({}.hasOwnProperty.call(state, $15)) {
                      $14[$15] = state[$15];
                  };
              };
              $14.route = v.value0;
              return $14;
          })))(function () {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
          });
      });
  };
  var _pgSettings = Data_Symbol.SProxy.value;
  var _pgPlotdata = Data_Symbol.SProxy.value;
  var _pgInfrared = Data_Symbol.SProxy.value;
  var _pgHome = Data_Symbol.SProxy.value;
  var _pgAbout = Data_Symbol.SProxy.value;
  var render = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              return function (state) {
                  if (state.route instanceof Route.Home) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "pgHome";
                      }))(Data_Ord.ordUnit)(_pgHome)(Data_Unit.unit)(Page_Home.component(dictMonadAff)(dictNavigate)(dictHasApiAccessible))(Data_Unit.unit)(Data_Void.absurd);
                  };
                  if (state.route instanceof Route.Plotdata) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "pgPlotdata";
                      }))(Data_Ord.ordUnit)(_pgPlotdata)(Data_Unit.unit)(Page_Plotdata.component(dictMonadAff)(dictNavigate)(dictHasApiAccessible))(state.route)(Data_Void.absurd);
                  };
                  if (state.route instanceof Route.Infrared) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "pgInfrared";
                      }))(Data_Ord.ordUnit)(_pgInfrared)(Data_Unit.unit)(Page_Infrared.component(dictMonadAff)(dictNavigate)(dictHasApiAccessible))(state.route)(Data_Void.absurd);
                  };
                  if (state.route instanceof Route.Settings) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "pgSettings";
                      }))(Data_Ord.ordUnit)(_pgSettings)(Data_Unit.unit)(Page_Settings.component(dictMonadAff)(dictNavigate)(dictHasApiAccessible))(Data_Unit.unit)(Data_Void.absurd);
                  };
                  if (state.route instanceof Route.About) {
                      return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                          return "pgAbout";
                      }))(Data_Ord.ordUnit)(_pgAbout)(Data_Unit.unit)(Page_About.component(dictMonadAff)(dictNavigate))(Data_Unit.unit)(Data_Void.absurd);
                  };
                  throw new Error("Failed pattern match at Main (line 98, column 16 - line 108, column 58): " + [ state.route.constructor.name ]);
              };
          };
      };
  };
  var rootComponent = function (dictMonadAff) {
      return function (dictNavigate) {
          return function (dictHasApiAccessible) {
              return Halogen_Component.mkComponent({
                  initialState: initialState,
                  render: render(dictMonadAff)(dictNavigate)(dictHasApiAccessible),
                  "eval": Halogen_Component.mkEval({
                      handleAction: Halogen_Component.defaultEval.handleAction,
                      handleQuery: handleQuery,
                      receive: Halogen_Component.defaultEval.receive,
                      initialize: Halogen_Component.defaultEval.initialize,
                      finalize: Halogen_Component.defaultEval.finalize
                  })
              });
          };
      };
  };
  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (awBody) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_PushState.makeInterface))(function (psInterface) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Location.origin)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.location)(Web_HTML.window))))(function (baseurl) {
              var env = {
                  psInterface: psInterface,
                  apiBaseURL: baseurl,
                  apiTimeout: 3600.0
              };
              return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(Halogen_Component.hoist(Halogen_HTML_Core.bifunctorHTML)(Effect_Aff.functorAff)(Data_Function.flip(AppM.runAppM)(env))(rootComponent(AppM.monadAffAppM)(AppM.navigateAppM)(AppM.hasApiAccessibleAppM)))(Data_Unit.unit)(awBody))(function (halogenIO) {
                  return Effect_Aff.forkAff(routeSignal(halogenIO)(psInterface));
              });
          });
      });
  }));
  exports["main"] = main;
})(PS);
PS["Main"].main();